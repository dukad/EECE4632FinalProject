

================================================================
== Vitis HLS Report for 'equalizer'
================================================================
* Date:           Fri Apr 26 03:08:36 2024

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:48:16 MDT 2022)
* Project:        equalizer
* Solution:       solution19 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------+---------+---------+----------+-----------+-----------+------+----------+
        |                |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Running_Loop  |        ?|        ?|   2 ~ 464|          -|          -|     ?|        no|
        +----------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 26
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 16 15 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 26 2 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 15 
26 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.94>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%tmp_out_data_V = alloca i32 1"   --->   Operation 27 'alloca' 'tmp_out_data_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_out_keep_V = alloca i32 1"   --->   Operation 28 'alloca' 'tmp_out_keep_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_out_strb_V = alloca i32 1"   --->   Operation 29 'alloca' 'tmp_out_strb_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_out_user_V = alloca i32 1"   --->   Operation 30 'alloca' 'tmp_out_user_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_out_id_V = alloca i32 1"   --->   Operation 31 'alloca' 'tmp_out_id_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_out_dest_V = alloca i32 1"   --->   Operation 32 'alloca' 'tmp_out_dest_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%read_coefs = alloca i32 1"   --->   Operation 33 'alloca' 'read_coefs' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%state = alloca i32 1"   --->   Operation 34 'alloca' 'state' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (1.00ns)   --->   "%coefs_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %coefs"   --->   Operation 35 'read' 'coefs_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%accumulate_loc = alloca i64 1"   --->   Operation 36 'alloca' 'accumulate_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_10" [equalizer.cpp:3]   --->   Operation 37 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%specinterface_ln3 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_11, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0" [equalizer.cpp:3]   --->   Operation 38 'specinterface' 'specinterface_ln3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 99, void @empty_1, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 39 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 40 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %output_r_V_data_V, i4 %output_r_V_keep_V, i4 %output_r_V_strb_V, i1 %output_r_V_user_V, i1 %output_r_V_last_V, i1 %output_r_V_id_V, i1 %output_r_V_dest_V, void @empty_3, i32 1, i32 1, void @empty_4, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 41 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %output_r_V_data_V"   --->   Operation 42 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %output_r_V_keep_V"   --->   Operation 43 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %output_r_V_strb_V"   --->   Operation 44 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %output_r_V_user_V"   --->   Operation 45 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %output_r_V_last_V"   --->   Operation 46 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %output_r_V_id_V"   --->   Operation 47 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %output_r_V_dest_V"   --->   Operation 48 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %coefs, void @empty_5, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_6, void @empty_7, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0"   --->   Operation 49 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %coefs, void @empty_9, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0"   --->   Operation 50 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V, void @empty_3, i32 1, i32 1, void @empty_4, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 51 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %input_r_V_data_V"   --->   Operation 52 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %input_r_V_keep_V"   --->   Operation 53 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %input_r_V_strb_V"   --->   Operation 54 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %input_r_V_user_V"   --->   Operation 55 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %input_r_V_last_V"   --->   Operation 56 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %input_r_V_id_V"   --->   Operation 57 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %input_r_V_dest_V"   --->   Operation 58 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %coefs_read, i32 2, i32 63" [equalizer.cpp:89]   --->   Operation 59 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%sext_ln89 = sext i62 %trunc_ln" [equalizer.cpp:89]   --->   Operation 60 'sext' 'sext_ln89' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln89" [equalizer.cpp:89]   --->   Operation 61 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (1.94ns)   --->   "%store_ln27 = store i32 0, i32 %state" [equalizer.cpp:27]   --->   Operation 62 'store' 'store_ln27' <Predicate = true> <Delay = 1.94>
ST_1 : Operation 63 [1/1] (1.58ns)   --->   "%store_ln27 = store i1 0, i1 %read_coefs" [equalizer.cpp:27]   --->   Operation 63 'store' 'store_ln27' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%br_ln27 = br void %while.body" [equalizer.cpp:27]   --->   Operation 64 'br' 'br_ln27' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.60>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_out_data_V_1 = load i32 %tmp_out_data_V"   --->   Operation 65 'load' 'tmp_out_data_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_out_keep_V_1 = load i4 %tmp_out_keep_V"   --->   Operation 66 'load' 'tmp_out_keep_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_out_strb_V_1 = load i4 %tmp_out_strb_V"   --->   Operation 67 'load' 'tmp_out_strb_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_out_user_V_1 = load i1 %tmp_out_user_V"   --->   Operation 68 'load' 'tmp_out_user_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_out_id_V_1 = load i1 %tmp_out_id_V"   --->   Operation 69 'load' 'tmp_out_id_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_out_dest_V_1 = load i1 %tmp_out_dest_V"   --->   Operation 70 'load' 'tmp_out_dest_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%state_1 = load i32 %state"   --->   Operation 71 'load' 'state_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%specloopname_ln17 = specloopname void @_ssdm_op_SpecLoopName, void @empty_15" [equalizer.cpp:17]   --->   Operation 72 'specloopname' 'specloopname_ln17' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%empty = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 73 'read' 'empty' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_data_V = extractvalue i44 %empty"   --->   Operation 74 'extractvalue' 'tmp_data_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_keep_V = extractvalue i44 %empty"   --->   Operation 75 'extractvalue' 'tmp_keep_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_strb_V = extractvalue i44 %empty"   --->   Operation 76 'extractvalue' 'tmp_strb_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_user_V = extractvalue i44 %empty"   --->   Operation 77 'extractvalue' 'tmp_user_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_last_V = extractvalue i44 %empty"   --->   Operation 78 'extractvalue' 'tmp_last_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_id_V = extractvalue i44 %empty"   --->   Operation 79 'extractvalue' 'tmp_id_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_dest_V = extractvalue i44 %empty"   --->   Operation 80 'extractvalue' 'tmp_dest_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.95ns)   --->   "%switch_ln31 = switch i32 %state_1, void %sw.epilog, i32 0, void %sw.bb, i32 16, void %sw.bb2, i32 256, void %for.inc46.preheader" [equalizer.cpp:31]   --->   Operation 81 'switch' 'switch_ln31' <Predicate = true> <Delay = 0.95>
ST_2 : Operation 82 [2/2] (3.52ns)   --->   "%call_ln0 = call void @equalizer_Pipeline_Shift_Accumulate_Loop, i32 %gmem, i64 %coefs_read, i32 %accumulate_loc, i32 %signal_shift_reg"   --->   Operation 82 'call' 'call_ln0' <Predicate = (state_1 == 256)> <Delay = 3.52> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%read_coefs_load = load i1 %read_coefs" [equalizer.cpp:43]   --->   Operation 83 'load' 'read_coefs_load' <Predicate = (state_1 == 16)> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%br_ln43 = br i1 %read_coefs_load, void %for.inc.preheader, void %if.end24" [equalizer.cpp:43]   --->   Operation 84 'br' 'br_ln43' <Predicate = (state_1 == 16)> <Delay = 0.00>
ST_2 : Operation 85 [2/2] (3.52ns)   --->   "%call_ln0 = call void @equalizer_Pipeline_Coef_Clear_Loop, i32 %gmem, i64 %coefs_read"   --->   Operation 85 'call' 'call_ln0' <Predicate = (state_1 == 16 & !read_coefs_load)> <Delay = 3.52> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 86 [1/1] (2.47ns)   --->   "%icmp_ln72 = icmp_eq  i32 %tmp_data_V, i32 43962" [equalizer.cpp:72]   --->   Operation 86 'icmp' 'icmp_ln72' <Predicate = (state_1 == 16 & read_coefs_load)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 87 [1/1] (0.68ns)   --->   "%select_ln17 = select i1 %icmp_ln72, i32 256, i32 16" [equalizer.cpp:17]   --->   Operation 87 'select' 'select_ln17' <Predicate = (state_1 == 16 & read_coefs_load)> <Delay = 0.68> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 88 [1/1] (1.58ns)   --->   "%br_ln106 = br i1 %tmp_last_V, void %if.end24.if.end66_crit_edge, void %while.end" [equalizer.cpp:106]   --->   Operation 88 'br' 'br_ln106' <Predicate = (state_1 == 16 & read_coefs_load)> <Delay = 1.58>
ST_2 : Operation 89 [1/1] (1.94ns)   --->   "%store_ln106 = store i32 %select_ln17, i32 %state" [equalizer.cpp:106]   --->   Operation 89 'store' 'store_ln106' <Predicate = (state_1 == 16 & !tmp_last_V & read_coefs_load)> <Delay = 1.94>
ST_2 : Operation 90 [1/1] (1.58ns)   --->   "%store_ln106 = store i1 1, i1 %read_coefs" [equalizer.cpp:106]   --->   Operation 90 'store' 'store_ln106' <Predicate = (state_1 == 16 & !tmp_last_V & read_coefs_load)> <Delay = 1.58>
ST_2 : Operation 91 [1/1] (0.00ns)   --->   "%br_ln106 = br void %if.end66" [equalizer.cpp:106]   --->   Operation 91 'br' 'br_ln106' <Predicate = (state_1 == 16 & !tmp_last_V & read_coefs_load)> <Delay = 0.00>
ST_2 : Operation 92 [1/1] (2.47ns)   --->   "%icmp_ln35 = icmp_eq  i32 %tmp_data_V, i32 48879" [equalizer.cpp:35]   --->   Operation 92 'icmp' 'icmp_ln35' <Predicate = (state_1 == 0)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 93 [1/1] (1.18ns)   --->   "%select_ln16 = select i1 %icmp_ln35, i32 16, i32 0" [equalizer.cpp:16]   --->   Operation 93 'select' 'select_ln16' <Predicate = (state_1 == 0)> <Delay = 1.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 94 [1/1] (1.58ns)   --->   "%br_ln106 = br i1 %tmp_last_V, void %sw.bb.if.end66_crit_edge, void %while.end" [equalizer.cpp:106]   --->   Operation 94 'br' 'br_ln106' <Predicate = (state_1 == 0)> <Delay = 1.58>
ST_2 : Operation 95 [1/1] (1.94ns)   --->   "%store_ln106 = store i32 %select_ln16, i32 %state" [equalizer.cpp:106]   --->   Operation 95 'store' 'store_ln106' <Predicate = (state_1 == 0 & !tmp_last_V)> <Delay = 1.94>
ST_2 : Operation 96 [1/1] (0.00ns)   --->   "%br_ln106 = br void %if.end66" [equalizer.cpp:106]   --->   Operation 96 'br' 'br_ln106' <Predicate = (state_1 == 0 & !tmp_last_V)> <Delay = 0.00>
ST_2 : Operation 97 [1/1] (1.58ns)   --->   "%br_ln106 = br i1 %tmp_last_V, void %if.end66, void %while.end" [equalizer.cpp:106]   --->   Operation 97 'br' 'br_ln106' <Predicate = (state_1 != 0 & state_1 != 16 & state_1 != 256)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 98 [1/2] (0.00ns)   --->   "%call_ln0 = call void @equalizer_Pipeline_Shift_Accumulate_Loop, i32 %gmem, i64 %coefs_read, i32 %accumulate_loc, i32 %signal_shift_reg"   --->   Operation 98 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 99 [7/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:89]   --->   Operation 99 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 100 [1/1] (3.25ns)   --->   "%store_ln90 = store i32 %tmp_data_V, i32 0" [equalizer.cpp:90]   --->   Operation 100 'store' 'store_ln90' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 99> <RAM>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 101 [6/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:89]   --->   Operation 101 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 102 [5/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:89]   --->   Operation 102 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 103 [4/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:89]   --->   Operation 103 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 104 [3/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:89]   --->   Operation 104 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 105 [2/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:89]   --->   Operation 105 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 106 [1/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:89]   --->   Operation 106 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 107 [1/1] (7.30ns)   --->   "%gmem_addr_read = read i32 @_ssdm_op_Read.m_axi.i32P1A, i32 %gmem_addr" [equalizer.cpp:89]   --->   Operation 107 'read' 'gmem_addr_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 6.91>
ST_12 : Operation 108 [2/2] (6.91ns)   --->   "%mul_ln89 = mul i32 %gmem_addr_read, i32 %tmp_data_V" [equalizer.cpp:89]   --->   Operation 108 'mul' 'mul_ln89' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 6.91>
ST_13 : Operation 109 [1/2] (6.91ns)   --->   "%mul_ln89 = mul i32 %gmem_addr_read, i32 %tmp_data_V" [equalizer.cpp:89]   --->   Operation 109 'mul' 'mul_ln89' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 2.55>
ST_14 : Operation 110 [1/1] (0.00ns)   --->   "%accumulate_loc_load = load i32 %accumulate_loc"   --->   Operation 110 'load' 'accumulate_loc_load' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 111 [1/1] (2.55ns)   --->   "%accumulate = add i32 %mul_ln89, i32 %accumulate_loc_load" [equalizer.cpp:89]   --->   Operation 111 'add' 'accumulate' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 112 [2/2] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %output_r_V_data_V, i4 %output_r_V_keep_V, i4 %output_r_V_strb_V, i1 %output_r_V_user_V, i1 %output_r_V_last_V, i1 %output_r_V_id_V, i1 %output_r_V_dest_V, i32 %accumulate, i4 %tmp_keep_V, i4 %tmp_strb_V, i1 %tmp_user_V, i1 %tmp_last_V, i1 %tmp_id_V, i1 %tmp_dest_V"   --->   Operation 112 'write' 'write_ln304' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 15 <SV = 14> <Delay = 1.94>
ST_15 : Operation 113 [1/2] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %output_r_V_data_V, i4 %output_r_V_keep_V, i4 %output_r_V_strb_V, i1 %output_r_V_user_V, i1 %output_r_V_last_V, i1 %output_r_V_id_V, i1 %output_r_V_dest_V, i32 %accumulate, i4 %tmp_keep_V, i4 %tmp_strb_V, i1 %tmp_user_V, i1 %tmp_last_V, i1 %tmp_id_V, i1 %tmp_dest_V"   --->   Operation 113 'write' 'write_ln304' <Predicate = (state_1 == 256)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_15 : Operation 114 [1/1] (1.58ns)   --->   "%br_ln106 = br i1 %tmp_last_V, void %for.inc46.preheader.if.end66_crit_edge, void %while.end" [equalizer.cpp:106]   --->   Operation 114 'br' 'br_ln106' <Predicate = (state_1 == 256)> <Delay = 1.58>
ST_15 : Operation 115 [1/1] (1.94ns)   --->   "%store_ln106 = store i32 256, i32 %state" [equalizer.cpp:106]   --->   Operation 115 'store' 'store_ln106' <Predicate = (state_1 == 256 & !tmp_last_V)> <Delay = 1.94>
ST_15 : Operation 116 [1/1] (0.00ns)   --->   "%store_ln106 = store i1 %tmp_dest_V, i1 %tmp_out_dest_V" [equalizer.cpp:106]   --->   Operation 116 'store' 'store_ln106' <Predicate = (state_1 == 256 & !tmp_last_V)> <Delay = 0.00>
ST_15 : Operation 117 [1/1] (0.00ns)   --->   "%store_ln106 = store i1 %tmp_id_V, i1 %tmp_out_id_V" [equalizer.cpp:106]   --->   Operation 117 'store' 'store_ln106' <Predicate = (state_1 == 256 & !tmp_last_V)> <Delay = 0.00>
ST_15 : Operation 118 [1/1] (0.00ns)   --->   "%store_ln106 = store i1 %tmp_user_V, i1 %tmp_out_user_V" [equalizer.cpp:106]   --->   Operation 118 'store' 'store_ln106' <Predicate = (state_1 == 256 & !tmp_last_V)> <Delay = 0.00>
ST_15 : Operation 119 [1/1] (0.00ns)   --->   "%store_ln106 = store i4 %tmp_strb_V, i4 %tmp_out_strb_V" [equalizer.cpp:106]   --->   Operation 119 'store' 'store_ln106' <Predicate = (state_1 == 256 & !tmp_last_V)> <Delay = 0.00>
ST_15 : Operation 120 [1/1] (0.00ns)   --->   "%store_ln106 = store i4 %tmp_keep_V, i4 %tmp_out_keep_V" [equalizer.cpp:106]   --->   Operation 120 'store' 'store_ln106' <Predicate = (state_1 == 256 & !tmp_last_V)> <Delay = 0.00>
ST_15 : Operation 121 [1/1] (0.00ns)   --->   "%store_ln106 = store i32 %accumulate, i32 %tmp_out_data_V" [equalizer.cpp:106]   --->   Operation 121 'store' 'store_ln106' <Predicate = (state_1 == 256 & !tmp_last_V)> <Delay = 0.00>
ST_15 : Operation 122 [1/1] (0.00ns)   --->   "%br_ln106 = br void %if.end66" [equalizer.cpp:106]   --->   Operation 122 'br' 'br_ln106' <Predicate = (state_1 == 256 & !tmp_last_V)> <Delay = 0.00>
ST_15 : Operation 123 [1/1] (0.00ns)   --->   "%br_ln27 = br void %while.body" [equalizer.cpp:27]   --->   Operation 123 'br' 'br_ln27' <Predicate = (!tmp_last_V & read_coefs_load) | (state_1 != 16 & !tmp_last_V) | (state_1 == 16 & !read_coefs_load & !tmp_last_V_1)> <Delay = 0.00>
ST_15 : Operation 124 [1/1] (0.00ns)   --->   "%tmp_dest_V_1 = phi i1 %tmp_out_dest_V_1, void %sw.bb, i1 %tmp_out_dest_V_1, void %if.end24, i1 %tmp_dest_V, void %for.inc46.preheader, i1 %tmp_out_dest_V_1, void %sw.epilog, i1 %tmp_out_dest_V_1, void %for.inc.preheader"   --->   Operation 124 'phi' 'tmp_dest_V_1' <Predicate = (tmp_last_V & read_coefs_load) | (state_1 != 16 & tmp_last_V) | (state_1 == 16 & !read_coefs_load & tmp_last_V_1)> <Delay = 0.00>
ST_15 : Operation 125 [1/1] (0.00ns)   --->   "%tmp_id_V_1 = phi i1 %tmp_out_id_V_1, void %sw.bb, i1 %tmp_out_id_V_1, void %if.end24, i1 %tmp_id_V, void %for.inc46.preheader, i1 %tmp_out_id_V_1, void %sw.epilog, i1 %tmp_out_id_V_1, void %for.inc.preheader"   --->   Operation 125 'phi' 'tmp_id_V_1' <Predicate = (tmp_last_V & read_coefs_load) | (state_1 != 16 & tmp_last_V) | (state_1 == 16 & !read_coefs_load & tmp_last_V_1)> <Delay = 0.00>
ST_15 : Operation 126 [1/1] (0.00ns)   --->   "%tmp_user_V_1 = phi i1 %tmp_out_user_V_1, void %sw.bb, i1 %tmp_out_user_V_1, void %if.end24, i1 %tmp_user_V, void %for.inc46.preheader, i1 %tmp_out_user_V_1, void %sw.epilog, i1 %tmp_out_user_V_1, void %for.inc.preheader"   --->   Operation 126 'phi' 'tmp_user_V_1' <Predicate = (tmp_last_V & read_coefs_load) | (state_1 != 16 & tmp_last_V) | (state_1 == 16 & !read_coefs_load & tmp_last_V_1)> <Delay = 0.00>
ST_15 : Operation 127 [1/1] (0.00ns)   --->   "%tmp_strb_V_1 = phi i4 %tmp_out_strb_V_1, void %sw.bb, i4 %tmp_out_strb_V_1, void %if.end24, i4 %tmp_strb_V, void %for.inc46.preheader, i4 %tmp_out_strb_V_1, void %sw.epilog, i4 %tmp_out_strb_V_1, void %for.inc.preheader"   --->   Operation 127 'phi' 'tmp_strb_V_1' <Predicate = (tmp_last_V & read_coefs_load) | (state_1 != 16 & tmp_last_V) | (state_1 == 16 & !read_coefs_load & tmp_last_V_1)> <Delay = 0.00>
ST_15 : Operation 128 [1/1] (0.00ns)   --->   "%tmp_keep_V_1 = phi i4 %tmp_out_keep_V_1, void %sw.bb, i4 %tmp_out_keep_V_1, void %if.end24, i4 %tmp_keep_V, void %for.inc46.preheader, i4 %tmp_out_keep_V_1, void %sw.epilog, i4 %tmp_out_keep_V_1, void %for.inc.preheader"   --->   Operation 128 'phi' 'tmp_keep_V_1' <Predicate = (tmp_last_V & read_coefs_load) | (state_1 != 16 & tmp_last_V) | (state_1 == 16 & !read_coefs_load & tmp_last_V_1)> <Delay = 0.00>
ST_15 : Operation 129 [1/1] (0.00ns)   --->   "%tmp_data_V_6 = phi i32 %tmp_out_data_V_1, void %sw.bb, i32 %tmp_out_data_V_1, void %if.end24, i32 %accumulate, void %for.inc46.preheader, i32 %tmp_out_data_V_1, void %sw.epilog, i32 %tmp_out_data_V_1, void %for.inc.preheader"   --->   Operation 129 'phi' 'tmp_data_V_6' <Predicate = (tmp_last_V & read_coefs_load) | (state_1 != 16 & tmp_last_V) | (state_1 == 16 & !read_coefs_load & tmp_last_V_1)> <Delay = 0.00>
ST_15 : Operation 130 [2/2] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %output_r_V_data_V, i4 %output_r_V_keep_V, i4 %output_r_V_strb_V, i1 %output_r_V_user_V, i1 %output_r_V_last_V, i1 %output_r_V_id_V, i1 %output_r_V_dest_V, i32 %tmp_data_V_6, i4 %tmp_keep_V_1, i4 %tmp_strb_V_1, i1 %tmp_user_V_1, i1 1, i1 %tmp_id_V_1, i1 %tmp_dest_V_1"   --->   Operation 130 'write' 'write_ln304' <Predicate = (tmp_last_V & read_coefs_load) | (state_1 != 16 & tmp_last_V) | (state_1 == 16 & !read_coefs_load & tmp_last_V_1)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 16 <SV = 2> <Delay = 0.00>
ST_16 : Operation 131 [1/2] (0.00ns)   --->   "%call_ln0 = call void @equalizer_Pipeline_Coef_Clear_Loop, i32 %gmem, i64 %coefs_read"   --->   Operation 131 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 3> <Delay = 3.52>
ST_17 : Operation 132 [1/1] (0.00ns)   --->   "%empty_24 = wait i32 @_ssdm_op_Wait"   --->   Operation 132 'wait' 'empty_24' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 133 [2/2] (3.52ns)   --->   "%call_ln283 = call void @equalizer_Pipeline_VITIS_LOOP_58_1, i32 %gmem, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V, i32 %tmp_data_V, i64 %coefs_read"   --->   Operation 133 'call' 'call_ln283' <Predicate = true> <Delay = 3.52> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 4> <Delay = 0.00>
ST_18 : Operation 134 [1/2] (0.00ns)   --->   "%call_ln283 = call void @equalizer_Pipeline_VITIS_LOOP_58_1, i32 %gmem, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V, i32 %tmp_data_V, i64 %coefs_read"   --->   Operation 134 'call' 'call_ln283' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 19 <SV = 5> <Delay = 0.00>
ST_19 : Operation 135 [1/1] (0.00ns)   --->   "%empty_25 = wait i32 @_ssdm_op_Wait"   --->   Operation 135 'wait' 'empty_25' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 136 [1/1] (0.00ns)   --->   "%empty_26 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 136 'read' 'empty_26' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_19 : Operation 137 [1/1] (0.00ns)   --->   "%tmp_data_V_7 = extractvalue i44 %empty_26"   --->   Operation 137 'extractvalue' 'tmp_data_V_7' <Predicate = true> <Delay = 0.00>

State 20 <SV = 6> <Delay = 3.52>
ST_20 : Operation 138 [1/1] (0.00ns)   --->   "%empty_27 = wait i32 @_ssdm_op_Wait"   --->   Operation 138 'wait' 'empty_27' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 139 [2/2] (3.52ns)   --->   "%call_ln283 = call void @equalizer_Pipeline_VITIS_LOOP_58_11, i32 %gmem, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V, i32 %tmp_data_V_7, i64 %coefs_read"   --->   Operation 139 'call' 'call_ln283' <Predicate = true> <Delay = 3.52> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 7> <Delay = 0.00>
ST_21 : Operation 140 [1/2] (0.00ns)   --->   "%call_ln283 = call void @equalizer_Pipeline_VITIS_LOOP_58_11, i32 %gmem, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V, i32 %tmp_data_V_7, i64 %coefs_read"   --->   Operation 140 'call' 'call_ln283' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 8> <Delay = 0.00>
ST_22 : Operation 141 [1/1] (0.00ns)   --->   "%empty_28 = wait i32 @_ssdm_op_Wait"   --->   Operation 141 'wait' 'empty_28' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 142 [1/1] (0.00ns)   --->   "%empty_29 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 142 'read' 'empty_29' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_22 : Operation 143 [1/1] (0.00ns)   --->   "%tmp_data_V_8 = extractvalue i44 %empty_29"   --->   Operation 143 'extractvalue' 'tmp_data_V_8' <Predicate = true> <Delay = 0.00>

State 23 <SV = 9> <Delay = 3.52>
ST_23 : Operation 144 [1/1] (0.00ns)   --->   "%empty_30 = wait i32 @_ssdm_op_Wait"   --->   Operation 144 'wait' 'empty_30' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 145 [2/2] (3.52ns)   --->   "%call_ln283 = call void @equalizer_Pipeline_VITIS_LOOP_58_12, i32 %gmem, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V, i32 %tmp_data_V_8, i64 %coefs_read"   --->   Operation 145 'call' 'call_ln283' <Predicate = true> <Delay = 3.52> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 24 <SV = 10> <Delay = 0.00>
ST_24 : Operation 146 [1/2] (0.00ns)   --->   "%call_ln283 = call void @equalizer_Pipeline_VITIS_LOOP_58_12, i32 %gmem, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V, i32 %tmp_data_V_8, i64 %coefs_read"   --->   Operation 146 'call' 'call_ln283' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 25 <SV = 11> <Delay = 5.10>
ST_25 : Operation 147 [1/1] (0.00ns)   --->   "%empty_31 = wait i32 @_ssdm_op_Wait"   --->   Operation 147 'wait' 'empty_31' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 148 [1/1] (0.00ns)   --->   "%empty_32 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 148 'read' 'empty_32' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_25 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln72_1)   --->   "%tmp_data_V_5 = extractvalue i44 %empty_32"   --->   Operation 149 'extractvalue' 'tmp_data_V_5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 150 [1/1] (0.00ns)   --->   "%tmp_last_V_1 = extractvalue i44 %empty_32"   --->   Operation 150 'extractvalue' 'tmp_last_V_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 151 [1/1] (2.47ns) (out node of the LUT)   --->   "%icmp_ln72_1 = icmp_eq  i32 %tmp_data_V_5, i32 43962" [equalizer.cpp:72]   --->   Operation 151 'icmp' 'icmp_ln72_1' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 152 [1/1] (0.68ns)   --->   "%select_ln17_1 = select i1 %icmp_ln72_1, i32 256, i32 16" [equalizer.cpp:17]   --->   Operation 152 'select' 'select_ln17_1' <Predicate = true> <Delay = 0.68> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 153 [1/1] (1.58ns)   --->   "%br_ln106 = br i1 %tmp_last_V_1, void %for.inc.preheader.if.end66_crit_edge, void %while.end" [equalizer.cpp:106]   --->   Operation 153 'br' 'br_ln106' <Predicate = true> <Delay = 1.58>
ST_25 : Operation 154 [1/1] (1.94ns)   --->   "%store_ln106 = store i32 %select_ln17_1, i32 %state" [equalizer.cpp:106]   --->   Operation 154 'store' 'store_ln106' <Predicate = (!tmp_last_V_1)> <Delay = 1.94>
ST_25 : Operation 155 [1/1] (1.58ns)   --->   "%store_ln106 = store i1 1, i1 %read_coefs" [equalizer.cpp:106]   --->   Operation 155 'store' 'store_ln106' <Predicate = (!tmp_last_V_1)> <Delay = 1.58>
ST_25 : Operation 156 [1/1] (0.00ns)   --->   "%br_ln106 = br void %if.end66" [equalizer.cpp:106]   --->   Operation 156 'br' 'br_ln106' <Predicate = (!tmp_last_V_1)> <Delay = 0.00>

State 26 <SV = 15> <Delay = 0.00>
ST_26 : Operation 157 [1/2] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %output_r_V_data_V, i4 %output_r_V_keep_V, i4 %output_r_V_strb_V, i1 %output_r_V_user_V, i1 %output_r_V_last_V, i1 %output_r_V_id_V, i1 %output_r_V_dest_V, i32 %tmp_data_V_6, i4 %tmp_keep_V_1, i4 %tmp_strb_V_1, i1 %tmp_user_V_1, i1 1, i1 %tmp_id_V_1, i1 %tmp_dest_V_1"   --->   Operation 157 'write' 'write_ln304' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_26 : Operation 158 [1/1] (0.00ns)   --->   "%ret_ln113 = ret" [equalizer.cpp:113]   --->   Operation 158 'ret' 'ret_ln113' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.95ns
The critical path consists of the following:
	'alloca' operation ('state') [25]  (0 ns)
	'store' operation ('store_ln27', equalizer.cpp:27) of constant 0 on local variable 'state' [53]  (1.95 ns)

 <State 2>: 5.61ns
The critical path consists of the following:
	axis read operation ('empty') on port 'input_r_V_data_V' [65]  (0 ns)
	'icmp' operation ('icmp_ln35', equalizer.cpp:35) [130]  (2.47 ns)
	'select' operation ('select_ln16', equalizer.cpp:16) [131]  (1.19 ns)
	'store' operation ('store_ln106', equalizer.cpp:106) of variable 'select_ln16', equalizer.cpp:16 on local variable 'state' [134]  (1.95 ns)

 <State 3>: 0ns
The critical path consists of the following:

 <State 4>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:89) on port 'gmem' (equalizer.cpp:89) [77]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:89) on port 'gmem' (equalizer.cpp:89) [77]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:89) on port 'gmem' (equalizer.cpp:89) [77]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:89) on port 'gmem' (equalizer.cpp:89) [77]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:89) on port 'gmem' (equalizer.cpp:89) [77]  (7.3 ns)

 <State 9>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:89) on port 'gmem' (equalizer.cpp:89) [77]  (7.3 ns)

 <State 10>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:89) on port 'gmem' (equalizer.cpp:89) [77]  (7.3 ns)

 <State 11>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read', equalizer.cpp:89) on port 'gmem' (equalizer.cpp:89) [78]  (7.3 ns)

 <State 12>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln89', equalizer.cpp:89) [79]  (6.91 ns)

 <State 13>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln89', equalizer.cpp:89) [79]  (6.91 ns)

 <State 14>: 2.55ns
The critical path consists of the following:
	'load' operation ('accumulate_loc_load') on local variable 'accumulate_loc' [76]  (0 ns)
	'add' operation ('accumulate', equalizer.cpp:89) [80]  (2.55 ns)

 <State 15>: 1.95ns
The critical path consists of the following:
	'store' operation ('store_ln106', equalizer.cpp:106) of constant 256 on local variable 'state' [85]  (1.95 ns)

 <State 16>: 0ns
The critical path consists of the following:

 <State 17>: 3.52ns
The critical path consists of the following:
	'call' operation ('call_ln283') to 'equalizer_Pipeline_VITIS_LOOP_58_1' [99]  (3.52 ns)

 <State 18>: 0ns
The critical path consists of the following:

 <State 19>: 0ns
The critical path consists of the following:

 <State 20>: 3.52ns
The critical path consists of the following:
	'call' operation ('call_ln283') to 'equalizer_Pipeline_VITIS_LOOP_58_11' [104]  (3.52 ns)

 <State 21>: 0ns
The critical path consists of the following:

 <State 22>: 0ns
The critical path consists of the following:

 <State 23>: 3.52ns
The critical path consists of the following:
	'call' operation ('call_ln283') to 'equalizer_Pipeline_VITIS_LOOP_58_12' [109]  (3.52 ns)

 <State 24>: 0ns
The critical path consists of the following:

 <State 25>: 5.11ns
The critical path consists of the following:
	axis read operation ('empty_32') on port 'input_r_V_data_V' [111]  (0 ns)
	'icmp' operation ('icmp_ln72_1', equalizer.cpp:72) [114]  (2.47 ns)
	'select' operation ('select_ln17_1', equalizer.cpp:17) [115]  (0.687 ns)
	'store' operation ('store_ln106', equalizer.cpp:106) of variable 'select_ln17_1', equalizer.cpp:17 on local variable 'state' [118]  (1.95 ns)

 <State 26>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
