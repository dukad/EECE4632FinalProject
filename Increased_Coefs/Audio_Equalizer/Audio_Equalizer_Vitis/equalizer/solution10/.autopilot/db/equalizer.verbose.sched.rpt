

================================================================
== Vitis HLS Report for 'equalizer'
================================================================
* Date:           Wed Apr 24 14:59:16 2024

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:48:16 MDT 2022)
* Project:        equalizer
* Solution:       solution10 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Running_Loop      |        ?|        ?|  2 ~ 1150|          -|          -|     ?|        no|
        | + Coef_Clear_Loop  |      792|      792|         8|          -|          -|    99|        no|
        | + Coef_Read_Loop   |      354|      354|       118|          -|          -|     3|        no|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 27
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 16 15 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 27 2 
16 --> 17 24 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 16 
24 --> 25 15 
25 --> 26 
26 --> 24 
27 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.82>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_out_data_V = alloca i32 1"   --->   Operation 28 'alloca' 'tmp_out_data_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_out_keep_V = alloca i32 1"   --->   Operation 29 'alloca' 'tmp_out_keep_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_out_strb_V = alloca i32 1"   --->   Operation 30 'alloca' 'tmp_out_strb_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_out_user_V = alloca i32 1"   --->   Operation 31 'alloca' 'tmp_out_user_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_out_id_V = alloca i32 1"   --->   Operation 32 'alloca' 'tmp_out_id_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_out_dest_V = alloca i32 1"   --->   Operation 33 'alloca' 'tmp_out_dest_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%state = alloca i32 1"   --->   Operation 34 'alloca' 'state' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (1.00ns)   --->   "%coefs_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %coefs"   --->   Operation 35 'read' 'coefs_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%accumulate_loc = alloca i64 1"   --->   Operation 36 'alloca' 'accumulate_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%spectopmodule_ln4 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_10" [equalizer.cpp:4]   --->   Operation 37 'spectopmodule' 'spectopmodule_ln4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%specinterface_ln4 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_11, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0" [equalizer.cpp:4]   --->   Operation 38 'specinterface' 'specinterface_ln4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 99, void @empty_1, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 39 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 40 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %output_r_V_data_V, i4 %output_r_V_keep_V, i4 %output_r_V_strb_V, i1 %output_r_V_user_V, i1 %output_r_V_last_V, i1 %output_r_V_id_V, i1 %output_r_V_dest_V, void @empty_3, i32 1, i32 1, void @empty_4, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 41 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %output_r_V_data_V"   --->   Operation 42 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %output_r_V_keep_V"   --->   Operation 43 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %output_r_V_strb_V"   --->   Operation 44 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %output_r_V_user_V"   --->   Operation 45 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %output_r_V_last_V"   --->   Operation 46 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %output_r_V_id_V"   --->   Operation 47 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %output_r_V_dest_V"   --->   Operation 48 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %coefs, void @empty_5, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_6, void @empty_7, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0"   --->   Operation 49 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %coefs, void @empty_9, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0"   --->   Operation 50 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V, void @empty_3, i32 1, i32 1, void @empty_4, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 51 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %input_r_V_data_V"   --->   Operation 52 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %input_r_V_keep_V"   --->   Operation 53 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %input_r_V_strb_V"   --->   Operation 54 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %input_r_V_user_V"   --->   Operation 55 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %input_r_V_last_V"   --->   Operation 56 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %input_r_V_id_V"   --->   Operation 57 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %input_r_V_dest_V"   --->   Operation 58 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%coefs_2 = alloca i64 1" [equalizer.cpp:22]   --->   Operation 59 'alloca' 'coefs_2' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 99> <RAM>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %coefs_read, i32 2, i32 63" [equalizer.cpp:86]   --->   Operation 60 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%sext_ln86 = sext i62 %trunc_ln" [equalizer.cpp:86]   --->   Operation 61 'sext' 'sext_ln86' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln86" [equalizer.cpp:86]   --->   Operation 62 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (1.82ns)   --->   "%store_ln29 = store i32 0, i32 %state" [equalizer.cpp:29]   --->   Operation 63 'store' 'store_ln29' <Predicate = true> <Delay = 1.82>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%br_ln29 = br void %while.body" [equalizer.cpp:29]   --->   Operation 64 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.48>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_out_data_V_1 = load i32 %tmp_out_data_V"   --->   Operation 65 'load' 'tmp_out_data_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_out_keep_V_1 = load i4 %tmp_out_keep_V"   --->   Operation 66 'load' 'tmp_out_keep_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_out_strb_V_1 = load i4 %tmp_out_strb_V"   --->   Operation 67 'load' 'tmp_out_strb_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_out_user_V_1 = load i1 %tmp_out_user_V"   --->   Operation 68 'load' 'tmp_out_user_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_out_id_V_1 = load i1 %tmp_out_id_V"   --->   Operation 69 'load' 'tmp_out_id_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_out_dest_V_1 = load i1 %tmp_out_dest_V"   --->   Operation 70 'load' 'tmp_out_dest_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%state_1 = load i32 %state"   --->   Operation 71 'load' 'state_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%specloopname_ln19 = specloopname void @_ssdm_op_SpecLoopName, void @empty_16" [equalizer.cpp:19]   --->   Operation 72 'specloopname' 'specloopname_ln19' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%empty = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 73 'read' 'empty' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_data_V = extractvalue i44 %empty"   --->   Operation 74 'extractvalue' 'tmp_data_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_keep_V = extractvalue i44 %empty"   --->   Operation 75 'extractvalue' 'tmp_keep_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_strb_V = extractvalue i44 %empty"   --->   Operation 76 'extractvalue' 'tmp_strb_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_user_V = extractvalue i44 %empty"   --->   Operation 77 'extractvalue' 'tmp_user_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_last_V = extractvalue i44 %empty"   --->   Operation 78 'extractvalue' 'tmp_last_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_id_V = extractvalue i44 %empty"   --->   Operation 79 'extractvalue' 'tmp_id_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_dest_V = extractvalue i44 %empty"   --->   Operation 80 'extractvalue' 'tmp_dest_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.95ns)   --->   "%switch_ln34 = switch i32 %state_1, void %sw.epilog, i32 0, void %sw.bb, i32 17, void %for.inc.preheader, i32 4096, void %for.inc62.preheader" [equalizer.cpp:34]   --->   Operation 81 'switch' 'switch_ln34' <Predicate = true> <Delay = 0.95>
ST_2 : Operation 82 [2/2] (3.52ns)   --->   "%call_ln0 = call void @equalizer_Pipeline_Shift_Accumulate_Loop, i32 %gmem, i64 %coefs_read, i32 %accumulate_loc, i32 %signal_shift_reg"   --->   Operation 82 'call' 'call_ln0' <Predicate = (state_1 == 4096)> <Delay = 3.52> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 83 [1/1] (1.58ns)   --->   "%br_ln44 = br void %for.inc" [equalizer.cpp:44]   --->   Operation 83 'br' 'br_ln44' <Predicate = (state_1 == 17)> <Delay = 1.58>
ST_2 : Operation 84 [1/1] (2.47ns)   --->   "%icmp_ln36 = icmp_eq  i32 %tmp_data_V, i32 48879" [equalizer.cpp:36]   --->   Operation 84 'icmp' 'icmp_ln36' <Predicate = (state_1 == 0)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 85 [1/1] (1.18ns)   --->   "%select_ln18 = select i1 %icmp_ln36, i32 17, i32 0" [equalizer.cpp:18]   --->   Operation 85 'select' 'select_ln18' <Predicate = (state_1 == 0)> <Delay = 1.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 86 [1/1] (1.58ns)   --->   "%br_ln102 = br i1 %tmp_last_V, void %sw.bb.if.end85_crit_edge, void %while.end" [equalizer.cpp:102]   --->   Operation 86 'br' 'br_ln102' <Predicate = (state_1 == 0)> <Delay = 1.58>
ST_2 : Operation 87 [1/1] (1.82ns)   --->   "%store_ln102 = store i32 %select_ln18, i32 %state" [equalizer.cpp:102]   --->   Operation 87 'store' 'store_ln102' <Predicate = (state_1 == 0 & !tmp_last_V)> <Delay = 1.82>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%br_ln102 = br void %if.end85" [equalizer.cpp:102]   --->   Operation 88 'br' 'br_ln102' <Predicate = (state_1 == 0 & !tmp_last_V)> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (1.58ns)   --->   "%br_ln102 = br i1 %tmp_last_V, void %if.end85, void %while.end" [equalizer.cpp:102]   --->   Operation 89 'br' 'br_ln102' <Predicate = (state_1 != 0 & state_1 != 17 & state_1 != 4096)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 90 [1/2] (0.00ns)   --->   "%call_ln0 = call void @equalizer_Pipeline_Shift_Accumulate_Loop, i32 %gmem, i64 %coefs_read, i32 %accumulate_loc, i32 %signal_shift_reg"   --->   Operation 90 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 91 [7/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:86]   --->   Operation 91 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 92 [1/1] (3.25ns)   --->   "%store_ln87 = store i32 %tmp_data_V, i32 0" [equalizer.cpp:87]   --->   Operation 92 'store' 'store_ln87' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 99> <RAM>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 93 [6/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:86]   --->   Operation 93 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 94 [5/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:86]   --->   Operation 94 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 95 [4/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:86]   --->   Operation 95 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 96 [3/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:86]   --->   Operation 96 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 97 [2/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:86]   --->   Operation 97 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 98 [1/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:86]   --->   Operation 98 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 99 [1/1] (7.30ns)   --->   "%gmem_addr_read = read i32 @_ssdm_op_Read.m_axi.i32P1A, i32 %gmem_addr" [equalizer.cpp:86]   --->   Operation 99 'read' 'gmem_addr_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 6.91>
ST_12 : Operation 100 [2/2] (6.91ns)   --->   "%mul_ln86 = mul i32 %gmem_addr_read, i32 %tmp_data_V" [equalizer.cpp:86]   --->   Operation 100 'mul' 'mul_ln86' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 6.91>
ST_13 : Operation 101 [1/2] (6.91ns)   --->   "%mul_ln86 = mul i32 %gmem_addr_read, i32 %tmp_data_V" [equalizer.cpp:86]   --->   Operation 101 'mul' 'mul_ln86' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 2.55>
ST_14 : Operation 102 [1/1] (0.00ns)   --->   "%accumulate_loc_load = load i32 %accumulate_loc"   --->   Operation 102 'load' 'accumulate_loc_load' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 103 [1/1] (2.55ns)   --->   "%accumulate = add i32 %mul_ln86, i32 %accumulate_loc_load" [equalizer.cpp:86]   --->   Operation 103 'add' 'accumulate' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 104 [2/2] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %output_r_V_data_V, i4 %output_r_V_keep_V, i4 %output_r_V_strb_V, i1 %output_r_V_user_V, i1 %output_r_V_last_V, i1 %output_r_V_id_V, i1 %output_r_V_dest_V, i32 %accumulate, i4 %tmp_keep_V, i4 %tmp_strb_V, i1 %tmp_user_V, i1 %tmp_last_V, i1 %tmp_id_V, i1 %tmp_dest_V"   --->   Operation 104 'write' 'write_ln304' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 15 <SV = 14> <Delay = 1.82>
ST_15 : Operation 105 [1/2] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %output_r_V_data_V, i4 %output_r_V_keep_V, i4 %output_r_V_strb_V, i1 %output_r_V_user_V, i1 %output_r_V_last_V, i1 %output_r_V_id_V, i1 %output_r_V_dest_V, i32 %accumulate, i4 %tmp_keep_V, i4 %tmp_strb_V, i1 %tmp_user_V, i1 %tmp_last_V, i1 %tmp_id_V, i1 %tmp_dest_V"   --->   Operation 105 'write' 'write_ln304' <Predicate = (state_1 == 4096)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_15 : Operation 106 [1/1] (1.58ns)   --->   "%br_ln102 = br i1 %tmp_last_V, void %for.inc62.preheader.if.end85_crit_edge, void %while.end" [equalizer.cpp:102]   --->   Operation 106 'br' 'br_ln102' <Predicate = (state_1 == 4096)> <Delay = 1.58>
ST_15 : Operation 107 [1/1] (1.82ns)   --->   "%store_ln102 = store i32 4096, i32 %state" [equalizer.cpp:102]   --->   Operation 107 'store' 'store_ln102' <Predicate = (state_1 == 4096 & !tmp_last_V)> <Delay = 1.82>
ST_15 : Operation 108 [1/1] (0.00ns)   --->   "%store_ln102 = store i1 %tmp_dest_V, i1 %tmp_out_dest_V" [equalizer.cpp:102]   --->   Operation 108 'store' 'store_ln102' <Predicate = (state_1 == 4096 & !tmp_last_V)> <Delay = 0.00>
ST_15 : Operation 109 [1/1] (0.00ns)   --->   "%store_ln102 = store i1 %tmp_id_V, i1 %tmp_out_id_V" [equalizer.cpp:102]   --->   Operation 109 'store' 'store_ln102' <Predicate = (state_1 == 4096 & !tmp_last_V)> <Delay = 0.00>
ST_15 : Operation 110 [1/1] (0.00ns)   --->   "%store_ln102 = store i1 %tmp_user_V, i1 %tmp_out_user_V" [equalizer.cpp:102]   --->   Operation 110 'store' 'store_ln102' <Predicate = (state_1 == 4096 & !tmp_last_V)> <Delay = 0.00>
ST_15 : Operation 111 [1/1] (0.00ns)   --->   "%store_ln102 = store i4 %tmp_strb_V, i4 %tmp_out_strb_V" [equalizer.cpp:102]   --->   Operation 111 'store' 'store_ln102' <Predicate = (state_1 == 4096 & !tmp_last_V)> <Delay = 0.00>
ST_15 : Operation 112 [1/1] (0.00ns)   --->   "%store_ln102 = store i4 %tmp_keep_V, i4 %tmp_out_keep_V" [equalizer.cpp:102]   --->   Operation 112 'store' 'store_ln102' <Predicate = (state_1 == 4096 & !tmp_last_V)> <Delay = 0.00>
ST_15 : Operation 113 [1/1] (0.00ns)   --->   "%store_ln102 = store i32 %accumulate, i32 %tmp_out_data_V" [equalizer.cpp:102]   --->   Operation 113 'store' 'store_ln102' <Predicate = (state_1 == 4096 & !tmp_last_V)> <Delay = 0.00>
ST_15 : Operation 114 [1/1] (0.00ns)   --->   "%br_ln102 = br void %if.end85" [equalizer.cpp:102]   --->   Operation 114 'br' 'br_ln102' <Predicate = (state_1 == 4096 & !tmp_last_V)> <Delay = 0.00>
ST_15 : Operation 115 [1/1] (0.00ns)   --->   "%br_ln29 = br void %while.body" [equalizer.cpp:29]   --->   Operation 115 'br' 'br_ln29' <Predicate = (state_1 != 17 & !tmp_last_V) | (state_1 == 17 & !p_4_0_0_0134_phi)> <Delay = 0.00>
ST_15 : Operation 116 [1/1] (0.00ns)   --->   "%tmp_dest_V_1 = phi i1 %tmp_out_dest_V_1, void %sw.bb, i1 %tmp_out_dest_V_1, void %for.end40, i1 %tmp_dest_V, void %for.inc62.preheader, i1 %tmp_out_dest_V_1, void %sw.epilog"   --->   Operation 116 'phi' 'tmp_dest_V_1' <Predicate = (state_1 != 17 & tmp_last_V) | (state_1 == 17 & p_4_0_0_0134_phi)> <Delay = 0.00>
ST_15 : Operation 117 [1/1] (0.00ns)   --->   "%tmp_id_V_1 = phi i1 %tmp_out_id_V_1, void %sw.bb, i1 %tmp_out_id_V_1, void %for.end40, i1 %tmp_id_V, void %for.inc62.preheader, i1 %tmp_out_id_V_1, void %sw.epilog"   --->   Operation 117 'phi' 'tmp_id_V_1' <Predicate = (state_1 != 17 & tmp_last_V) | (state_1 == 17 & p_4_0_0_0134_phi)> <Delay = 0.00>
ST_15 : Operation 118 [1/1] (0.00ns)   --->   "%tmp_user_V_1 = phi i1 %tmp_out_user_V_1, void %sw.bb, i1 %tmp_out_user_V_1, void %for.end40, i1 %tmp_user_V, void %for.inc62.preheader, i1 %tmp_out_user_V_1, void %sw.epilog"   --->   Operation 118 'phi' 'tmp_user_V_1' <Predicate = (state_1 != 17 & tmp_last_V) | (state_1 == 17 & p_4_0_0_0134_phi)> <Delay = 0.00>
ST_15 : Operation 119 [1/1] (0.00ns)   --->   "%tmp_strb_V_1 = phi i4 %tmp_out_strb_V_1, void %sw.bb, i4 %tmp_out_strb_V_1, void %for.end40, i4 %tmp_strb_V, void %for.inc62.preheader, i4 %tmp_out_strb_V_1, void %sw.epilog"   --->   Operation 119 'phi' 'tmp_strb_V_1' <Predicate = (state_1 != 17 & tmp_last_V) | (state_1 == 17 & p_4_0_0_0134_phi)> <Delay = 0.00>
ST_15 : Operation 120 [1/1] (0.00ns)   --->   "%tmp_keep_V_1 = phi i4 %tmp_out_keep_V_1, void %sw.bb, i4 %tmp_out_keep_V_1, void %for.end40, i4 %tmp_keep_V, void %for.inc62.preheader, i4 %tmp_out_keep_V_1, void %sw.epilog"   --->   Operation 120 'phi' 'tmp_keep_V_1' <Predicate = (state_1 != 17 & tmp_last_V) | (state_1 == 17 & p_4_0_0_0134_phi)> <Delay = 0.00>
ST_15 : Operation 121 [1/1] (0.00ns)   --->   "%tmp_data_V_4 = phi i32 %tmp_out_data_V_1, void %sw.bb, i32 %tmp_out_data_V_1, void %for.end40, i32 %accumulate, void %for.inc62.preheader, i32 %tmp_out_data_V_1, void %sw.epilog"   --->   Operation 121 'phi' 'tmp_data_V_4' <Predicate = (state_1 != 17 & tmp_last_V) | (state_1 == 17 & p_4_0_0_0134_phi)> <Delay = 0.00>
ST_15 : Operation 122 [2/2] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %output_r_V_data_V, i4 %output_r_V_keep_V, i4 %output_r_V_strb_V, i1 %output_r_V_user_V, i1 %output_r_V_last_V, i1 %output_r_V_id_V, i1 %output_r_V_dest_V, i32 %tmp_data_V_4, i4 %tmp_keep_V_1, i4 %tmp_strb_V_1, i1 %tmp_user_V_1, i1 1, i1 %tmp_id_V_1, i1 %tmp_dest_V_1"   --->   Operation 122 'write' 'write_ln304' <Predicate = (state_1 != 17 & tmp_last_V) | (state_1 == 17 & p_4_0_0_0134_phi)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 16 <SV = 2> <Delay = 3.52>
ST_16 : Operation 123 [1/1] (0.00ns)   --->   "%i = phi i8 %add_ln44, void %for.inc.split, i8 98, void %for.inc.preheader" [equalizer.cpp:44]   --->   Operation 123 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 124 [1/1] (0.00ns)   --->   "%zext_ln44 = zext i8 %i" [equalizer.cpp:44]   --->   Operation 124 'zext' 'zext_ln44' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 125 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %i, i32 7" [equalizer.cpp:44]   --->   Operation 125 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 126 [1/1] (0.00ns)   --->   "%empty_23 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 99, i64 99, i64 99"   --->   Operation 126 'speclooptripcount' 'empty_23' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 127 [1/1] (0.00ns)   --->   "%br_ln44 = br i1 %tmp, void %for.inc.split, void %VITIS_LOOP_53_1.preheader" [equalizer.cpp:44]   --->   Operation 127 'br' 'br_ln44' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 128 [1/1] (0.00ns)   --->   "%trunc_ln45 = trunc i8 %i" [equalizer.cpp:45]   --->   Operation 128 'trunc' 'trunc_ln45' <Predicate = (!tmp)> <Delay = 0.00>
ST_16 : Operation 129 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i7.i2, i7 %trunc_ln45, i2 0" [equalizer.cpp:45]   --->   Operation 129 'bitconcatenate' 'shl_ln' <Predicate = (!tmp)> <Delay = 0.00>
ST_16 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln45 = zext i9 %shl_ln" [equalizer.cpp:45]   --->   Operation 130 'zext' 'zext_ln45' <Predicate = (!tmp)> <Delay = 0.00>
ST_16 : Operation 131 [1/1] (3.52ns)   --->   "%add_ln45 = add i64 %zext_ln45, i64 %coefs_read" [equalizer.cpp:45]   --->   Operation 131 'add' 'add_ln45' <Predicate = (!tmp)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 132 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln45, i32 2, i32 63" [equalizer.cpp:45]   --->   Operation 132 'partselect' 'trunc_ln1' <Predicate = (!tmp)> <Delay = 0.00>
ST_16 : Operation 133 [1/1] (0.00ns)   --->   "%sext_ln45 = sext i62 %trunc_ln1" [equalizer.cpp:45]   --->   Operation 133 'sext' 'sext_ln45' <Predicate = (!tmp)> <Delay = 0.00>
ST_16 : Operation 134 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i32 %gmem, i64 %sext_ln45" [equalizer.cpp:45]   --->   Operation 134 'getelementptr' 'gmem_addr_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_16 : Operation 135 [1/1] (0.00ns)   --->   "%coefs_2_addr = getelementptr i32 %coefs_2, i64 0, i64 %zext_ln44" [equalizer.cpp:46]   --->   Operation 135 'getelementptr' 'coefs_2_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_16 : Operation 136 [1/1] (3.25ns)   --->   "%store_ln46 = store i32 0, i7 %coefs_2_addr" [equalizer.cpp:46]   --->   Operation 136 'store' 'store_ln46' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 99> <RAM>
ST_16 : Operation 137 [1/1] (1.91ns)   --->   "%add_ln44 = add i8 %i, i8 255" [equalizer.cpp:44]   --->   Operation 137 'add' 'add_ln44' <Predicate = (!tmp)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 138 [1/1] (1.58ns)   --->   "%br_ln49 = br void %VITIS_LOOP_53_1" [equalizer.cpp:49]   --->   Operation 138 'br' 'br_ln49' <Predicate = (tmp)> <Delay = 1.58>

State 17 <SV = 3> <Delay = 7.30>
ST_17 : Operation 139 [1/1] (7.30ns)   --->   "%gmem_addr_1_req = writereq i1 @_ssdm_op_WriteReq.m_axi.i32P1A, i32 %gmem_addr_1, i32 1" [equalizer.cpp:45]   --->   Operation 139 'writereq' 'gmem_addr_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 4> <Delay = 7.30>
ST_18 : Operation 140 [1/1] (7.30ns)   --->   "%write_ln45 = write void @_ssdm_op_Write.m_axi.i32P1A, i32 %gmem_addr_1, i32 0, i4 15" [equalizer.cpp:45]   --->   Operation 140 'write' 'write_ln45' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 5> <Delay = 7.30>
ST_19 : Operation 141 [5/5] (7.30ns)   --->   "%gmem_addr_1_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr_1" [equalizer.cpp:45]   --->   Operation 141 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 6> <Delay = 7.30>
ST_20 : Operation 142 [4/5] (7.30ns)   --->   "%gmem_addr_1_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr_1" [equalizer.cpp:45]   --->   Operation 142 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 7> <Delay = 7.30>
ST_21 : Operation 143 [3/5] (7.30ns)   --->   "%gmem_addr_1_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr_1" [equalizer.cpp:45]   --->   Operation 143 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 8> <Delay = 7.30>
ST_22 : Operation 144 [2/5] (7.30ns)   --->   "%gmem_addr_1_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr_1" [equalizer.cpp:45]   --->   Operation 144 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 9> <Delay = 7.30>
ST_23 : Operation 145 [1/1] (0.00ns)   --->   "%specloopname_ln10 = specloopname void @_ssdm_op_SpecLoopName, void @empty_13" [equalizer.cpp:10]   --->   Operation 145 'specloopname' 'specloopname_ln10' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 146 [1/5] (7.30ns)   --->   "%gmem_addr_1_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr_1" [equalizer.cpp:45]   --->   Operation 146 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 147 [1/1] (0.00ns)   --->   "%br_ln44 = br void %for.inc" [equalizer.cpp:44]   --->   Operation 147 'br' 'br_ln44' <Predicate = true> <Delay = 0.00>

State 24 <SV = 3> <Delay = 5.00>
ST_24 : Operation 148 [1/1] (0.00ns)   --->   "%j = phi i2 %j_1, void %VITIS_LOOP_53_1.split, i2 0, void %VITIS_LOOP_53_1.preheader"   --->   Operation 148 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 149 [1/1] (0.00ns)   --->   "%coef_scale = phi i32 %tmp_data_V_3, void %VITIS_LOOP_53_1.split, i32 %tmp_data_V, void %VITIS_LOOP_53_1.preheader"   --->   Operation 149 'phi' 'coef_scale' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 150 [1/1] (0.00ns)   --->   "%p_4_0_0_0134_phi = phi i1 %tmp_last_V_1, void %VITIS_LOOP_53_1.split, i1 0, void %VITIS_LOOP_53_1.preheader"   --->   Operation 150 'phi' 'p_4_0_0_0134_phi' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 151 [1/1] (0.95ns)   --->   "%icmp_ln49 = icmp_eq  i2 %j, i2 3" [equalizer.cpp:49]   --->   Operation 151 'icmp' 'icmp_ln49' <Predicate = true> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 152 [1/1] (0.00ns)   --->   "%empty_24 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3"   --->   Operation 152 'speclooptripcount' 'empty_24' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 153 [1/1] (1.56ns)   --->   "%j_1 = add i2 %j, i2 1" [equalizer.cpp:49]   --->   Operation 153 'add' 'j_1' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 154 [1/1] (0.00ns)   --->   "%br_ln49 = br i1 %icmp_ln49, void %VITIS_LOOP_53_1.split, void %for.end40" [equalizer.cpp:49]   --->   Operation 154 'br' 'br_ln49' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 155 [1/1] (0.00ns)   --->   "%empty_25 = wait i32 @_ssdm_op_Wait"   --->   Operation 155 'wait' 'empty_25' <Predicate = (!icmp_ln49)> <Delay = 0.00>
ST_24 : Operation 156 [2/2] (3.52ns)   --->   "%call_ln283 = call void @equalizer_Pipeline_VITIS_LOOP_53_1, i32 %gmem, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V, i32 %coef_scale, i64 %coefs_read, i32 %coefs_2"   --->   Operation 156 'call' 'call_ln283' <Predicate = (!icmp_ln49)> <Delay = 3.52> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_24 : Operation 157 [1/1] (2.47ns)   --->   "%icmp_ln68 = icmp_eq  i32 %coef_scale, i32 43962" [equalizer.cpp:68]   --->   Operation 157 'icmp' 'icmp_ln68' <Predicate = (icmp_ln49)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 158 [1/1] (0.70ns)   --->   "%select_ln18_1 = select i1 %icmp_ln68, i32 4096, i32 17" [equalizer.cpp:18]   --->   Operation 158 'select' 'select_ln18_1' <Predicate = (icmp_ln49)> <Delay = 0.70> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 159 [1/1] (1.58ns)   --->   "%br_ln102 = br i1 %p_4_0_0_0134_phi, void %for.end40.if.end85_crit_edge, void %while.end" [equalizer.cpp:102]   --->   Operation 159 'br' 'br_ln102' <Predicate = (icmp_ln49)> <Delay = 1.58>
ST_24 : Operation 160 [1/1] (1.82ns)   --->   "%store_ln102 = store i32 %select_ln18_1, i32 %state" [equalizer.cpp:102]   --->   Operation 160 'store' 'store_ln102' <Predicate = (icmp_ln49 & !p_4_0_0_0134_phi)> <Delay = 1.82>
ST_24 : Operation 161 [1/1] (0.00ns)   --->   "%br_ln102 = br void %if.end85" [equalizer.cpp:102]   --->   Operation 161 'br' 'br_ln102' <Predicate = (icmp_ln49 & !p_4_0_0_0134_phi)> <Delay = 0.00>

State 25 <SV = 4> <Delay = 0.00>
ST_25 : Operation 162 [1/2] (0.00ns)   --->   "%call_ln283 = call void @equalizer_Pipeline_VITIS_LOOP_53_1, i32 %gmem, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V, i32 %coef_scale, i64 %coefs_read, i32 %coefs_2"   --->   Operation 162 'call' 'call_ln283' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 26 <SV = 5> <Delay = 0.00>
ST_26 : Operation 163 [1/1] (0.00ns)   --->   "%specloopname_ln16 = specloopname void @_ssdm_op_SpecLoopName, void @empty_15" [equalizer.cpp:16]   --->   Operation 163 'specloopname' 'specloopname_ln16' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 164 [1/1] (0.00ns)   --->   "%empty_26 = wait i32 @_ssdm_op_Wait"   --->   Operation 164 'wait' 'empty_26' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 165 [1/1] (0.00ns)   --->   "%empty_27 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 165 'read' 'empty_27' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_26 : Operation 166 [1/1] (0.00ns)   --->   "%tmp_data_V_3 = extractvalue i44 %empty_27"   --->   Operation 166 'extractvalue' 'tmp_data_V_3' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 167 [1/1] (0.00ns)   --->   "%tmp_last_V_1 = extractvalue i44 %empty_27"   --->   Operation 167 'extractvalue' 'tmp_last_V_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 168 [1/1] (0.00ns)   --->   "%br_ln49 = br void %VITIS_LOOP_53_1" [equalizer.cpp:49]   --->   Operation 168 'br' 'br_ln49' <Predicate = true> <Delay = 0.00>

State 27 <SV = 15> <Delay = 0.00>
ST_27 : Operation 169 [1/2] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %output_r_V_data_V, i4 %output_r_V_keep_V, i4 %output_r_V_strb_V, i1 %output_r_V_user_V, i1 %output_r_V_last_V, i1 %output_r_V_id_V, i1 %output_r_V_dest_V, i32 %tmp_data_V_4, i4 %tmp_keep_V_1, i4 %tmp_strb_V_1, i1 %tmp_user_V_1, i1 1, i1 %tmp_id_V_1, i1 %tmp_dest_V_1"   --->   Operation 169 'write' 'write_ln304' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_27 : Operation 170 [1/1] (0.00ns)   --->   "%ret_ln108 = ret" [equalizer.cpp:108]   --->   Operation 170 'ret' 'ret_ln108' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.83ns
The critical path consists of the following:
	'alloca' operation ('state') [24]  (0 ns)
	'store' operation ('store_ln29', equalizer.cpp:29) of constant 0 on local variable 'state' [53]  (1.83 ns)

 <State 2>: 5.49ns
The critical path consists of the following:
	axis read operation ('empty') on port 'input_r_V_data_V' [64]  (0 ns)
	'icmp' operation ('icmp_ln36', equalizer.cpp:36) [143]  (2.47 ns)
	'select' operation ('select_ln18', equalizer.cpp:18) [144]  (1.19 ns)
	'store' operation ('store_ln102', equalizer.cpp:102) of variable 'select_ln18', equalizer.cpp:18 on local variable 'state' [147]  (1.83 ns)

 <State 3>: 0ns
The critical path consists of the following:

 <State 4>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:86) on port 'gmem' (equalizer.cpp:86) [76]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:86) on port 'gmem' (equalizer.cpp:86) [76]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:86) on port 'gmem' (equalizer.cpp:86) [76]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:86) on port 'gmem' (equalizer.cpp:86) [76]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:86) on port 'gmem' (equalizer.cpp:86) [76]  (7.3 ns)

 <State 9>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:86) on port 'gmem' (equalizer.cpp:86) [76]  (7.3 ns)

 <State 10>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:86) on port 'gmem' (equalizer.cpp:86) [76]  (7.3 ns)

 <State 11>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read', equalizer.cpp:86) on port 'gmem' (equalizer.cpp:86) [77]  (7.3 ns)

 <State 12>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln86', equalizer.cpp:86) [78]  (6.91 ns)

 <State 13>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln86', equalizer.cpp:86) [78]  (6.91 ns)

 <State 14>: 2.55ns
The critical path consists of the following:
	'load' operation ('accumulate_loc_load') on local variable 'accumulate_loc' [75]  (0 ns)
	'add' operation ('accumulate', equalizer.cpp:86) [79]  (2.55 ns)

 <State 15>: 1.83ns
The critical path consists of the following:
	'store' operation ('store_ln102', equalizer.cpp:102) of constant 4096 on local variable 'state' [84]  (1.83 ns)

 <State 16>: 3.52ns
The critical path consists of the following:
	'phi' operation ('i', equalizer.cpp:44) with incoming values : ('add_ln44', equalizer.cpp:44) [95]  (0 ns)
	'add' operation ('add_ln45', equalizer.cpp:45) [105]  (3.52 ns)

 <State 17>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_addr_1_req', equalizer.cpp:45) on port 'gmem' (equalizer.cpp:45) [109]  (7.3 ns)

 <State 18>: 7.3ns
The critical path consists of the following:
	bus write operation ('write_ln45', equalizer.cpp:45) on port 'gmem' (equalizer.cpp:45) [110]  (7.3 ns)

 <State 19>: 7.3ns
The critical path consists of the following:
	bus response operation ('gmem_addr_1_resp', equalizer.cpp:45) on port 'gmem' (equalizer.cpp:45) [111]  (7.3 ns)

 <State 20>: 7.3ns
The critical path consists of the following:
	bus response operation ('gmem_addr_1_resp', equalizer.cpp:45) on port 'gmem' (equalizer.cpp:45) [111]  (7.3 ns)

 <State 21>: 7.3ns
The critical path consists of the following:
	bus response operation ('gmem_addr_1_resp', equalizer.cpp:45) on port 'gmem' (equalizer.cpp:45) [111]  (7.3 ns)

 <State 22>: 7.3ns
The critical path consists of the following:
	bus response operation ('gmem_addr_1_resp', equalizer.cpp:45) on port 'gmem' (equalizer.cpp:45) [111]  (7.3 ns)

 <State 23>: 7.3ns
The critical path consists of the following:
	bus response operation ('gmem_addr_1_resp', equalizer.cpp:45) on port 'gmem' (equalizer.cpp:45) [111]  (7.3 ns)

 <State 24>: 5ns
The critical path consists of the following:
	'phi' operation ('tmp.data.V') with incoming values : ('tmp.data.V') [120]  (0 ns)
	'icmp' operation ('icmp_ln68', equalizer.cpp:68) [136]  (2.47 ns)
	'select' operation ('select_ln18_1', equalizer.cpp:18) [137]  (0.702 ns)
	'store' operation ('store_ln102', equalizer.cpp:102) of variable 'select_ln18_1', equalizer.cpp:18 on local variable 'state' [140]  (1.83 ns)

 <State 25>: 0ns
The critical path consists of the following:

 <State 26>: 0ns
The critical path consists of the following:

 <State 27>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
