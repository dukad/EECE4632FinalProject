

================================================================
== Vitis HLS Report for 'equalizer_Pipeline_Shift_Accumulate_Loop'
================================================================
* Date:           Fri Apr 26 02:45:20 2024

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:48:16 MDT 2022)
* Project:        equalizer
* Solution:       solution15 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      111|      111|  1.110 us|  1.110 us|  111|  111|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                         |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name        |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Shift_Accumulate_Loop  |      109|      109|        13|          1|          1|    98|       yes|
        +-------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 13


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 1
  Pipeline-0 : II = 1, D = 13, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.12>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%accumulate = alloca i32 1"   --->   Operation 16 'alloca' 'accumulate' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 17 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %gmem, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 99, void @empty_1, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%coefs_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %coefs"   --->   Operation 19 'read' 'coefs_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.58ns)   --->   "%store_ln0 = store i7 98, i7 %i"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 21 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 0, i32 %accumulate"   --->   Operation 21 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc47"   --->   Operation 22 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%i_2 = load i7 %i" [equalizer.cpp:70]   --->   Operation 23 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (1.48ns)   --->   "%icmp_ln70 = icmp_eq  i7 %i_2, i7 0" [equalizer.cpp:70]   --->   Operation 24 'icmp' 'icmp_ln70' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln70 = br i1 %icmp_ln70, void %for.inc47.split, void %for.end49.exitStub" [equalizer.cpp:70]   --->   Operation 25 'br' 'br_ln70' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (1.87ns)   --->   "%add_ln70 = add i7 %i_2, i7 127" [equalizer.cpp:70]   --->   Operation 26 'add' 'add_ln70' <Predicate = (!icmp_ln70)> <Delay = 1.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln72 = zext i7 %add_ln70" [equalizer.cpp:72]   --->   Operation 27 'zext' 'zext_ln72' <Predicate = (!icmp_ln70)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%signal_shift_reg_addr = getelementptr i16 %signal_shift_reg, i64 0, i64 %zext_ln72" [equalizer.cpp:72]   --->   Operation 28 'getelementptr' 'signal_shift_reg_addr' <Predicate = (!icmp_ln70)> <Delay = 0.00>
ST_1 : Operation 29 [2/2] (3.25ns)   --->   "%signal_shift_reg_load = load i7 %signal_shift_reg_addr" [equalizer.cpp:72]   --->   Operation 29 'load' 'signal_shift_reg_load' <Predicate = (!icmp_ln70)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 99> <RAM>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i7.i1, i7 %i_2, i1 0" [equalizer.cpp:73]   --->   Operation 30 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln70)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln73 = zext i8 %shl_ln" [equalizer.cpp:73]   --->   Operation 31 'zext' 'zext_ln73' <Predicate = (!icmp_ln70)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (3.52ns)   --->   "%add_ln73 = add i64 %zext_ln73, i64 %coefs_read" [equalizer.cpp:73]   --->   Operation 32 'add' 'add_ln73' <Predicate = (!icmp_ln70)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %add_ln73, i32 1, i32 63" [equalizer.cpp:73]   --->   Operation 33 'partselect' 'trunc_ln2' <Predicate = (!icmp_ln70)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%sext_ln73_2 = sext i63 %trunc_ln2" [equalizer.cpp:73]   --->   Operation 34 'sext' 'sext_ln73_2' <Predicate = (!icmp_ln70)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i16 %gmem, i64 %sext_ln73_2" [equalizer.cpp:73]   --->   Operation 35 'getelementptr' 'gmem_addr' <Predicate = (!icmp_ln70)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (1.58ns)   --->   "%store_ln70 = store i7 %add_ln70, i7 %i" [equalizer.cpp:70]   --->   Operation 36 'store' 'store_ln70' <Predicate = (!icmp_ln70)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i7 %i_2" [equalizer.cpp:70]   --->   Operation 37 'zext' 'zext_ln70' <Predicate = (!icmp_ln70)> <Delay = 0.00>
ST_2 : Operation 38 [1/2] (3.25ns)   --->   "%signal_shift_reg_load = load i7 %signal_shift_reg_addr" [equalizer.cpp:72]   --->   Operation 38 'load' 'signal_shift_reg_load' <Predicate = (!icmp_ln70)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 99> <RAM>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%signal_shift_reg_addr_1 = getelementptr i16 %signal_shift_reg, i64 0, i64 %zext_ln70" [equalizer.cpp:72]   --->   Operation 39 'getelementptr' 'signal_shift_reg_addr_1' <Predicate = (!icmp_ln70)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (3.25ns)   --->   "%store_ln72 = store i16 %signal_shift_reg_load, i7 %signal_shift_reg_addr_1" [equalizer.cpp:72]   --->   Operation 40 'store' 'store_ln72' <Predicate = (!icmp_ln70)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 99> <RAM>
ST_2 : Operation 41 [7/7] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i16P1A, i16 %gmem_addr, i32 1" [equalizer.cpp:73]   --->   Operation 41 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln70)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 42 [6/7] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i16P1A, i16 %gmem_addr, i32 1" [equalizer.cpp:73]   --->   Operation 42 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln70)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 43 [5/7] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i16P1A, i16 %gmem_addr, i32 1" [equalizer.cpp:73]   --->   Operation 43 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln70)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 44 [4/7] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i16P1A, i16 %gmem_addr, i32 1" [equalizer.cpp:73]   --->   Operation 44 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln70)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 45 [3/7] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i16P1A, i16 %gmem_addr, i32 1" [equalizer.cpp:73]   --->   Operation 45 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln70)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 46 [2/7] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i16P1A, i16 %gmem_addr, i32 1" [equalizer.cpp:73]   --->   Operation 46 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln70)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 47 [1/7] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i16P1A, i16 %gmem_addr, i32 1" [equalizer.cpp:73]   --->   Operation 47 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln70)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 48 [1/1] (7.30ns)   --->   "%gmem_addr_read = read i16 @_ssdm_op_Read.m_axi.i16P1A, i16 %gmem_addr" [equalizer.cpp:73]   --->   Operation 48 'read' 'gmem_addr_read' <Predicate = (!icmp_ln70)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 1.05>
ST_10 : Operation 49 [1/1] (0.00ns)   --->   "%sext_ln73 = sext i16 %signal_shift_reg_load" [equalizer.cpp:73]   --->   Operation 49 'sext' 'sext_ln73' <Predicate = (!icmp_ln70)> <Delay = 0.00>
ST_10 : Operation 50 [1/1] (0.00ns)   --->   "%sext_ln73_1 = sext i16 %gmem_addr_read" [equalizer.cpp:73]   --->   Operation 50 'sext' 'sext_ln73_1' <Predicate = (!icmp_ln70)> <Delay = 0.00>
ST_10 : Operation 51 [3/3] (1.05ns) (grouped into DSP with root node accumulate_2)   --->   "%mul_ln73 = mul i32 %sext_ln73_1, i32 %sext_ln73" [equalizer.cpp:73]   --->   Operation 51 'mul' 'mul_ln73' <Predicate = (!icmp_ln70)> <Delay = 1.05> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 11 <SV = 10> <Delay = 1.05>
ST_11 : Operation 52 [2/3] (1.05ns) (grouped into DSP with root node accumulate_2)   --->   "%mul_ln73 = mul i32 %sext_ln73_1, i32 %sext_ln73" [equalizer.cpp:73]   --->   Operation 52 'mul' 'mul_ln73' <Predicate = (!icmp_ln70)> <Delay = 1.05> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 12 <SV = 11> <Delay = 2.10>
ST_12 : Operation 53 [1/1] (0.00ns)   --->   "%accumulate_1 = load i32 %accumulate"   --->   Operation 53 'load' 'accumulate_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 54 [1/1] (0.00ns)   --->   "%empty = trunc i32 %accumulate_1"   --->   Operation 54 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 55 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %gmem"   --->   Operation 55 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 56 [1/1] (0.00ns)   --->   "%empty_23 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 98, i64 98, i64 98"   --->   Operation 56 'speclooptripcount' 'empty_23' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 57 [1/3] (0.00ns) (grouped into DSP with root node accumulate_2)   --->   "%mul_ln73 = mul i32 %sext_ln73_1, i32 %sext_ln73" [equalizer.cpp:73]   --->   Operation 57 'mul' 'mul_ln73' <Predicate = (!icmp_ln70)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 58 [2/2] (2.10ns) (root node of the DSP)   --->   "%accumulate_2 = add i32 %mul_ln73, i32 %accumulate_1" [equalizer.cpp:73]   --->   Operation 58 'add' 'accumulate_2' <Predicate = (!icmp_ln70)> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 64 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %accumulate_out, i16 %empty"   --->   Operation 64 'write' 'write_ln0' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_12 : Operation 65 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 65 'ret' 'ret_ln0' <Predicate = (icmp_ln70)> <Delay = 0.00>

State 13 <SV = 12> <Delay = 3.68>
ST_13 : Operation 59 [1/1] (0.00ns)   --->   "%specpipeline_ln71 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [equalizer.cpp:71]   --->   Operation 59 'specpipeline' 'specpipeline_ln71' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 60 [1/1] (0.00ns)   --->   "%specloopname_ln12 = specloopname void @_ssdm_op_SpecLoopName, void @empty_12" [equalizer.cpp:12]   --->   Operation 60 'specloopname' 'specloopname_ln12' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 61 [1/2] (2.10ns) (root node of the DSP)   --->   "%accumulate_2 = add i32 %mul_ln73, i32 %accumulate_1" [equalizer.cpp:73]   --->   Operation 61 'add' 'accumulate_2' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 62 [1/1] (1.58ns)   --->   "%store_ln70 = store i32 %accumulate_2, i32 %accumulate" [equalizer.cpp:70]   --->   Operation 62 'store' 'store_ln70' <Predicate = true> <Delay = 1.58>
ST_13 : Operation 63 [1/1] (0.00ns)   --->   "%br_ln70 = br void %for.inc47" [equalizer.cpp:70]   --->   Operation 63 'br' 'br_ln70' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.12ns
The critical path consists of the following:
	'alloca' operation ('i') [6]  (0 ns)
	'load' operation ('i', equalizer.cpp:70) on local variable 'i' [14]  (0 ns)
	'add' operation ('add_ln70', equalizer.cpp:70) [24]  (1.87 ns)
	'getelementptr' operation ('signal_shift_reg_addr', equalizer.cpp:72) [26]  (0 ns)
	'load' operation ('signal_shift_reg_load', equalizer.cpp:72) on array 'signal_shift_reg' [27]  (3.25 ns)

 <State 2>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', equalizer.cpp:73) on port 'gmem' (equalizer.cpp:73) [37]  (7.3 ns)

 <State 3>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', equalizer.cpp:73) on port 'gmem' (equalizer.cpp:73) [37]  (7.3 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', equalizer.cpp:73) on port 'gmem' (equalizer.cpp:73) [37]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', equalizer.cpp:73) on port 'gmem' (equalizer.cpp:73) [37]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', equalizer.cpp:73) on port 'gmem' (equalizer.cpp:73) [37]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', equalizer.cpp:73) on port 'gmem' (equalizer.cpp:73) [37]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', equalizer.cpp:73) on port 'gmem' (equalizer.cpp:73) [37]  (7.3 ns)

 <State 9>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read', equalizer.cpp:73) on port 'gmem' (equalizer.cpp:73) [38]  (7.3 ns)

 <State 10>: 1.05ns
The critical path consists of the following:
	'mul' operation of DSP[41] ('mul_ln73', equalizer.cpp:73) [40]  (1.05 ns)

 <State 11>: 1.05ns
The critical path consists of the following:
	'mul' operation of DSP[41] ('mul_ln73', equalizer.cpp:73) [40]  (1.05 ns)

 <State 12>: 2.1ns
The critical path consists of the following:
	'load' operation ('accumulate') on local variable 'accumulate' [13]  (0 ns)
	'add' operation of DSP[41] ('accumulate', equalizer.cpp:73) [41]  (2.1 ns)

 <State 13>: 3.69ns
The critical path consists of the following:
	'add' operation of DSP[41] ('accumulate', equalizer.cpp:73) [41]  (2.1 ns)
	'store' operation ('store_ln70', equalizer.cpp:70) of variable 'accumulate', equalizer.cpp:73 on local variable 'accumulate' [43]  (1.59 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
