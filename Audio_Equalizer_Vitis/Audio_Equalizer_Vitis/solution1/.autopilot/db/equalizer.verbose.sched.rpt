

================================================================
== Vitis HLS Report for 'equalizer'
================================================================
* Date:           Wed Mar 27 17:45:55 2024

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:48:16 MDT 2022)
* Project:        Audio_Equalizer_Vitis
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      168|      168|  1.680 us|  1.680 us|  169|  169|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 34
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.52>
ST_1 : Operation 35 [1/1] (1.00ns)   --->   "%highfreq_coefs_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %highfreq_coefs"   --->   Operation 35 'read' 'highfreq_coefs_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 36 [1/1] (1.00ns)   --->   "%midfreq_coefs_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %midfreq_coefs"   --->   Operation 36 'read' 'midfreq_coefs_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 37 [1/1] (1.00ns)   --->   "%lowfreq_coefs_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %lowfreq_coefs"   --->   Operation 37 'read' 'lowfreq_coefs_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%highfreq_accumulate_loc = alloca i64 1"   --->   Operation 38 'alloca' 'highfreq_accumulate_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%midfreq_accumulate_loc = alloca i64 1"   --->   Operation 39 'alloca' 'midfreq_accumulate_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%lowfreq_accumulate_loc = alloca i64 1"   --->   Operation 40 'alloca' 'lowfreq_accumulate_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%empty = read i54 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i2P0A.i1P0A.i5P0A.i6P0A, i32 %SIGNAL_IN_V_data_V, i4 %SIGNAL_IN_V_keep_V, i4 %SIGNAL_IN_V_strb_V, i2 %SIGNAL_IN_V_user_V, i1 %SIGNAL_IN_V_last_V, i5 %SIGNAL_IN_V_id_V, i6 %SIGNAL_IN_V_dest_V"   --->   Operation 41 'read' 'empty' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_data_V = extractvalue i54 %empty"   --->   Operation 42 'extractvalue' 'tmp_data_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_keep_V = extractvalue i54 %empty"   --->   Operation 43 'extractvalue' 'tmp_keep_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_strb_V = extractvalue i54 %empty"   --->   Operation 44 'extractvalue' 'tmp_strb_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_user_V = extractvalue i54 %empty"   --->   Operation 45 'extractvalue' 'tmp_user_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_last_V = extractvalue i54 %empty"   --->   Operation 46 'extractvalue' 'tmp_last_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_id_V = extractvalue i54 %empty"   --->   Operation 47 'extractvalue' 'tmp_id_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_dest_V = extractvalue i54 %empty"   --->   Operation 48 'extractvalue' 'tmp_dest_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [2/2] (3.52ns)   --->   "%call_ln0 = call void @equalizer_Pipeline_Lowfreq_Shift_Accumulate_Loop, i32 %gmem, i64 %lowfreq_coefs_read, i32 %lowfreq_accumulate_loc, i32 %lowfreq_shift_reg"   --->   Operation 49 'call' 'call_ln0' <Predicate = true> <Delay = 3.52> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %lowfreq_coefs_read, i32 2, i32 63" [equalizer.cpp:49]   --->   Operation 50 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%sext_ln49 = sext i62 %trunc_ln1" [equalizer.cpp:49]   --->   Operation 51 'sext' 'sext_ln49' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln49" [equalizer.cpp:49]   --->   Operation 52 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %midfreq_coefs_read, i32 2, i32 63" [equalizer.cpp:59]   --->   Operation 53 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%sext_ln59 = sext i62 %trunc_ln3" [equalizer.cpp:59]   --->   Operation 54 'sext' 'sext_ln59' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i32 %gmem, i64 %sext_ln59" [equalizer.cpp:59]   --->   Operation 55 'getelementptr' 'gmem_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln5 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %highfreq_coefs_read, i32 2, i32 63" [equalizer.cpp:69]   --->   Operation 56 'partselect' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%sext_ln69 = sext i62 %trunc_ln5" [equalizer.cpp:69]   --->   Operation 57 'sext' 'sext_ln69' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%gmem_addr_2 = getelementptr i32 %gmem, i64 %sext_ln69" [equalizer.cpp:69]   --->   Operation 58 'getelementptr' 'gmem_addr_2' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 59 [1/2] (0.00ns)   --->   "%call_ln0 = call void @equalizer_Pipeline_Lowfreq_Shift_Accumulate_Loop, i32 %gmem, i64 %lowfreq_coefs_read, i32 %lowfreq_accumulate_loc, i32 %lowfreq_shift_reg"   --->   Operation 59 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 60 [7/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:49]   --->   Operation 60 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 61 [1/1] (3.25ns)   --->   "%store_ln50 = store i32 %tmp_data_V, i32 0" [equalizer.cpp:50]   --->   Operation 61 'store' 'store_ln50' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 33> <RAM>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 62 [6/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:49]   --->   Operation 62 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 63 [5/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:49]   --->   Operation 63 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 64 [4/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:49]   --->   Operation 64 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 65 [3/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:49]   --->   Operation 65 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 66 [2/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:49]   --->   Operation 66 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 67 [1/7] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:49]   --->   Operation 67 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 68 [1/1] (7.30ns)   --->   "%gmem_addr_read = read i32 @_ssdm_op_Read.m_axi.i32P1A, i32 %gmem_addr" [equalizer.cpp:49]   --->   Operation 68 'read' 'gmem_addr_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 6.91>
ST_11 : Operation 69 [2/2] (3.52ns)   --->   "%call_ln0 = call void @equalizer_Pipeline_Midfreq_Shift_Accumulate_Loop, i32 %gmem, i64 %midfreq_coefs_read, i32 %midfreq_accumulate_loc, i32 %midfreq_shift_reg"   --->   Operation 69 'call' 'call_ln0' <Predicate = true> <Delay = 3.52> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 70 [2/2] (6.91ns)   --->   "%mul_ln49 = mul i32 %gmem_addr_read, i32 %tmp_data_V" [equalizer.cpp:49]   --->   Operation 70 'mul' 'mul_ln49' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 6.91>
ST_12 : Operation 71 [1/2] (0.00ns)   --->   "%call_ln0 = call void @equalizer_Pipeline_Midfreq_Shift_Accumulate_Loop, i32 %gmem, i64 %midfreq_coefs_read, i32 %midfreq_accumulate_loc, i32 %midfreq_shift_reg"   --->   Operation 71 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 72 [1/2] (6.91ns)   --->   "%mul_ln49 = mul i32 %gmem_addr_read, i32 %tmp_data_V" [equalizer.cpp:49]   --->   Operation 72 'mul' 'mul_ln49' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 73 [7/7] (7.30ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_1, i32 1" [equalizer.cpp:59]   --->   Operation 73 'readreq' 'gmem_load_3_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 74 [6/7] (7.30ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_1, i32 1" [equalizer.cpp:59]   --->   Operation 74 'readreq' 'gmem_load_3_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 75 [5/7] (7.30ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_1, i32 1" [equalizer.cpp:59]   --->   Operation 75 'readreq' 'gmem_load_3_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 76 [4/7] (7.30ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_1, i32 1" [equalizer.cpp:59]   --->   Operation 76 'readreq' 'gmem_load_3_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 77 [3/7] (7.30ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_1, i32 1" [equalizer.cpp:59]   --->   Operation 77 'readreq' 'gmem_load_3_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 78 [2/7] (7.30ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_1, i32 1" [equalizer.cpp:59]   --->   Operation 78 'readreq' 'gmem_load_3_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 79 [1/7] (7.30ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_1, i32 1" [equalizer.cpp:59]   --->   Operation 79 'readreq' 'gmem_load_3_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 7.30>
ST_20 : Operation 80 [1/1] (0.00ns)   --->   "%lowfreq_accumulate_loc_load = load i32 %lowfreq_accumulate_loc"   --->   Operation 80 'load' 'lowfreq_accumulate_loc_load' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 81 [1/1] (2.55ns)   --->   "%lowfreq_accumulate = add i32 %mul_ln49, i32 %lowfreq_accumulate_loc_load" [equalizer.cpp:49]   --->   Operation 81 'add' 'lowfreq_accumulate' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 82 [1/1] (7.30ns)   --->   "%gmem_addr_1_read = read i32 @_ssdm_op_Read.m_axi.i32P1A, i32 %gmem_addr_1" [equalizer.cpp:59]   --->   Operation 82 'read' 'gmem_addr_1_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 83 [1/1] (3.25ns)   --->   "%store_ln60 = store i32 %lowfreq_accumulate, i32 0" [equalizer.cpp:60]   --->   Operation 83 'store' 'store_ln60' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 33> <RAM>

State 21 <SV = 20> <Delay = 6.91>
ST_21 : Operation 84 [2/2] (3.52ns)   --->   "%call_ln0 = call void @equalizer_Pipeline_Highfreq_Shift_Accumulate_Loop, i32 %gmem, i64 %highfreq_coefs_read, i32 %highfreq_accumulate_loc, i32 %highfreq_shift_reg"   --->   Operation 84 'call' 'call_ln0' <Predicate = true> <Delay = 3.52> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_21 : Operation 85 [2/2] (6.91ns)   --->   "%mul_ln59 = mul i32 %gmem_addr_1_read, i32 %lowfreq_accumulate" [equalizer.cpp:59]   --->   Operation 85 'mul' 'mul_ln59' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 6.91>
ST_22 : Operation 86 [1/2] (0.00ns)   --->   "%call_ln0 = call void @equalizer_Pipeline_Highfreq_Shift_Accumulate_Loop, i32 %gmem, i64 %highfreq_coefs_read, i32 %highfreq_accumulate_loc, i32 %highfreq_shift_reg"   --->   Operation 86 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_22 : Operation 87 [1/2] (6.91ns)   --->   "%mul_ln59 = mul i32 %gmem_addr_1_read, i32 %lowfreq_accumulate" [equalizer.cpp:59]   --->   Operation 87 'mul' 'mul_ln59' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 7.30>
ST_23 : Operation 88 [1/1] (0.00ns)   --->   "%midfreq_accumulate_loc_load = load i32 %midfreq_accumulate_loc"   --->   Operation 88 'load' 'midfreq_accumulate_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 89 [1/1] (2.55ns)   --->   "%midfreq_accumulate = add i32 %mul_ln59, i32 %midfreq_accumulate_loc_load" [equalizer.cpp:59]   --->   Operation 89 'add' 'midfreq_accumulate' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 90 [7/7] (7.30ns)   --->   "%gmem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_2, i32 1" [equalizer.cpp:69]   --->   Operation 90 'readreq' 'gmem_load_5_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 91 [1/1] (3.25ns)   --->   "%store_ln70 = store i32 %midfreq_accumulate, i32 0" [equalizer.cpp:70]   --->   Operation 91 'store' 'store_ln70' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 33> <RAM>

State 24 <SV = 23> <Delay = 7.30>
ST_24 : Operation 92 [6/7] (7.30ns)   --->   "%gmem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_2, i32 1" [equalizer.cpp:69]   --->   Operation 92 'readreq' 'gmem_load_5_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 7.30>
ST_25 : Operation 93 [5/7] (7.30ns)   --->   "%gmem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_2, i32 1" [equalizer.cpp:69]   --->   Operation 93 'readreq' 'gmem_load_5_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 25> <Delay = 7.30>
ST_26 : Operation 94 [4/7] (7.30ns)   --->   "%gmem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_2, i32 1" [equalizer.cpp:69]   --->   Operation 94 'readreq' 'gmem_load_5_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 7.30>
ST_27 : Operation 95 [3/7] (7.30ns)   --->   "%gmem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_2, i32 1" [equalizer.cpp:69]   --->   Operation 95 'readreq' 'gmem_load_5_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 7.30>
ST_28 : Operation 96 [2/7] (7.30ns)   --->   "%gmem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_2, i32 1" [equalizer.cpp:69]   --->   Operation 96 'readreq' 'gmem_load_5_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 28> <Delay = 7.30>
ST_29 : Operation 97 [1/7] (7.30ns)   --->   "%gmem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_2, i32 1" [equalizer.cpp:69]   --->   Operation 97 'readreq' 'gmem_load_5_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 7.30>
ST_30 : Operation 98 [1/1] (7.30ns)   --->   "%gmem_addr_2_read = read i32 @_ssdm_op_Read.m_axi.i32P1A, i32 %gmem_addr_2" [equalizer.cpp:69]   --->   Operation 98 'read' 'gmem_addr_2_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 6.91>
ST_31 : Operation 99 [1/1] (0.00ns)   --->   "%highfreq_accumulate_loc_load = load i32 %highfreq_accumulate_loc"   --->   Operation 99 'load' 'highfreq_accumulate_loc_load' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 100 [2/2] (6.91ns)   --->   "%mul_ln69 = mul i32 %gmem_addr_2_read, i32 %highfreq_accumulate_loc_load" [equalizer.cpp:69]   --->   Operation 100 'mul' 'mul_ln69' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 6.91>
ST_32 : Operation 101 [1/2] (6.91ns)   --->   "%mul_ln69 = mul i32 %gmem_addr_2_read, i32 %highfreq_accumulate_loc_load" [equalizer.cpp:69]   --->   Operation 101 'mul' 'mul_ln69' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 32> <Delay = 2.55>
ST_33 : Operation 102 [1/1] (2.55ns)   --->   "%highfreq_accumulate = add i32 %mul_ln69, i32 %highfreq_accumulate_loc_load" [equalizer.cpp:69]   --->   Operation 102 'add' 'highfreq_accumulate' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 103 [2/2] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i2P0A.i1P0A.i5P0A.i6P0A, i32 %SIGNAL_OUT_V_data_V, i4 %SIGNAL_OUT_V_keep_V, i4 %SIGNAL_OUT_V_strb_V, i2 %SIGNAL_OUT_V_user_V, i1 %SIGNAL_OUT_V_last_V, i5 %SIGNAL_OUT_V_id_V, i6 %SIGNAL_OUT_V_dest_V, i32 %highfreq_accumulate, i4 %tmp_keep_V, i4 %tmp_strb_V, i2 %tmp_user_V, i1 %tmp_last_V, i5 %tmp_id_V, i6 %tmp_dest_V"   --->   Operation 103 'write' 'write_ln304' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 34 <SV = 33> <Delay = 0.00>
ST_34 : Operation 104 [1/1] (0.00ns)   --->   "%spectopmodule_ln16 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_12" [equalizer.cpp:16]   --->   Operation 104 'spectopmodule' 'spectopmodule_ln16' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 105 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 33, void @empty_1, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 105 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 106 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 106 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 107 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %SIGNAL_IN_V_data_V, i4 %SIGNAL_IN_V_keep_V, i4 %SIGNAL_IN_V_strb_V, i2 %SIGNAL_IN_V_user_V, i1 %SIGNAL_IN_V_last_V, i5 %SIGNAL_IN_V_id_V, i6 %SIGNAL_IN_V_dest_V, void @empty_3, i32 1, i32 1, void @empty_4, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 107 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 108 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %SIGNAL_IN_V_data_V"   --->   Operation 108 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 109 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %SIGNAL_IN_V_keep_V"   --->   Operation 109 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 110 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %SIGNAL_IN_V_strb_V"   --->   Operation 110 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 111 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i2 %SIGNAL_IN_V_user_V"   --->   Operation 111 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 112 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %SIGNAL_IN_V_last_V"   --->   Operation 112 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 113 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i5 %SIGNAL_IN_V_id_V"   --->   Operation 113 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 114 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i6 %SIGNAL_IN_V_dest_V"   --->   Operation 114 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 115 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %SIGNAL_OUT_V_data_V, i4 %SIGNAL_OUT_V_keep_V, i4 %SIGNAL_OUT_V_strb_V, i2 %SIGNAL_OUT_V_user_V, i1 %SIGNAL_OUT_V_last_V, i5 %SIGNAL_OUT_V_id_V, i6 %SIGNAL_OUT_V_dest_V, void @empty_3, i32 1, i32 1, void @empty_4, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 115 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 116 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %SIGNAL_OUT_V_data_V"   --->   Operation 116 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 117 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %SIGNAL_OUT_V_keep_V"   --->   Operation 117 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 118 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %SIGNAL_OUT_V_strb_V"   --->   Operation 118 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 119 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i2 %SIGNAL_OUT_V_user_V"   --->   Operation 119 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 120 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %SIGNAL_OUT_V_last_V"   --->   Operation 120 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 121 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i5 %SIGNAL_OUT_V_id_V"   --->   Operation 121 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 122 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i6 %SIGNAL_OUT_V_dest_V"   --->   Operation 122 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 123 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %lowfreq_coefs, void @empty_5, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_6, void @empty_7, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0"   --->   Operation 123 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 124 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %lowfreq_coefs, void @empty_9, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0"   --->   Operation 124 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 125 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %midfreq_coefs, void @empty_5, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_6, void @empty_10, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0"   --->   Operation 125 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 126 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %midfreq_coefs, void @empty_9, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0"   --->   Operation 126 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 127 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %highfreq_coefs, void @empty_5, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_6, void @empty_11, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0"   --->   Operation 127 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 128 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %highfreq_coefs, void @empty_9, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_8, i32 4294967295, i32 0"   --->   Operation 128 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 129 [1/2] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i2P0A.i1P0A.i5P0A.i6P0A, i32 %SIGNAL_OUT_V_data_V, i4 %SIGNAL_OUT_V_keep_V, i4 %SIGNAL_OUT_V_strb_V, i2 %SIGNAL_OUT_V_user_V, i1 %SIGNAL_OUT_V_last_V, i5 %SIGNAL_OUT_V_id_V, i6 %SIGNAL_OUT_V_dest_V, i32 %highfreq_accumulate, i4 %tmp_keep_V, i4 %tmp_strb_V, i2 %tmp_user_V, i1 %tmp_last_V, i5 %tmp_id_V, i6 %tmp_dest_V"   --->   Operation 129 'write' 'write_ln304' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_34 : Operation 130 [1/1] (0.00ns)   --->   "%ret_ln83 = ret" [equalizer.cpp:83]   --->   Operation 130 'ret' 'ret_ln83' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 4.52ns
The critical path consists of the following:
	s_axi read operation ('lowfreq_coefs_read') on port 'lowfreq_coefs' [24]  (1 ns)
	'call' operation ('call_ln0') to 'equalizer_Pipeline_Lowfreq_Shift_Accumulate_Loop' [61]  (3.52 ns)

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:49) on port 'gmem' (equalizer.cpp:49) [66]  (7.3 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:49) on port 'gmem' (equalizer.cpp:49) [66]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:49) on port 'gmem' (equalizer.cpp:49) [66]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:49) on port 'gmem' (equalizer.cpp:49) [66]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:49) on port 'gmem' (equalizer.cpp:49) [66]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:49) on port 'gmem' (equalizer.cpp:49) [66]  (7.3 ns)

 <State 9>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_1_req', equalizer.cpp:49) on port 'gmem' (equalizer.cpp:49) [66]  (7.3 ns)

 <State 10>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read', equalizer.cpp:49) on port 'gmem' (equalizer.cpp:49) [67]  (7.3 ns)

 <State 11>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln49', equalizer.cpp:49) [71]  (6.91 ns)

 <State 12>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln49', equalizer.cpp:49) [71]  (6.91 ns)

 <State 13>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_3_req', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [76]  (7.3 ns)

 <State 14>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_3_req', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [76]  (7.3 ns)

 <State 15>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_3_req', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [76]  (7.3 ns)

 <State 16>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_3_req', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [76]  (7.3 ns)

 <State 17>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_3_req', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [76]  (7.3 ns)

 <State 18>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_3_req', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [76]  (7.3 ns)

 <State 19>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_3_req', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [76]  (7.3 ns)

 <State 20>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_1_read', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [77]  (7.3 ns)

 <State 21>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln59', equalizer.cpp:59) [81]  (6.91 ns)

 <State 22>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln59', equalizer.cpp:59) [81]  (6.91 ns)

 <State 23>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_5_req', equalizer.cpp:69) on port 'gmem' (equalizer.cpp:69) [86]  (7.3 ns)

 <State 24>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_5_req', equalizer.cpp:69) on port 'gmem' (equalizer.cpp:69) [86]  (7.3 ns)

 <State 25>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_5_req', equalizer.cpp:69) on port 'gmem' (equalizer.cpp:69) [86]  (7.3 ns)

 <State 26>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_5_req', equalizer.cpp:69) on port 'gmem' (equalizer.cpp:69) [86]  (7.3 ns)

 <State 27>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_5_req', equalizer.cpp:69) on port 'gmem' (equalizer.cpp:69) [86]  (7.3 ns)

 <State 28>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_5_req', equalizer.cpp:69) on port 'gmem' (equalizer.cpp:69) [86]  (7.3 ns)

 <State 29>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_5_req', equalizer.cpp:69) on port 'gmem' (equalizer.cpp:69) [86]  (7.3 ns)

 <State 30>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_2_read', equalizer.cpp:69) on port 'gmem' (equalizer.cpp:69) [87]  (7.3 ns)

 <State 31>: 6.91ns
The critical path consists of the following:
	'load' operation ('highfreq_accumulate_loc_load') on local variable 'highfreq_accumulate_loc' [80]  (0 ns)
	'mul' operation ('mul_ln69', equalizer.cpp:69) [88]  (6.91 ns)

 <State 32>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln69', equalizer.cpp:69) [88]  (6.91 ns)

 <State 33>: 2.55ns
The critical path consists of the following:
	'add' operation ('highfreq_accumulate', equalizer.cpp:69) [89]  (2.55 ns)

 <State 34>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
