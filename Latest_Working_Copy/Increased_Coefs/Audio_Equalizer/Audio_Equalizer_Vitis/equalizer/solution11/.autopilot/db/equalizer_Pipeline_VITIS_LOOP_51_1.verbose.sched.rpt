

================================================================
== Vitis HLS Report for 'equalizer_Pipeline_VITIS_LOOP_51_1'
================================================================
* Date:           Wed Apr 24 15:14:05 2024

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:48:16 MDT 2022)
* Project:        equalizer
* Solution:       solution11 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      115|      115|  1.150 us|  1.150 us|  115|  115|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_51_1  |      113|      113|        16|          1|          1|    99|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 16


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 16
* Pipeline : 1
  Pipeline-0 : II = 1, D = 16, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.52>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 19 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %input_r_V_dest_V, i1 %input_r_V_id_V, i1 %input_r_V_last_V, i1 %input_r_V_user_V, i4 %input_r_V_strb_V, i4 %input_r_V_keep_V, i32 %input_r_V_data_V, void @empty_3, i32 0, i32 0, void @empty_4, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 20 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 99, void @empty_1, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 21 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%coefs_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %coefs"   --->   Operation 22 'read' 'coefs_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%coef_scale_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %coef_scale"   --->   Operation 23 'read' 'coef_scale_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (1.58ns)   --->   "%store_ln0 = store i7 0, i7 %i"   --->   Operation 24 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc27"   --->   Operation 25 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%i_1 = load i7 %i" [equalizer.cpp:51]   --->   Operation 26 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 27 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (1.48ns)   --->   "%icmp_ln51 = icmp_eq  i7 %i_1, i7 99" [equalizer.cpp:51]   --->   Operation 28 'icmp' 'icmp_ln51' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 99, i64 99, i64 99"   --->   Operation 29 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (1.87ns)   --->   "%add_ln51 = add i7 %i_1, i7 1" [equalizer.cpp:51]   --->   Operation 30 'add' 'add_ln51' <Predicate = true> <Delay = 1.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln51 = br i1 %icmp_ln51, void %for.inc27.split, void %for.inc29.exitStub" [equalizer.cpp:51]   --->   Operation 31 'br' 'br_ln51' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%empty_22 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 32 'read' 'empty_22' <Predicate = (!icmp_ln51)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_data_V = extractvalue i44 %empty_22"   --->   Operation 33 'extractvalue' 'tmp_data_V' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%shl_ln2 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i7.i2, i7 %i_1, i2 0" [equalizer.cpp:57]   --->   Operation 34 'bitconcatenate' 'shl_ln2' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln57 = zext i9 %shl_ln2" [equalizer.cpp:57]   --->   Operation 35 'zext' 'zext_ln57' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (3.52ns)   --->   "%add_ln57 = add i64 %zext_ln57, i64 %coefs_read" [equalizer.cpp:57]   --->   Operation 36 'add' 'add_ln57' <Predicate = (!icmp_ln51)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln57, i32 2, i32 63" [equalizer.cpp:57]   --->   Operation 37 'partselect' 'trunc_ln3' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%sext_ln57 = sext i62 %trunc_ln3" [equalizer.cpp:57]   --->   Operation 38 'sext' 'sext_ln57' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln57" [equalizer.cpp:57]   --->   Operation 39 'getelementptr' 'gmem_addr' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (1.58ns)   --->   "%store_ln51 = store i7 %add_ln51, i7 %i" [equalizer.cpp:51]   --->   Operation 40 'store' 'store_ln51' <Predicate = (!icmp_ln51)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln51 = zext i7 %i_1" [equalizer.cpp:51]   --->   Operation 41 'zext' 'zext_ln51' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [2/2] (6.91ns)   --->   "%mul_ln57 = mul i32 %tmp_data_V, i32 %coef_scale_read" [equalizer.cpp:57]   --->   Operation 42 'mul' 'mul_ln57' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [7/7] (7.30ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:57]   --->   Operation 43 'readreq' 'gmem_load_2_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%coefs_2_addr = getelementptr i32 %coefs_2, i64 0, i64 %zext_ln51" [equalizer.cpp:58]   --->   Operation 44 'getelementptr' 'coefs_2_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [2/2] (3.25ns)   --->   "%coefs_2_load = load i7 %coefs_2_addr" [equalizer.cpp:58]   --->   Operation 45 'load' 'coefs_2_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 99> <RAM>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 46 [1/2] (6.91ns)   --->   "%mul_ln57 = mul i32 %tmp_data_V, i32 %coef_scale_read" [equalizer.cpp:57]   --->   Operation 46 'mul' 'mul_ln57' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [6/7] (7.30ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:57]   --->   Operation 47 'readreq' 'gmem_load_2_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 48 [1/2] (3.25ns)   --->   "%coefs_2_load = load i7 %coefs_2_addr" [equalizer.cpp:58]   --->   Operation 48 'load' 'coefs_2_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 99> <RAM>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 49 [5/7] (7.30ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:57]   --->   Operation 49 'readreq' 'gmem_load_2_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 50 [1/1] (2.55ns)   --->   "%add_ln58 = add i32 %coefs_2_load, i32 %mul_ln57" [equalizer.cpp:58]   --->   Operation 50 'add' 'add_ln58' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 51 [1/1] (3.25ns)   --->   "%store_ln58 = store i32 %add_ln58, i7 %coefs_2_addr" [equalizer.cpp:58]   --->   Operation 51 'store' 'store_ln58' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 99> <RAM>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 52 [4/7] (7.30ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:57]   --->   Operation 52 'readreq' 'gmem_load_2_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 53 [3/7] (7.30ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:57]   --->   Operation 53 'readreq' 'gmem_load_2_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 54 [2/7] (7.30ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:57]   --->   Operation 54 'readreq' 'gmem_load_2_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 55 [1/7] (7.30ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:57]   --->   Operation 55 'readreq' 'gmem_load_2_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 56 [1/1] (7.30ns)   --->   "%gmem_addr_read = read i32 @_ssdm_op_Read.m_axi.i32P1A, i32 %gmem_addr" [equalizer.cpp:57]   --->   Operation 56 'read' 'gmem_addr_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 57 [1/1] (2.55ns)   --->   "%add_ln57_1 = add i32 %gmem_addr_read, i32 %mul_ln57" [equalizer.cpp:57]   --->   Operation 57 'add' 'add_ln57_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 58 [1/1] (7.30ns)   --->   "%gmem_addr_3_req = writereq i1 @_ssdm_op_WriteReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:57]   --->   Operation 58 'writereq' 'gmem_addr_3_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 59 [1/1] (7.30ns)   --->   "%write_ln57 = write void @_ssdm_op_Write.m_axi.i32P1A, i32 %gmem_addr, i32 %add_ln57_1, i4 15" [equalizer.cpp:57]   --->   Operation 59 'write' 'write_ln57' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 60 [5/5] (7.30ns)   --->   "%gmem_addr_3_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [equalizer.cpp:57]   --->   Operation 60 'writeresp' 'gmem_addr_3_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 61 [4/5] (7.30ns)   --->   "%gmem_addr_3_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [equalizer.cpp:57]   --->   Operation 61 'writeresp' 'gmem_addr_3_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 62 [3/5] (7.30ns)   --->   "%gmem_addr_3_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [equalizer.cpp:57]   --->   Operation 62 'writeresp' 'gmem_addr_3_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 63 [2/5] (7.30ns)   --->   "%gmem_addr_3_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [equalizer.cpp:57]   --->   Operation 63 'writeresp' 'gmem_addr_3_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 68 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 68 'ret' 'ret_ln0' <Predicate = (icmp_ln51)> <Delay = 0.00>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 64 [1/1] (0.00ns)   --->   "%specpipeline_ln52 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [equalizer.cpp:52]   --->   Operation 64 'specpipeline' 'specpipeline_ln52' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 65 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @empty_14"   --->   Operation 65 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 66 [1/5] (7.30ns)   --->   "%gmem_addr_3_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [equalizer.cpp:57]   --->   Operation 66 'writeresp' 'gmem_addr_3_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 67 [1/1] (0.00ns)   --->   "%br_ln51 = br void %for.inc27" [equalizer.cpp:51]   --->   Operation 67 'br' 'br_ln51' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.52ns
The critical path consists of the following:
	'alloca' operation ('i') [12]  (0 ns)
	'load' operation ('i', equalizer.cpp:51) on local variable 'i' [20]  (0 ns)
	'add' operation ('add_ln57', equalizer.cpp:57) [35]  (3.52 ns)

 <State 2>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_2_req', equalizer.cpp:57) on port 'gmem' (equalizer.cpp:57) [39]  (7.3 ns)

 <State 3>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_2_req', equalizer.cpp:57) on port 'gmem' (equalizer.cpp:57) [39]  (7.3 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_2_req', equalizer.cpp:57) on port 'gmem' (equalizer.cpp:57) [39]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_2_req', equalizer.cpp:57) on port 'gmem' (equalizer.cpp:57) [39]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_2_req', equalizer.cpp:57) on port 'gmem' (equalizer.cpp:57) [39]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_2_req', equalizer.cpp:57) on port 'gmem' (equalizer.cpp:57) [39]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_load_2_req', equalizer.cpp:57) on port 'gmem' (equalizer.cpp:57) [39]  (7.3 ns)

 <State 9>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read', equalizer.cpp:57) on port 'gmem' (equalizer.cpp:57) [40]  (7.3 ns)

 <State 10>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_addr_3_req', equalizer.cpp:57) on port 'gmem' (equalizer.cpp:57) [42]  (7.3 ns)

 <State 11>: 7.3ns
The critical path consists of the following:
	bus write operation ('write_ln57', equalizer.cpp:57) on port 'gmem' (equalizer.cpp:57) [43]  (7.3 ns)

 <State 12>: 7.3ns
The critical path consists of the following:
	bus response operation ('gmem_addr_3_resp', equalizer.cpp:57) on port 'gmem' (equalizer.cpp:57) [44]  (7.3 ns)

 <State 13>: 7.3ns
The critical path consists of the following:
	bus response operation ('gmem_addr_3_resp', equalizer.cpp:57) on port 'gmem' (equalizer.cpp:57) [44]  (7.3 ns)

 <State 14>: 7.3ns
The critical path consists of the following:
	bus response operation ('gmem_addr_3_resp', equalizer.cpp:57) on port 'gmem' (equalizer.cpp:57) [44]  (7.3 ns)

 <State 15>: 7.3ns
The critical path consists of the following:
	bus response operation ('gmem_addr_3_resp', equalizer.cpp:57) on port 'gmem' (equalizer.cpp:57) [44]  (7.3 ns)

 <State 16>: 7.3ns
The critical path consists of the following:
	bus response operation ('gmem_addr_3_resp', equalizer.cpp:57) on port 'gmem' (equalizer.cpp:57) [44]  (7.3 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
