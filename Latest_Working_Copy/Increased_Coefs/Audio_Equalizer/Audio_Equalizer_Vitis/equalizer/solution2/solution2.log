==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_compile -complex-mul-dsp=0
INFO: [HLS 200-1464] Running solution command: config_compile -pipeline_loops=0
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_compile -pipeline_loops 0 
INFO: [HLS 200-1510] Running: source ./equalizer/solution2/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name equalizer equalizer 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.102 seconds; current allocated memory: 1.598 GB.
INFO: [HLS 200-10] Analyzing design file 'equalizer.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.707 seconds; current allocated memory: 1.598 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::read(hls::axis<ap_int<32>, 1ul, 1ul, 1ul>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:283:50)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::read(hls::axis<ap_int<32>, 1ul, 1ul, 1ul>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:286:25)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::read(hls::axis<ap_int<32>, 1ul, 1ul, 1ul>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:285:67)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::read(hls::axis<ap_int<32>, 1ul, 1ul, 1ul>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:285:36)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::read(hls::axis<ap_int<32>, 1ul, 1ul, 1ul>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:284:39)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::read(hls::axis<ap_int<32>, 1ul, 1ul, 1ul>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:284:23)
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, true>::ssdm_int(int)' into 'ap_int_base<32, true>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_int_base.h:260:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int<32>::ap_int(int)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int.h:179:57)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::write(hls::axis<ap_int<32>, 1ul, 1ul, 1ul> const&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:304:51)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::write(hls::axis<ap_int<32>, 1ul, 1ul, 1ul> const&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:307:26)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::write(hls::axis<ap_int<32>, 1ul, 1ul, 1ul> const&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:306:68)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::write(hls::axis<ap_int<32>, 1ul, 1ul, 1ul> const&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:306:37)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::write(hls::axis<ap_int<32>, 1ul, 1ul, 1ul> const&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:305:40)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::write(hls::axis<ap_int<32>, 1ul, 1ul, 1ul> const&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:305:24)
INFO: [HLS 214-131] Inlining function '_ZN8ssdm_intILi1ELb0EEC2EDq1_j' into 'ap_int_base<1, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_int_base.h:260:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_uint<1>::ap_uint(int)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int.h:333:58)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::read(hls::axis<ap_int<32>, 1ul, 1ul, 1ul>&)' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:27:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::write(hls::axis<ap_int<32>, 1ul, 1ul, 1ul> const&)' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:97:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:92:7)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::write(hls::axis<ap_int<32>, 1ul, 1ul, 1ul> const&)' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:85:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:81:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::to_int() const' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:71:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::to_int() const' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:70:28)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::read(hls::axis<ap_int<32>, 1ul, 1ul, 1ul>&)' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:42:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::to_int() const' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:40:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::to_int() const' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:31:18)
INFO: [HLS 214-186] Unrolling loop 'Shift_Accumulate_Loop' (equalizer.cpp:64:5) in function 'equalizer' completely with a factor of 32 (equalizer.cpp:3:0)
INFO: [HLS 214-115] Multiple burst reads of length 33 and bit width 32 has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (equalizer.cpp:67:42)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.unpack.none.s_struct.ap_int<32>s.i32' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:283:5)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:304:5)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i4.s_struct.ap_uint<4>s' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:304:5)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i32.s_struct.ap_int<32>s' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:304:5)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.unpack.none.s_struct.ap_uint<1>s.i1' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:283:5)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.unpack.none.s_struct.ap_uint<4>s.i4' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:283:5)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 9.851 seconds; current allocated memory: 1.598 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.008 seconds; current allocated memory: 1.598 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.183 seconds; current allocated memory: 1.598 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.202 seconds; current allocated memory: 1.598 GB.
INFO: [XFORM 203-102] Partitioning array 'signal_shift_reg' automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'equalizer' (equalizer.cpp:3:7)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.473 seconds; current allocated memory: 1.598 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.233 seconds; current allocated memory: 1.598 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'equalizer' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'equalizer' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.061 seconds; current allocated memory: 1.598 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.947 seconds; current allocated memory: 1.598 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'equalizer' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/output_r_V_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/output_r_V_keep_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/output_r_V_strb_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/output_r_V_user_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/output_r_V_last_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/output_r_V_id_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/output_r_V_dest_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/coefs' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/input_r_V_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/input_r_V_keep_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/input_r_V_strb_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/input_r_V_user_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/input_r_V_last_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/input_r_V_id_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/input_r_V_dest_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'equalizer' to 'ap_ctrl_none'.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_31' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_30' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_29' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_28' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_27' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_26' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_25' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_24' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_23' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_22' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_21' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_20' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_19' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_18' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_17' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_16' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_15' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_14' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_13' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_12' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_11' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_0' is power-on initialization.
INFO: [RTGEN 206-100] Bundling port 'coefs' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mul_32s_32s_32_2_1': 33 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'equalizer'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.057 seconds; current allocated memory: 1.598 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.479 seconds; current allocated memory: 1.598 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.514 seconds; current allocated memory: 1.598 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for equalizer.
INFO: [VLOG 209-307] Generating Verilog RTL for equalizer.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 28.974 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 11 seconds. Total CPU system time: 2 seconds. Total elapsed time: 39.931 seconds; peak allocated memory: 1.598 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_compile -complex-mul-dsp=0
INFO: [HLS 200-1464] Running solution command: config_compile -pipeline_loops=0
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_compile -pipeline_loops 0 
INFO: [HLS 200-1510] Running: source ./equalizer/solution2/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name equalizer equalizer 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.045 seconds; current allocated memory: 1.515 GB.
INFO: [HLS 200-10] Analyzing design file 'equalizer.cpp' ... 
ERROR: [HLS 207-3706] expression is not assignable (equalizer.cpp:45:27)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.495 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 1 seconds. Total elapsed time: 15.182 seconds; peak allocated memory: 1.515 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_compile -complex-mul-dsp=0
INFO: [HLS 200-1464] Running solution command: config_compile -pipeline_loops=0
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_compile -pipeline_loops 0 
INFO: [HLS 200-1510] Running: source ./equalizer/solution2/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name equalizer equalizer 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.047 seconds; current allocated memory: 1.646 GB.
INFO: [HLS 200-10] Analyzing design file 'equalizer.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.831 seconds; current allocated memory: 1.646 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::read(hls::axis<ap_int<32>, 1ul, 1ul, 1ul>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:283:50)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::read(hls::axis<ap_int<32>, 1ul, 1ul, 1ul>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:286:25)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::read(hls::axis<ap_int<32>, 1ul, 1ul, 1ul>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:285:67)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::read(hls::axis<ap_int<32>, 1ul, 1ul, 1ul>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:285:36)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::read(hls::axis<ap_int<32>, 1ul, 1ul, 1ul>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:284:39)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::read(hls::axis<ap_int<32>, 1ul, 1ul, 1ul>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:284:23)
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, true>::ssdm_int(int)' into 'ap_int_base<32, true>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_int_base.h:260:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int<32>::ap_int(int)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int.h:179:57)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::write(hls::axis<ap_int<32>, 1ul, 1ul, 1ul> const&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:304:51)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::write(hls::axis<ap_int<32>, 1ul, 1ul, 1ul> const&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:307:26)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::write(hls::axis<ap_int<32>, 1ul, 1ul, 1ul> const&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:306:68)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::write(hls::axis<ap_int<32>, 1ul, 1ul, 1ul> const&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:306:37)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::write(hls::axis<ap_int<32>, 1ul, 1ul, 1ul> const&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:305:40)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_int<32>, 1ul, 1ul, 1ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::write(hls::axis<ap_int<32>, 1ul, 1ul, 1ul> const&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:305:24)
INFO: [HLS 214-131] Inlining function '_ZN8ssdm_intILi1ELb0EEC2EDq1_j' into 'ap_int_base<1, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_int_base.h:260:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_uint<1>::ap_uint(int)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int.h:333:58)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::read(hls::axis<ap_int<32>, 1ul, 1ul, 1ul>&)' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:27:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::write(hls::axis<ap_int<32>, 1ul, 1ul, 1ul> const&)' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:99:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:94:7)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::write(hls::axis<ap_int<32>, 1ul, 1ul, 1ul> const&)' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:87:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:83:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::to_int() const' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:73:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::to_int() const' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:72:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::to_int() const' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:45:18)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>::read(hls::axis<ap_int<32>, 1ul, 1ul, 1ul>&)' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:42:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::to_int() const' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:40:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::to_int() const' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (equalizer.cpp:31:18)
INFO: [HLS 214-186] Unrolling loop 'Shift_Accumulate_Loop' (equalizer.cpp:66:5) in function 'equalizer' completely with a factor of 32 (equalizer.cpp:3:0)
INFO: [HLS 214-115] Multiple burst reads of length 33 and bit width 32 has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (equalizer.cpp:69:42)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.unpack.none.s_struct.ap_int<32>s.i32' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:283:5)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:304:5)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i4.s_struct.ap_uint<4>s' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:304:5)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i32.s_struct.ap_int<32>s' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:304:5)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.unpack.none.s_struct.ap_uint<1>s.i1' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:283:5)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.unpack.none.s_struct.ap_uint<4>s.i4' into 'equalizer(hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&, int*, hls::stream<hls::axis<ap_int<32>, 1ul, 1ul, 1ul>, 0>&)' (C:/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot\ap_axi_sdata.h:283:5)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 9.488 seconds; current allocated memory: 1.646 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.006 seconds; current allocated memory: 1.646 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.178 seconds; current allocated memory: 1.646 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.215 seconds; current allocated memory: 1.646 GB.
INFO: [XFORM 203-102] Partitioning array 'signal_shift_reg' automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'equalizer' (equalizer.cpp:3:7)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.439 seconds; current allocated memory: 1.646 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.245 seconds; current allocated memory: 1.646 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'equalizer' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'equalizer' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.993 seconds; current allocated memory: 1.646 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.186 seconds; current allocated memory: 1.646 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'equalizer' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/output_r_V_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/output_r_V_keep_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/output_r_V_strb_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/output_r_V_user_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/output_r_V_last_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/output_r_V_id_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/output_r_V_dest_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/coefs' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/input_r_V_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/input_r_V_keep_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/input_r_V_strb_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/input_r_V_user_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/input_r_V_last_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/input_r_V_id_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'equalizer/input_r_V_dest_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'equalizer' to 'ap_ctrl_none'.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_31' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_30' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_29' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_28' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_27' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_26' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_25' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_24' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_23' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_22' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_21' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_20' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_19' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_18' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_17' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_16' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_15' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_14' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_13' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_12' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_11' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'signal_shift_reg_0' is power-on initialization.
INFO: [RTGEN 206-100] Bundling port 'coefs' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mul_32s_32s_32_2_1': 33 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'equalizer'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.205 seconds; current allocated memory: 1.646 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.461 seconds; current allocated memory: 1.646 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.466 seconds; current allocated memory: 1.646 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for equalizer.
INFO: [VLOG 209-307] Generating Verilog RTL for equalizer.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 5 seconds. CPU system time: 1 seconds. Elapsed time: 27.938 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 11 seconds. Total CPU system time: 3 seconds. Total elapsed time: 36.705 seconds; peak allocated memory: 1.646 GB.
