

================================================================
== Vitis HLS Report for 'equalizer_Pipeline_Coef_Read_Loop'
================================================================
* Date:           Wed Apr 24 13:09:17 2024

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:48:16 MDT 2022)
* Project:        equalizer
* Solution:       solution8 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      106|      106|  1.060 us|  1.060 us|  106|  106|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Coef_Read_Loop  |      104|      104|         8|          1|          1|    98|       yes|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 9


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 1, D = 9, States = { 1 2 3 4 5 6 7 8 9 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%tmp_last_V = alloca i32 1"   --->   Operation 11 'alloca' 'tmp_last_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%tmp_data_V_1 = alloca i32 1"   --->   Operation 12 'alloca' 'tmp_data_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 13 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %input_r_V_dest_V, i1 %input_r_V_id_V, i1 %input_r_V_last_V, i1 %input_r_V_user_V, i4 %input_r_V_strb_V, i4 %input_r_V_keep_V, i32 %input_r_V_data_V, void @empty_3, i32 0, i32 0, void @empty_4, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 99, void @empty_1, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%coefs_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %coefs"   --->   Operation 16 'read' 'coefs_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%tmp_data_V_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %tmp_data_V"   --->   Operation 17 'read' 'tmp_data_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.58ns)   --->   "%store_ln0 = store i7 98, i7 %j"   --->   Operation 18 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 19 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %tmp_data_V_read, i32 %tmp_data_V_1"   --->   Operation 19 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 20 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.52>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%j_1 = load i7 %j" [equalizer.cpp:39]   --->   Operation 21 'load' 'j_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 22 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (1.48ns)   --->   "%icmp_ln39 = icmp_eq  i7 %j_1, i7 0" [equalizer.cpp:39]   --->   Operation 23 'icmp' 'icmp_ln39' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 98, i64 98, i64 98"   --->   Operation 24 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39, void %for.inc.split, void %for.end.exitStub" [equalizer.cpp:39]   --->   Operation 25 'br' 'br_ln39' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_data_V_1_load_1 = load i32 %tmp_data_V_1" [equalizer.cpp:41]   --->   Operation 26 'load' 'tmp_data_V_1_load_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i7.i2, i7 %j_1, i2 0" [equalizer.cpp:41]   --->   Operation 27 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln41 = zext i9 %shl_ln" [equalizer.cpp:41]   --->   Operation 28 'zext' 'zext_ln41' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (3.52ns)   --->   "%add_ln41 = add i64 %zext_ln41, i64 %coefs_read" [equalizer.cpp:41]   --->   Operation 29 'add' 'add_ln41' <Predicate = (!icmp_ln39)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln41, i32 2, i32 63" [equalizer.cpp:41]   --->   Operation 30 'partselect' 'trunc_ln1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%sext_ln41 = sext i62 %trunc_ln1" [equalizer.cpp:41]   --->   Operation 31 'sext' 'sext_ln41' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln41" [equalizer.cpp:41]   --->   Operation 32 'getelementptr' 'gmem_addr' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%empty_20 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 33 'read' 'empty_20' <Predicate = (!icmp_ln39)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_data_V_2 = extractvalue i44 %empty_20"   --->   Operation 34 'extractvalue' 'tmp_data_V_2' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%tmp_last_V_1 = extractvalue i44 %empty_20"   --->   Operation 35 'extractvalue' 'tmp_last_V_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (1.87ns)   --->   "%add_ln39 = add i7 %j_1, i7 127" [equalizer.cpp:39]   --->   Operation 36 'add' 'add_ln39' <Predicate = (!icmp_ln39)> <Delay = 1.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (1.58ns)   --->   "%store_ln39 = store i7 %add_ln39, i7 %j" [equalizer.cpp:39]   --->   Operation 37 'store' 'store_ln39' <Predicate = (!icmp_ln39)> <Delay = 1.58>
ST_2 : Operation 38 [1/1] (1.58ns)   --->   "%store_ln39 = store i32 %tmp_data_V_2, i32 %tmp_data_V_1" [equalizer.cpp:39]   --->   Operation 38 'store' 'store_ln39' <Predicate = (!icmp_ln39)> <Delay = 1.58>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%store_ln39 = store i1 %tmp_last_V_1, i1 %tmp_last_V" [equalizer.cpp:39]   --->   Operation 39 'store' 'store_ln39' <Predicate = (!icmp_ln39)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 40 [1/1] (7.30ns)   --->   "%gmem_addr_1_req = writereq i1 @_ssdm_op_WriteReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [equalizer.cpp:41]   --->   Operation 40 'writereq' 'gmem_addr_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 41 [1/1] (7.30ns)   --->   "%write_ln41 = write void @_ssdm_op_Write.m_axi.i32P1A, i32 %gmem_addr, i32 %tmp_data_V_1_load_1, i4 15" [equalizer.cpp:41]   --->   Operation 41 'write' 'write_ln41' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 42 [5/5] (7.30ns)   --->   "%gmem_addr_1_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [equalizer.cpp:41]   --->   Operation 42 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 43 [4/5] (7.30ns)   --->   "%gmem_addr_1_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [equalizer.cpp:41]   --->   Operation 43 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 44 [3/5] (7.30ns)   --->   "%gmem_addr_1_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [equalizer.cpp:41]   --->   Operation 44 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 45 [2/5] (7.30ns)   --->   "%gmem_addr_1_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [equalizer.cpp:41]   --->   Operation 45 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_last_V_load = load i1 %tmp_last_V"   --->   Operation 50 'load' 'tmp_last_V_load' <Predicate = (icmp_ln39)> <Delay = 0.00>
ST_8 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_data_V_1_load = load i32 %tmp_data_V_1"   --->   Operation 51 'load' 'tmp_data_V_1_load' <Predicate = (icmp_ln39)> <Delay = 0.00>
ST_8 : Operation 52 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %tmp_data_V_1_out, i32 %tmp_data_V_1_load"   --->   Operation 52 'write' 'write_ln0' <Predicate = (icmp_ln39)> <Delay = 0.00>
ST_8 : Operation 53 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %p_4_0_0_0112_phi_out, i1 %tmp_last_V_load"   --->   Operation 53 'write' 'write_ln0' <Predicate = (icmp_ln39)> <Delay = 0.00>
ST_8 : Operation 54 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 54 'ret' 'ret_ln0' <Predicate = (icmp_ln39)> <Delay = 0.00>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 46 [1/1] (0.00ns)   --->   "%specpipeline_ln40 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [equalizer.cpp:40]   --->   Operation 46 'specpipeline' 'specpipeline_ln40' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 47 [1/1] (0.00ns)   --->   "%specloopname_ln17 = specloopname void @_ssdm_op_SpecLoopName, void @empty_13" [equalizer.cpp:17]   --->   Operation 47 'specloopname' 'specloopname_ln17' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 48 [1/5] (7.30ns)   --->   "%gmem_addr_1_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [equalizer.cpp:41]   --->   Operation 48 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln39 = br void %for.inc" [equalizer.cpp:39]   --->   Operation 49 'br' 'br_ln39' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	'alloca' operation ('j') [15]  (0 ns)
	'store' operation ('store_ln0') of constant 98 on local variable 'j' [20]  (1.59 ns)

 <State 2>: 3.52ns
The critical path consists of the following:
	'load' operation ('j', equalizer.cpp:39) on local variable 'j' [24]  (0 ns)
	'add' operation ('add_ln41', equalizer.cpp:41) [35]  (3.52 ns)

 <State 3>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem_addr_1_req', equalizer.cpp:41) on port 'gmem' (equalizer.cpp:41) [39]  (7.3 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	bus write operation ('write_ln41', equalizer.cpp:41) on port 'gmem' (equalizer.cpp:41) [40]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus response operation ('gmem_addr_1_resp', equalizer.cpp:41) on port 'gmem' (equalizer.cpp:41) [41]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus response operation ('gmem_addr_1_resp', equalizer.cpp:41) on port 'gmem' (equalizer.cpp:41) [41]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus response operation ('gmem_addr_1_resp', equalizer.cpp:41) on port 'gmem' (equalizer.cpp:41) [41]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus response operation ('gmem_addr_1_resp', equalizer.cpp:41) on port 'gmem' (equalizer.cpp:41) [41]  (7.3 ns)

 <State 9>: 7.3ns
The critical path consists of the following:
	bus response operation ('gmem_addr_1_resp', equalizer.cpp:41) on port 'gmem' (equalizer.cpp:41) [41]  (7.3 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
