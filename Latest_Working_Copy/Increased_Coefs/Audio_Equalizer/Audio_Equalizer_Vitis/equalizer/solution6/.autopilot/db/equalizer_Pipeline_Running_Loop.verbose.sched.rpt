

================================================================
== Vitis HLS Report for 'equalizer_Pipeline_Running_Loop'
================================================================
* Date:           Tue Apr 23 13:42:41 2024

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:48:16 MDT 2022)
* Project:        equalizer
* Solution:       solution6 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------+---------+---------+----------+-----------+-----------+------+----------+
        |                |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Running_Loop  |        ?|        ?|        80|         33|          1|     ?|       yes|
        +----------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 33, depth = 80


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 96
* Pipeline : 1
  Pipeline-0 : II = 33, D = 80, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 57 
57 --> 58 
58 --> 59 
59 --> 60 
60 --> 61 
61 --> 62 
62 --> 63 
63 --> 64 
64 --> 65 
65 --> 66 
66 --> 67 
67 --> 68 
68 --> 69 
69 --> 70 
70 --> 71 
71 --> 72 
72 --> 73 
73 --> 74 
74 --> 75 
75 --> 76 
76 --> 77 
77 --> 78 
78 --> 79 
79 --> 80 
80 --> 81 
81 --> 82 83 84 2 
82 --> 96 
83 --> 96 
84 --> 85 
85 --> 86 
86 --> 87 
87 --> 88 
88 --> 89 
89 --> 90 
90 --> 91 
91 --> 92 
92 --> 93 
93 --> 94 
94 --> 95 
95 --> 96 
96 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 97 [1/1] (0.00ns)   --->   "%tmp_out_data_V = alloca i32 1"   --->   Operation 97 'alloca' 'tmp_out_data_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_out_keep_V = alloca i32 1"   --->   Operation 98 'alloca' 'tmp_out_keep_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_out_strb_V = alloca i32 1"   --->   Operation 99 'alloca' 'tmp_out_strb_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 100 [1/1] (0.00ns)   --->   "%tmp_out_user_V = alloca i32 1"   --->   Operation 100 'alloca' 'tmp_out_user_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 101 [1/1] (0.00ns)   --->   "%tmp_out_id_V = alloca i32 1"   --->   Operation 101 'alloca' 'tmp_out_id_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_out_dest_V = alloca i32 1"   --->   Operation 102 'alloca' 'tmp_out_dest_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 103 [1/1] (0.00ns)   --->   "%state = alloca i32 1"   --->   Operation 103 'alloca' 'state' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 104 [1/1] (0.00ns)   --->   "%sext_ln0_read = read i62 @_ssdm_op_Read.ap_auto.i62, i62 %sext_ln0"   --->   Operation 104 'read' 'sext_ln0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 105 [1/1] (0.00ns)   --->   "%sext_ln59_read = read i62 @_ssdm_op_Read.ap_auto.i62, i62 %sext_ln59"   --->   Operation 105 'read' 'sext_ln59_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 106 [1/1] (0.00ns)   --->   "%sext_ln0_cast = sext i62 %sext_ln0_read"   --->   Operation 106 'sext' 'sext_ln0_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 107 [1/1] (0.00ns)   --->   "%sext_ln59_cast = sext i62 %sext_ln59_read"   --->   Operation 107 'sext' 'sext_ln59_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 108 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %input_r_V_dest_V, i1 %input_r_V_id_V, i1 %input_r_V_last_V, i1 %input_r_V_user_V, i4 %input_r_V_strb_V, i4 %input_r_V_keep_V, i32 %input_r_V_data_V, void @empty_10, i32 0, i32 0, void @empty_11, i32 0, i32 0, void @empty_7, void @empty_7, void @empty_7, i32 0, i32 0, i32 0, i32 0, void @empty_7, void @empty_7, i32 4294967295, i32 0"   --->   Operation 108 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 109 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %output_r_V_dest_V, i1 %output_r_V_id_V, i1 %output_r_V_last_V, i1 %output_r_V_user_V, i4 %output_r_V_strb_V, i4 %output_r_V_keep_V, i32 %output_r_V_data_V, void @empty_10, i32 0, i32 0, void @empty_11, i32 0, i32 0, void @empty_7, void @empty_7, void @empty_7, i32 0, i32 0, i32 0, i32 0, void @empty_7, void @empty_7, i32 4294967295, i32 0"   --->   Operation 109 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 110 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty_5, i32 0, i32 0, void @empty_7, i32 0, i32 99, void @empty_9, void @empty_6, void @empty_7, i32 16, i32 16, i32 16, i32 16, void @empty_7, void @empty_7, i32 4294967295, i32 0"   --->   Operation 110 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 111 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 0, i32 %state"   --->   Operation 111 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 112 [1/1] (0.00ns)   --->   "%br_ln0 = br void %while.body"   --->   Operation 112 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.58>
ST_2 : Operation 113 [1/1] (0.00ns)   --->   "%state_2 = load i32 %state"   --->   Operation 113 'load' 'state_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 114 [1/1] (0.00ns)   --->   "%empty = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 114 'read' 'empty' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 115 [1/1] (0.00ns)   --->   "%tmp_data_V = extractvalue i44 %empty"   --->   Operation 115 'extractvalue' 'tmp_data_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 116 [1/1] (0.00ns)   --->   "%tmp_keep_V = extractvalue i44 %empty"   --->   Operation 116 'extractvalue' 'tmp_keep_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 117 [1/1] (0.00ns)   --->   "%tmp_strb_V = extractvalue i44 %empty"   --->   Operation 117 'extractvalue' 'tmp_strb_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 118 [1/1] (0.00ns)   --->   "%tmp_user_V = extractvalue i44 %empty"   --->   Operation 118 'extractvalue' 'tmp_user_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 119 [1/1] (0.00ns)   --->   "%tmp_last_V = extractvalue i44 %empty"   --->   Operation 119 'extractvalue' 'tmp_last_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 120 [1/1] (0.00ns)   --->   "%tmp_id_V = extractvalue i44 %empty"   --->   Operation 120 'extractvalue' 'tmp_id_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 121 [1/1] (0.00ns)   --->   "%tmp_dest_V = extractvalue i44 %empty"   --->   Operation 121 'extractvalue' 'tmp_dest_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 122 [1/1] (1.58ns)   --->   "%switch_ln30 = switch i32 %state_2, void %sw.epilog, i32 0, void %sw.bb, i32 17, void %for.inc, i32 4096, void %for.inc24" [equalizer.cpp:30]   --->   Operation 122 'switch' 'switch_ln30' <Predicate = true> <Delay = 1.58>
ST_2 : Operation 123 [1/1] (1.58ns)   --->   "%br_ln73 = br void %sw.epilog" [equalizer.cpp:73]   --->   Operation 123 'br' 'br_ln73' <Predicate = (state_2 == 4096 & tmp_last_V)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 1.82>
ST_3 : Operation 124 [1/1] (0.00ns)   --->   "%empty_18 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 124 'read' 'empty_18' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 125 [1/1] (0.00ns)   --->   "%tmp_data_V_1 = extractvalue i44 %empty_18"   --->   Operation 125 'extractvalue' 'tmp_data_V_1' <Predicate = (state_2 == 17)> <Delay = 0.00>
ST_3 : Operation 126 [1/1] (0.00ns)   --->   "%tmp_last_V_1 = phi i1 %tmp_last_V, void %while.body, i1 1, void %for.inc24.sw.epilog_crit_edge"   --->   Operation 126 'phi' 'tmp_last_V_1' <Predicate = (state_2 == 4096 & tmp_last_V) | (state_2 != 0 & state_2 != 17 & state_2 != 4096)> <Delay = 0.00>
ST_3 : Operation 127 [1/1] (0.00ns)   --->   "%state_1 = phi i32 %state_2, void %while.body, i32 4096, void %for.inc24.sw.epilog_crit_edge"   --->   Operation 127 'phi' 'state_1' <Predicate = (state_2 == 4096 & tmp_last_V) | (state_2 != 0 & state_2 != 17 & state_2 != 4096)> <Delay = 0.00>
ST_3 : Operation 128 [1/1] (1.82ns)   --->   "%br_ln84 = br i1 %tmp_last_V_1, void %if.end50, void %sw.epilog.while.end_crit_edge.exitStub" [equalizer.cpp:84]   --->   Operation 128 'br' 'br_ln84' <Predicate = (state_2 == 4096 & tmp_last_V) | (state_2 != 0 & state_2 != 17 & state_2 != 4096)> <Delay = 1.82>

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 129 [1/1] (0.00ns)   --->   "%empty_19 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 129 'read' 'empty_19' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 130 [1/1] (0.00ns)   --->   "%tmp_data_V_2 = extractvalue i44 %empty_19"   --->   Operation 130 'extractvalue' 'tmp_data_V_2' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 131 [1/1] (0.00ns)   --->   "%empty_20 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 131 'read' 'empty_20' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_5 : Operation 132 [1/1] (0.00ns)   --->   "%tmp_data_V_3 = extractvalue i44 %empty_20"   --->   Operation 132 'extractvalue' 'tmp_data_V_3' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 133 [1/1] (0.00ns)   --->   "%empty_21 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 133 'read' 'empty_21' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_6 : Operation 134 [1/1] (0.00ns)   --->   "%tmp_data_V_4 = extractvalue i44 %empty_21"   --->   Operation 134 'extractvalue' 'tmp_data_V_4' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 0.00>
ST_7 : Operation 135 [1/1] (0.00ns)   --->   "%empty_22 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 135 'read' 'empty_22' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_7 : Operation 136 [1/1] (0.00ns)   --->   "%tmp_data_V_5 = extractvalue i44 %empty_22"   --->   Operation 136 'extractvalue' 'tmp_data_V_5' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 8 <SV = 7> <Delay = 0.00>
ST_8 : Operation 137 [1/1] (0.00ns)   --->   "%empty_23 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 137 'read' 'empty_23' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_8 : Operation 138 [1/1] (0.00ns)   --->   "%tmp_data_V_6 = extractvalue i44 %empty_23"   --->   Operation 138 'extractvalue' 'tmp_data_V_6' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 9 <SV = 8> <Delay = 0.00>
ST_9 : Operation 139 [1/1] (0.00ns)   --->   "%empty_24 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 139 'read' 'empty_24' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_9 : Operation 140 [1/1] (0.00ns)   --->   "%tmp_data_V_7 = extractvalue i44 %empty_24"   --->   Operation 140 'extractvalue' 'tmp_data_V_7' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 141 [1/1] (0.00ns)   --->   "%empty_25 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 141 'read' 'empty_25' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_10 : Operation 142 [1/1] (0.00ns)   --->   "%tmp_data_V_8 = extractvalue i44 %empty_25"   --->   Operation 142 'extractvalue' 'tmp_data_V_8' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 11 <SV = 10> <Delay = 0.00>
ST_11 : Operation 143 [1/1] (0.00ns)   --->   "%empty_26 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 143 'read' 'empty_26' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_11 : Operation 144 [1/1] (0.00ns)   --->   "%tmp_data_V_9 = extractvalue i44 %empty_26"   --->   Operation 144 'extractvalue' 'tmp_data_V_9' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 12 <SV = 11> <Delay = 0.00>
ST_12 : Operation 145 [1/1] (0.00ns)   --->   "%empty_27 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 145 'read' 'empty_27' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_12 : Operation 146 [1/1] (0.00ns)   --->   "%tmp_data_V_10 = extractvalue i44 %empty_27"   --->   Operation 146 'extractvalue' 'tmp_data_V_10' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 13 <SV = 12> <Delay = 0.00>
ST_13 : Operation 147 [1/1] (0.00ns)   --->   "%empty_28 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 147 'read' 'empty_28' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_13 : Operation 148 [1/1] (0.00ns)   --->   "%tmp_data_V_11 = extractvalue i44 %empty_28"   --->   Operation 148 'extractvalue' 'tmp_data_V_11' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 14 <SV = 13> <Delay = 0.00>
ST_14 : Operation 149 [1/1] (0.00ns)   --->   "%empty_29 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 149 'read' 'empty_29' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_14 : Operation 150 [1/1] (0.00ns)   --->   "%tmp_data_V_12 = extractvalue i44 %empty_29"   --->   Operation 150 'extractvalue' 'tmp_data_V_12' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 15 <SV = 14> <Delay = 0.00>
ST_15 : Operation 151 [1/1] (0.00ns)   --->   "%empty_30 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 151 'read' 'empty_30' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_15 : Operation 152 [1/1] (0.00ns)   --->   "%tmp_data_V_13 = extractvalue i44 %empty_30"   --->   Operation 152 'extractvalue' 'tmp_data_V_13' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 16 <SV = 15> <Delay = 0.00>
ST_16 : Operation 153 [1/1] (0.00ns)   --->   "%empty_31 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 153 'read' 'empty_31' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_16 : Operation 154 [1/1] (0.00ns)   --->   "%tmp_data_V_14 = extractvalue i44 %empty_31"   --->   Operation 154 'extractvalue' 'tmp_data_V_14' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 17 <SV = 16> <Delay = 0.00>
ST_17 : Operation 155 [1/1] (0.00ns)   --->   "%empty_32 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 155 'read' 'empty_32' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_17 : Operation 156 [1/1] (0.00ns)   --->   "%tmp_data_V_15 = extractvalue i44 %empty_32"   --->   Operation 156 'extractvalue' 'tmp_data_V_15' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 18 <SV = 17> <Delay = 0.00>
ST_18 : Operation 157 [1/1] (0.00ns)   --->   "%empty_33 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 157 'read' 'empty_33' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_18 : Operation 158 [1/1] (0.00ns)   --->   "%tmp_data_V_16 = extractvalue i44 %empty_33"   --->   Operation 158 'extractvalue' 'tmp_data_V_16' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 19 <SV = 18> <Delay = 0.00>
ST_19 : Operation 159 [1/1] (0.00ns)   --->   "%empty_34 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 159 'read' 'empty_34' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_19 : Operation 160 [1/1] (0.00ns)   --->   "%tmp_data_V_17 = extractvalue i44 %empty_34"   --->   Operation 160 'extractvalue' 'tmp_data_V_17' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 20 <SV = 19> <Delay = 0.00>
ST_20 : Operation 161 [1/1] (0.00ns)   --->   "%empty_35 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 161 'read' 'empty_35' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_20 : Operation 162 [1/1] (0.00ns)   --->   "%tmp_data_V_18 = extractvalue i44 %empty_35"   --->   Operation 162 'extractvalue' 'tmp_data_V_18' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 21 <SV = 20> <Delay = 0.00>
ST_21 : Operation 163 [1/1] (0.00ns)   --->   "%empty_36 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 163 'read' 'empty_36' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_21 : Operation 164 [1/1] (0.00ns)   --->   "%tmp_data_V_19 = extractvalue i44 %empty_36"   --->   Operation 164 'extractvalue' 'tmp_data_V_19' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 22 <SV = 21> <Delay = 0.00>
ST_22 : Operation 165 [1/1] (0.00ns)   --->   "%empty_37 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 165 'read' 'empty_37' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_22 : Operation 166 [1/1] (0.00ns)   --->   "%tmp_data_V_20 = extractvalue i44 %empty_37"   --->   Operation 166 'extractvalue' 'tmp_data_V_20' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 23 <SV = 22> <Delay = 0.00>
ST_23 : Operation 167 [1/1] (0.00ns)   --->   "%empty_38 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 167 'read' 'empty_38' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_23 : Operation 168 [1/1] (0.00ns)   --->   "%tmp_data_V_21 = extractvalue i44 %empty_38"   --->   Operation 168 'extractvalue' 'tmp_data_V_21' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 24 <SV = 23> <Delay = 0.00>
ST_24 : Operation 169 [1/1] (0.00ns)   --->   "%empty_39 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 169 'read' 'empty_39' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_24 : Operation 170 [1/1] (0.00ns)   --->   "%tmp_data_V_22 = extractvalue i44 %empty_39"   --->   Operation 170 'extractvalue' 'tmp_data_V_22' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 25 <SV = 24> <Delay = 0.00>
ST_25 : Operation 171 [1/1] (0.00ns)   --->   "%empty_40 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 171 'read' 'empty_40' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_25 : Operation 172 [1/1] (0.00ns)   --->   "%tmp_data_V_23 = extractvalue i44 %empty_40"   --->   Operation 172 'extractvalue' 'tmp_data_V_23' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 26 <SV = 25> <Delay = 0.00>
ST_26 : Operation 173 [1/1] (0.00ns)   --->   "%empty_41 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 173 'read' 'empty_41' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_26 : Operation 174 [1/1] (0.00ns)   --->   "%tmp_data_V_24 = extractvalue i44 %empty_41"   --->   Operation 174 'extractvalue' 'tmp_data_V_24' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 27 <SV = 26> <Delay = 0.00>
ST_27 : Operation 175 [1/1] (0.00ns)   --->   "%empty_42 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 175 'read' 'empty_42' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_27 : Operation 176 [1/1] (0.00ns)   --->   "%tmp_data_V_25 = extractvalue i44 %empty_42"   --->   Operation 176 'extractvalue' 'tmp_data_V_25' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 28 <SV = 27> <Delay = 0.00>
ST_28 : Operation 177 [1/1] (0.00ns)   --->   "%empty_43 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 177 'read' 'empty_43' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_28 : Operation 178 [1/1] (0.00ns)   --->   "%tmp_data_V_26 = extractvalue i44 %empty_43"   --->   Operation 178 'extractvalue' 'tmp_data_V_26' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 29 <SV = 28> <Delay = 0.00>
ST_29 : Operation 179 [1/1] (0.00ns)   --->   "%empty_44 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 179 'read' 'empty_44' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_29 : Operation 180 [1/1] (0.00ns)   --->   "%tmp_data_V_27 = extractvalue i44 %empty_44"   --->   Operation 180 'extractvalue' 'tmp_data_V_27' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 30 <SV = 29> <Delay = 0.00>
ST_30 : Operation 181 [1/1] (0.00ns)   --->   "%empty_45 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 181 'read' 'empty_45' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_30 : Operation 182 [1/1] (0.00ns)   --->   "%tmp_data_V_28 = extractvalue i44 %empty_45"   --->   Operation 182 'extractvalue' 'tmp_data_V_28' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 31 <SV = 30> <Delay = 0.00>
ST_31 : Operation 183 [1/1] (0.00ns)   --->   "%empty_46 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 183 'read' 'empty_46' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_31 : Operation 184 [1/1] (0.00ns)   --->   "%tmp_data_V_29 = extractvalue i44 %empty_46"   --->   Operation 184 'extractvalue' 'tmp_data_V_29' <Predicate = (state_2 == 17)> <Delay = 0.00>

State 32 <SV = 31> <Delay = 7.30>
ST_32 : Operation 185 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i32 %gmem, i64 %sext_ln0_cast"   --->   Operation 185 'getelementptr' 'gmem_addr_1' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 186 [1/1] (0.00ns)   --->   "%empty_47 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 186 'read' 'empty_47' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_32 : Operation 187 [1/1] (0.00ns)   --->   "%tmp_data_V_30 = extractvalue i44 %empty_47"   --->   Operation 187 'extractvalue' 'tmp_data_V_30' <Predicate = (state_2 == 17)> <Delay = 0.00>
ST_32 : Operation 188 [1/1] (7.30ns)   --->   "%empty_49 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i32, i32 %gmem_addr_1, i32 32"   --->   Operation 188 'writereq' 'empty_49' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 7.30>
ST_33 : Operation 189 [1/1] (0.00ns)   --->   "%br_ln73 = br i1 %tmp_last_V, void %if.end44, void %for.inc24.sw.epilog_crit_edge" [equalizer.cpp:73]   --->   Operation 189 'br' 'br_ln73' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_33 : Operation 190 [1/1] (1.82ns)   --->   "%br_ln84 = br void %if.end50" [equalizer.cpp:84]   --->   Operation 190 'br' 'br_ln84' <Predicate = (state_2 == 4096 & !tmp_last_V)> <Delay = 1.82>
ST_33 : Operation 191 [1/1] (0.00ns)   --->   "%empty_48 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 191 'read' 'empty_48' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_33 : Operation 192 [1/1] (0.00ns)   --->   "%tmp_data_V_31 = extractvalue i44 %empty_48"   --->   Operation 192 'extractvalue' 'tmp_data_V_31' <Predicate = (state_2 == 17)> <Delay = 0.00>
ST_33 : Operation 193 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_31, i4 15"   --->   Operation 193 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 194 [1/1] (2.47ns)   --->   "%icmp_ln32 = icmp_eq  i32 %tmp_data_V, i32 48879" [equalizer.cpp:32]   --->   Operation 194 'icmp' 'icmp_ln32' <Predicate = (state_2 == 0)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 195 [1/1] (1.18ns)   --->   "%select_ln17 = select i1 %icmp_ln32, i32 17, i32 0" [equalizer.cpp:17]   --->   Operation 195 'select' 'select_ln17' <Predicate = (state_2 == 0)> <Delay = 1.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_33 : Operation 196 [1/1] (1.82ns)   --->   "%br_ln84 = br i1 %tmp_last_V, void %if.end50, void %sw.bb.while.end_crit_edge.exitStub" [equalizer.cpp:84]   --->   Operation 196 'br' 'br_ln84' <Predicate = (state_2 == 0)> <Delay = 1.82>

State 34 <SV = 33> <Delay = 7.30>
ST_34 : Operation 197 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_30, i4 15"   --->   Operation 197 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : Operation 198 [1/1] (0.00ns)   --->   "%empty_51 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 198 'read' 'empty_51' <Predicate = (state_2 == 17)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_34 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln47)   --->   "%tmp_data_V_32 = extractvalue i44 %empty_51"   --->   Operation 199 'extractvalue' 'tmp_data_V_32' <Predicate = (state_2 == 17)> <Delay = 0.00>
ST_34 : Operation 200 [1/1] (0.00ns)   --->   "%tmp_last_V_2 = extractvalue i44 %empty_51"   --->   Operation 200 'extractvalue' 'tmp_last_V_2' <Predicate = (state_2 == 17)> <Delay = 0.00>
ST_34 : Operation 201 [1/1] (2.47ns) (out node of the LUT)   --->   "%icmp_ln47 = icmp_eq  i32 %tmp_data_V_32, i32 43962" [equalizer.cpp:47]   --->   Operation 201 'icmp' 'icmp_ln47' <Predicate = (state_2 == 17)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 202 [1/1] (0.70ns)   --->   "%select_ln17_1 = select i1 %icmp_ln47, i32 4096, i32 17" [equalizer.cpp:17]   --->   Operation 202 'select' 'select_ln17_1' <Predicate = (state_2 == 17)> <Delay = 0.70> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_34 : Operation 203 [1/1] (1.82ns)   --->   "%br_ln84 = br i1 %tmp_last_V_2, void %if.end50, void %for.inc.while.end_crit_edge.exitStub" [equalizer.cpp:84]   --->   Operation 203 'br' 'br_ln84' <Predicate = (state_2 == 17)> <Delay = 1.82>
ST_34 : Operation 204 [1/1] (0.00ns)   --->   "%state_3239 = phi i32 4096, void %if.end44, i32 %select_ln17, void %sw.bb, i32 %select_ln17_1, void %for.inc, i32 %state_1, void %sw.epilog"   --->   Operation 204 'phi' 'state_3239' <Predicate = (state_2 == 4096 & !tmp_last_V) | (state_2 == 17 & !tmp_last_V_2) | (state_2 != 0 & state_2 != 17 & !tmp_last_V_1) | (state_2 == 0 & !tmp_last_V)> <Delay = 0.00>
ST_34 : Operation 205 [1/1] (1.58ns)   --->   "%store_ln26 = store i32 %state_3239, i32 %state" [equalizer.cpp:26]   --->   Operation 205 'store' 'store_ln26' <Predicate = (state_2 == 4096 & !tmp_last_V) | (state_2 == 17 & !tmp_last_V_2) | (state_2 != 0 & state_2 != 17 & !tmp_last_V_1) | (state_2 == 0 & !tmp_last_V)> <Delay = 1.58>
ST_34 : Operation 206 [1/1] (0.00ns)   --->   "%br_ln26 = br void %while.body" [equalizer.cpp:26]   --->   Operation 206 'br' 'br_ln26' <Predicate = (state_2 == 4096 & !tmp_last_V) | (state_2 == 17 & !tmp_last_V_2) | (state_2 != 0 & state_2 != 17 & !tmp_last_V_1) | (state_2 == 0 & !tmp_last_V)> <Delay = 0.00>

State 35 <SV = 34> <Delay = 7.30>
ST_35 : Operation 207 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_29, i4 15"   --->   Operation 207 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 36 <SV = 35> <Delay = 7.30>
ST_36 : Operation 208 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_28, i4 15"   --->   Operation 208 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 36> <Delay = 7.30>
ST_37 : Operation 209 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln59_cast" [equalizer.cpp:59]   --->   Operation 209 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 210 [7/7] (7.30ns)   --->   "%empty_52 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 33" [equalizer.cpp:59]   --->   Operation 210 'readreq' 'empty_52' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 211 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_27, i4 15"   --->   Operation 211 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 37> <Delay = 7.30>
ST_38 : Operation 212 [6/7] (7.30ns)   --->   "%empty_52 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 33" [equalizer.cpp:59]   --->   Operation 212 'readreq' 'empty_52' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 213 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_26, i4 15"   --->   Operation 213 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 39 <SV = 38> <Delay = 7.30>
ST_39 : Operation 214 [5/7] (7.30ns)   --->   "%empty_52 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 33" [equalizer.cpp:59]   --->   Operation 214 'readreq' 'empty_52' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_39 : Operation 215 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_25, i4 15"   --->   Operation 215 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 39> <Delay = 7.30>
ST_40 : Operation 216 [4/7] (7.30ns)   --->   "%empty_52 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 33" [equalizer.cpp:59]   --->   Operation 216 'readreq' 'empty_52' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 217 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_24, i4 15"   --->   Operation 217 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 41 <SV = 40> <Delay = 7.30>
ST_41 : Operation 218 [3/7] (7.30ns)   --->   "%empty_52 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 33" [equalizer.cpp:59]   --->   Operation 218 'readreq' 'empty_52' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 219 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_23, i4 15"   --->   Operation 219 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 42 <SV = 41> <Delay = 7.30>
ST_42 : Operation 220 [2/7] (7.30ns)   --->   "%empty_52 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 33" [equalizer.cpp:59]   --->   Operation 220 'readreq' 'empty_52' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_42 : Operation 221 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_22, i4 15"   --->   Operation 221 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 42> <Delay = 7.30>
ST_43 : Operation 222 [1/7] (7.30ns)   --->   "%empty_52 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 33" [equalizer.cpp:59]   --->   Operation 222 'readreq' 'empty_52' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_43 : Operation 223 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_21, i4 15"   --->   Operation 223 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 44 <SV = 43> <Delay = 7.30>
ST_44 : Operation 224 [1/1] (7.30ns)   --->   "%gmem_addr_read = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 224 'read' 'gmem_addr_read' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_44 : Operation 225 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_20, i4 15"   --->   Operation 225 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 45 <SV = 44> <Delay = 7.30>
ST_45 : Operation 226 [1/1] (7.30ns)   --->   "%gmem_addr_read_1 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 226 'read' 'gmem_addr_read_1' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_45 : Operation 227 [2/2] (6.91ns)   --->   "%mul_ln62 = mul i32 %tmp_data_V, i32 %gmem_addr_read" [equalizer.cpp:62]   --->   Operation 227 'mul' 'mul_ln62' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 228 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_19, i4 15"   --->   Operation 228 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 46 <SV = 45> <Delay = 7.30>
ST_46 : Operation 229 [1/1] (7.30ns)   --->   "%gmem_addr_read_2 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 229 'read' 'gmem_addr_read_2' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_46 : Operation 230 [1/1] (0.00ns)   --->   "%signal_shift_reg_1_load = load i32 %signal_shift_reg_1" [equalizer.cpp:58]   --->   Operation 230 'load' 'signal_shift_reg_1_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_46 : Operation 231 [1/1] (0.00ns)   --->   "%signal_shift_reg_0_load = load i32 %signal_shift_reg_0" [equalizer.cpp:58]   --->   Operation 231 'load' 'signal_shift_reg_0_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_46 : Operation 232 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_0_load, i32 %signal_shift_reg_1" [equalizer.cpp:58]   --->   Operation 232 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_46 : Operation 233 [2/2] (6.91ns)   --->   "%mul_ln59_30 = mul i32 %signal_shift_reg_0_load, i32 %gmem_addr_read_1" [equalizer.cpp:59]   --->   Operation 233 'mul' 'mul_ln59_30' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 234 [1/2] (6.91ns)   --->   "%mul_ln62 = mul i32 %tmp_data_V, i32 %gmem_addr_read" [equalizer.cpp:62]   --->   Operation 234 'mul' 'mul_ln62' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 235 [1/1] (0.00ns)   --->   "%store_ln63 = store i32 %tmp_data_V, i32 %signal_shift_reg_0" [equalizer.cpp:63]   --->   Operation 235 'store' 'store_ln63' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_46 : Operation 236 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_18, i4 15"   --->   Operation 236 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 47 <SV = 46> <Delay = 7.30>
ST_47 : Operation 237 [1/1] (7.30ns)   --->   "%gmem_addr_read_3 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 237 'read' 'gmem_addr_read_3' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_47 : Operation 238 [1/1] (0.00ns)   --->   "%signal_shift_reg_2_load = load i32 %signal_shift_reg_2" [equalizer.cpp:58]   --->   Operation 238 'load' 'signal_shift_reg_2_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_47 : Operation 239 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_1_load, i32 %signal_shift_reg_2" [equalizer.cpp:58]   --->   Operation 239 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_47 : Operation 240 [2/2] (6.91ns)   --->   "%mul_ln59_29 = mul i32 %signal_shift_reg_1_load, i32 %gmem_addr_read_2" [equalizer.cpp:59]   --->   Operation 240 'mul' 'mul_ln59_29' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 241 [1/2] (6.91ns)   --->   "%mul_ln59_30 = mul i32 %signal_shift_reg_0_load, i32 %gmem_addr_read_1" [equalizer.cpp:59]   --->   Operation 241 'mul' 'mul_ln59_30' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 242 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_17, i4 15"   --->   Operation 242 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 48 <SV = 47> <Delay = 7.30>
ST_48 : Operation 243 [1/1] (7.30ns)   --->   "%gmem_addr_read_4 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 243 'read' 'gmem_addr_read_4' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_48 : Operation 244 [1/1] (0.00ns)   --->   "%signal_shift_reg_3_load = load i32 %signal_shift_reg_3" [equalizer.cpp:58]   --->   Operation 244 'load' 'signal_shift_reg_3_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_48 : Operation 245 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_2_load, i32 %signal_shift_reg_3" [equalizer.cpp:58]   --->   Operation 245 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_48 : Operation 246 [2/2] (6.91ns)   --->   "%mul_ln59_28 = mul i32 %signal_shift_reg_2_load, i32 %gmem_addr_read_3" [equalizer.cpp:59]   --->   Operation 246 'mul' 'mul_ln59_28' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 247 [1/2] (6.91ns)   --->   "%mul_ln59_29 = mul i32 %signal_shift_reg_1_load, i32 %gmem_addr_read_2" [equalizer.cpp:59]   --->   Operation 247 'mul' 'mul_ln59_29' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 248 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_16, i4 15"   --->   Operation 248 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 49 <SV = 48> <Delay = 7.30>
ST_49 : Operation 249 [1/1] (7.30ns)   --->   "%gmem_addr_read_5 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 249 'read' 'gmem_addr_read_5' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_49 : Operation 250 [1/1] (0.00ns)   --->   "%signal_shift_reg_4_load = load i32 %signal_shift_reg_4" [equalizer.cpp:58]   --->   Operation 250 'load' 'signal_shift_reg_4_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_49 : Operation 251 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_3_load, i32 %signal_shift_reg_4" [equalizer.cpp:58]   --->   Operation 251 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_49 : Operation 252 [2/2] (6.91ns)   --->   "%mul_ln59_27 = mul i32 %signal_shift_reg_3_load, i32 %gmem_addr_read_4" [equalizer.cpp:59]   --->   Operation 252 'mul' 'mul_ln59_27' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 253 [1/2] (6.91ns)   --->   "%mul_ln59_28 = mul i32 %signal_shift_reg_2_load, i32 %gmem_addr_read_3" [equalizer.cpp:59]   --->   Operation 253 'mul' 'mul_ln59_28' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 254 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_15, i4 15"   --->   Operation 254 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 50 <SV = 49> <Delay = 7.30>
ST_50 : Operation 255 [1/1] (7.30ns)   --->   "%gmem_addr_read_6 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 255 'read' 'gmem_addr_read_6' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_50 : Operation 256 [1/1] (0.00ns)   --->   "%signal_shift_reg_5_load = load i32 %signal_shift_reg_5" [equalizer.cpp:58]   --->   Operation 256 'load' 'signal_shift_reg_5_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_50 : Operation 257 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_4_load, i32 %signal_shift_reg_5" [equalizer.cpp:58]   --->   Operation 257 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_50 : Operation 258 [2/2] (6.91ns)   --->   "%mul_ln59_26 = mul i32 %signal_shift_reg_4_load, i32 %gmem_addr_read_5" [equalizer.cpp:59]   --->   Operation 258 'mul' 'mul_ln59_26' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 259 [1/2] (6.91ns)   --->   "%mul_ln59_27 = mul i32 %signal_shift_reg_3_load, i32 %gmem_addr_read_4" [equalizer.cpp:59]   --->   Operation 259 'mul' 'mul_ln59_27' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 260 [1/1] (2.55ns)   --->   "%add_ln62 = add i32 %mul_ln59_28, i32 %mul_ln59_29" [equalizer.cpp:62]   --->   Operation 260 'add' 'add_ln62' <Predicate = (state_2 == 4096)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 261 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_14, i4 15"   --->   Operation 261 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 51 <SV = 50> <Delay = 7.30>
ST_51 : Operation 262 [1/1] (7.30ns)   --->   "%gmem_addr_read_7 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 262 'read' 'gmem_addr_read_7' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_51 : Operation 263 [1/1] (0.00ns)   --->   "%signal_shift_reg_6_load = load i32 %signal_shift_reg_6" [equalizer.cpp:58]   --->   Operation 263 'load' 'signal_shift_reg_6_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_51 : Operation 264 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_5_load, i32 %signal_shift_reg_6" [equalizer.cpp:58]   --->   Operation 264 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_51 : Operation 265 [2/2] (6.91ns)   --->   "%mul_ln59_25 = mul i32 %signal_shift_reg_5_load, i32 %gmem_addr_read_6" [equalizer.cpp:59]   --->   Operation 265 'mul' 'mul_ln59_25' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 266 [1/2] (6.91ns)   --->   "%mul_ln59_26 = mul i32 %signal_shift_reg_4_load, i32 %gmem_addr_read_5" [equalizer.cpp:59]   --->   Operation 266 'mul' 'mul_ln59_26' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 267 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_13, i4 15"   --->   Operation 267 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 52 <SV = 51> <Delay = 7.30>
ST_52 : Operation 268 [1/1] (7.30ns)   --->   "%gmem_addr_read_8 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 268 'read' 'gmem_addr_read_8' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_52 : Operation 269 [1/1] (0.00ns)   --->   "%signal_shift_reg_7_load = load i32 %signal_shift_reg_7" [equalizer.cpp:58]   --->   Operation 269 'load' 'signal_shift_reg_7_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_52 : Operation 270 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_6_load, i32 %signal_shift_reg_7" [equalizer.cpp:58]   --->   Operation 270 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_52 : Operation 271 [2/2] (6.91ns)   --->   "%mul_ln59_24 = mul i32 %signal_shift_reg_6_load, i32 %gmem_addr_read_7" [equalizer.cpp:59]   --->   Operation 271 'mul' 'mul_ln59_24' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 272 [1/2] (6.91ns)   --->   "%mul_ln59_25 = mul i32 %signal_shift_reg_5_load, i32 %gmem_addr_read_6" [equalizer.cpp:59]   --->   Operation 272 'mul' 'mul_ln59_25' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 273 [1/1] (2.55ns)   --->   "%add_ln62_1 = add i32 %mul_ln59_27, i32 %mul_ln59_26" [equalizer.cpp:62]   --->   Operation 273 'add' 'add_ln62_1' <Predicate = (state_2 == 4096)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 274 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_12, i4 15"   --->   Operation 274 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 53 <SV = 52> <Delay = 7.30>
ST_53 : Operation 275 [1/1] (7.30ns)   --->   "%gmem_addr_read_9 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 275 'read' 'gmem_addr_read_9' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_53 : Operation 276 [1/1] (0.00ns)   --->   "%signal_shift_reg_8_load = load i32 %signal_shift_reg_8" [equalizer.cpp:58]   --->   Operation 276 'load' 'signal_shift_reg_8_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_53 : Operation 277 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_7_load, i32 %signal_shift_reg_8" [equalizer.cpp:58]   --->   Operation 277 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_53 : Operation 278 [2/2] (6.91ns)   --->   "%mul_ln59_23 = mul i32 %signal_shift_reg_7_load, i32 %gmem_addr_read_8" [equalizer.cpp:59]   --->   Operation 278 'mul' 'mul_ln59_23' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 279 [1/2] (6.91ns)   --->   "%mul_ln59_24 = mul i32 %signal_shift_reg_6_load, i32 %gmem_addr_read_7" [equalizer.cpp:59]   --->   Operation 279 'mul' 'mul_ln59_24' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 280 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_11, i4 15"   --->   Operation 280 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 54 <SV = 53> <Delay = 7.30>
ST_54 : Operation 281 [1/1] (7.30ns)   --->   "%gmem_addr_read_10 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 281 'read' 'gmem_addr_read_10' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_54 : Operation 282 [1/1] (0.00ns)   --->   "%signal_shift_reg_9_load = load i32 %signal_shift_reg_9" [equalizer.cpp:58]   --->   Operation 282 'load' 'signal_shift_reg_9_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_54 : Operation 283 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_8_load, i32 %signal_shift_reg_9" [equalizer.cpp:58]   --->   Operation 283 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_54 : Operation 284 [2/2] (6.91ns)   --->   "%mul_ln59_22 = mul i32 %signal_shift_reg_8_load, i32 %gmem_addr_read_9" [equalizer.cpp:59]   --->   Operation 284 'mul' 'mul_ln59_22' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 285 [1/2] (6.91ns)   --->   "%mul_ln59_23 = mul i32 %signal_shift_reg_7_load, i32 %gmem_addr_read_8" [equalizer.cpp:59]   --->   Operation 285 'mul' 'mul_ln59_23' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 286 [1/1] (2.55ns)   --->   "%add_ln62_4 = add i32 %mul_ln59_25, i32 %mul_ln59_24" [equalizer.cpp:62]   --->   Operation 286 'add' 'add_ln62_4' <Predicate = (state_2 == 4096)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 287 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_10, i4 15"   --->   Operation 287 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 55 <SV = 54> <Delay = 7.30>
ST_55 : Operation 288 [1/1] (7.30ns)   --->   "%gmem_addr_read_11 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 288 'read' 'gmem_addr_read_11' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_55 : Operation 289 [1/1] (0.00ns)   --->   "%signal_shift_reg_10_load = load i32 %signal_shift_reg_10" [equalizer.cpp:58]   --->   Operation 289 'load' 'signal_shift_reg_10_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_55 : Operation 290 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_9_load, i32 %signal_shift_reg_10" [equalizer.cpp:58]   --->   Operation 290 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_55 : Operation 291 [2/2] (6.91ns)   --->   "%mul_ln59_21 = mul i32 %signal_shift_reg_9_load, i32 %gmem_addr_read_10" [equalizer.cpp:59]   --->   Operation 291 'mul' 'mul_ln59_21' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 292 [1/2] (6.91ns)   --->   "%mul_ln59_22 = mul i32 %signal_shift_reg_8_load, i32 %gmem_addr_read_9" [equalizer.cpp:59]   --->   Operation 292 'mul' 'mul_ln59_22' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 293 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_9, i4 15"   --->   Operation 293 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 56 <SV = 55> <Delay = 7.30>
ST_56 : Operation 294 [1/1] (7.30ns)   --->   "%gmem_addr_read_12 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 294 'read' 'gmem_addr_read_12' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_56 : Operation 295 [1/1] (0.00ns)   --->   "%signal_shift_reg_11_load = load i32 %signal_shift_reg_11" [equalizer.cpp:58]   --->   Operation 295 'load' 'signal_shift_reg_11_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_56 : Operation 296 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_10_load, i32 %signal_shift_reg_11" [equalizer.cpp:58]   --->   Operation 296 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_56 : Operation 297 [2/2] (6.91ns)   --->   "%mul_ln59_20 = mul i32 %signal_shift_reg_10_load, i32 %gmem_addr_read_11" [equalizer.cpp:59]   --->   Operation 297 'mul' 'mul_ln59_20' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 298 [1/2] (6.91ns)   --->   "%mul_ln59_21 = mul i32 %signal_shift_reg_9_load, i32 %gmem_addr_read_10" [equalizer.cpp:59]   --->   Operation 298 'mul' 'mul_ln59_21' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 299 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln62_3 = add i32 %mul_ln59_23, i32 %mul_ln59_22" [equalizer.cpp:62]   --->   Operation 299 'add' 'add_ln62_3' <Predicate = (state_2 == 4096)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_56 : Operation 300 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln62_5 = add i32 %add_ln62_4, i32 %add_ln62_3" [equalizer.cpp:62]   --->   Operation 300 'add' 'add_ln62_5' <Predicate = (state_2 == 4096)> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_56 : Operation 301 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_8, i4 15"   --->   Operation 301 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 57 <SV = 56> <Delay = 7.30>
ST_57 : Operation 302 [1/1] (7.30ns)   --->   "%gmem_addr_read_13 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 302 'read' 'gmem_addr_read_13' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_57 : Operation 303 [1/1] (0.00ns)   --->   "%signal_shift_reg_12_load = load i32 %signal_shift_reg_12" [equalizer.cpp:58]   --->   Operation 303 'load' 'signal_shift_reg_12_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_57 : Operation 304 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_11_load, i32 %signal_shift_reg_12" [equalizer.cpp:58]   --->   Operation 304 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_57 : Operation 305 [2/2] (6.91ns)   --->   "%mul_ln59_19 = mul i32 %signal_shift_reg_11_load, i32 %gmem_addr_read_12" [equalizer.cpp:59]   --->   Operation 305 'mul' 'mul_ln59_19' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_57 : Operation 306 [1/2] (6.91ns)   --->   "%mul_ln59_20 = mul i32 %signal_shift_reg_10_load, i32 %gmem_addr_read_11" [equalizer.cpp:59]   --->   Operation 306 'mul' 'mul_ln59_20' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_57 : Operation 307 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln62_2 = add i32 %add_ln62_1, i32 %add_ln62" [equalizer.cpp:62]   --->   Operation 307 'add' 'add_ln62_2' <Predicate = (state_2 == 4096)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_57 : Operation 308 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln62_6 = add i32 %add_ln62_5, i32 %add_ln62_2" [equalizer.cpp:62]   --->   Operation 308 'add' 'add_ln62_6' <Predicate = (state_2 == 4096)> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_57 : Operation 309 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_7, i4 15"   --->   Operation 309 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 58 <SV = 57> <Delay = 7.30>
ST_58 : Operation 310 [1/1] (7.30ns)   --->   "%gmem_addr_read_14 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 310 'read' 'gmem_addr_read_14' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_58 : Operation 311 [1/1] (0.00ns)   --->   "%signal_shift_reg_13_load = load i32 %signal_shift_reg_13" [equalizer.cpp:58]   --->   Operation 311 'load' 'signal_shift_reg_13_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_58 : Operation 312 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_12_load, i32 %signal_shift_reg_13" [equalizer.cpp:58]   --->   Operation 312 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_58 : Operation 313 [2/2] (6.91ns)   --->   "%mul_ln59_18 = mul i32 %signal_shift_reg_12_load, i32 %gmem_addr_read_13" [equalizer.cpp:59]   --->   Operation 313 'mul' 'mul_ln59_18' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_58 : Operation 314 [1/2] (6.91ns)   --->   "%mul_ln59_19 = mul i32 %signal_shift_reg_11_load, i32 %gmem_addr_read_12" [equalizer.cpp:59]   --->   Operation 314 'mul' 'mul_ln59_19' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_58 : Operation 315 [1/1] (2.55ns)   --->   "%add_ln62_11 = add i32 %mul_ln59_21, i32 %mul_ln59_20" [equalizer.cpp:62]   --->   Operation 315 'add' 'add_ln62_11' <Predicate = (state_2 == 4096)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_58 : Operation 316 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_6, i4 15"   --->   Operation 316 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 59 <SV = 58> <Delay = 7.30>
ST_59 : Operation 317 [1/1] (7.30ns)   --->   "%gmem_addr_read_15 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 317 'read' 'gmem_addr_read_15' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_59 : Operation 318 [1/1] (0.00ns)   --->   "%signal_shift_reg_14_load = load i32 %signal_shift_reg_14" [equalizer.cpp:58]   --->   Operation 318 'load' 'signal_shift_reg_14_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_59 : Operation 319 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_13_load, i32 %signal_shift_reg_14" [equalizer.cpp:58]   --->   Operation 319 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_59 : Operation 320 [2/2] (6.91ns)   --->   "%mul_ln59_17 = mul i32 %signal_shift_reg_13_load, i32 %gmem_addr_read_14" [equalizer.cpp:59]   --->   Operation 320 'mul' 'mul_ln59_17' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 321 [1/2] (6.91ns)   --->   "%mul_ln59_18 = mul i32 %signal_shift_reg_12_load, i32 %gmem_addr_read_13" [equalizer.cpp:59]   --->   Operation 321 'mul' 'mul_ln59_18' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 322 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_5, i4 15"   --->   Operation 322 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 60 <SV = 59> <Delay = 7.30>
ST_60 : Operation 323 [1/1] (7.30ns)   --->   "%gmem_addr_read_16 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 323 'read' 'gmem_addr_read_16' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_60 : Operation 324 [1/1] (0.00ns)   --->   "%signal_shift_reg_15_load = load i32 %signal_shift_reg_15" [equalizer.cpp:58]   --->   Operation 324 'load' 'signal_shift_reg_15_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_60 : Operation 325 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_14_load, i32 %signal_shift_reg_15" [equalizer.cpp:58]   --->   Operation 325 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_60 : Operation 326 [2/2] (6.91ns)   --->   "%mul_ln59_16 = mul i32 %signal_shift_reg_14_load, i32 %gmem_addr_read_15" [equalizer.cpp:59]   --->   Operation 326 'mul' 'mul_ln59_16' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_60 : Operation 327 [1/2] (6.91ns)   --->   "%mul_ln59_17 = mul i32 %signal_shift_reg_13_load, i32 %gmem_addr_read_14" [equalizer.cpp:59]   --->   Operation 327 'mul' 'mul_ln59_17' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_60 : Operation 328 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln62_10 = add i32 %mul_ln59_19, i32 %mul_ln59_18" [equalizer.cpp:62]   --->   Operation 328 'add' 'add_ln62_10' <Predicate = (state_2 == 4096)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_60 : Operation 329 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln62_12 = add i32 %add_ln62_11, i32 %add_ln62_10" [equalizer.cpp:62]   --->   Operation 329 'add' 'add_ln62_12' <Predicate = (state_2 == 4096)> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_60 : Operation 330 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_4, i4 15"   --->   Operation 330 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 61 <SV = 60> <Delay = 7.30>
ST_61 : Operation 331 [1/1] (7.30ns)   --->   "%gmem_addr_read_17 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 331 'read' 'gmem_addr_read_17' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_61 : Operation 332 [1/1] (0.00ns)   --->   "%signal_shift_reg_16_load = load i32 %signal_shift_reg_16" [equalizer.cpp:58]   --->   Operation 332 'load' 'signal_shift_reg_16_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_61 : Operation 333 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_15_load, i32 %signal_shift_reg_16" [equalizer.cpp:58]   --->   Operation 333 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_61 : Operation 334 [2/2] (6.91ns)   --->   "%mul_ln59_15 = mul i32 %signal_shift_reg_15_load, i32 %gmem_addr_read_16" [equalizer.cpp:59]   --->   Operation 334 'mul' 'mul_ln59_15' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 335 [1/2] (6.91ns)   --->   "%mul_ln59_16 = mul i32 %signal_shift_reg_14_load, i32 %gmem_addr_read_15" [equalizer.cpp:59]   --->   Operation 335 'mul' 'mul_ln59_16' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 336 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_3, i4 15"   --->   Operation 336 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 62 <SV = 61> <Delay = 7.30>
ST_62 : Operation 337 [1/1] (7.30ns)   --->   "%gmem_addr_read_18 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 337 'read' 'gmem_addr_read_18' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_62 : Operation 338 [1/1] (0.00ns)   --->   "%signal_shift_reg_17_load = load i32 %signal_shift_reg_17" [equalizer.cpp:58]   --->   Operation 338 'load' 'signal_shift_reg_17_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_62 : Operation 339 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_16_load, i32 %signal_shift_reg_17" [equalizer.cpp:58]   --->   Operation 339 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_62 : Operation 340 [2/2] (6.91ns)   --->   "%mul_ln59_14 = mul i32 %signal_shift_reg_16_load, i32 %gmem_addr_read_17" [equalizer.cpp:59]   --->   Operation 340 'mul' 'mul_ln59_14' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 341 [1/2] (6.91ns)   --->   "%mul_ln59_15 = mul i32 %signal_shift_reg_15_load, i32 %gmem_addr_read_16" [equalizer.cpp:59]   --->   Operation 341 'mul' 'mul_ln59_15' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 342 [1/1] (2.55ns)   --->   "%add_ln62_8 = add i32 %mul_ln59_17, i32 %mul_ln59_16" [equalizer.cpp:62]   --->   Operation 342 'add' 'add_ln62_8' <Predicate = (state_2 == 4096)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 343 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_2, i4 15"   --->   Operation 343 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 63 <SV = 62> <Delay = 7.30>
ST_63 : Operation 344 [1/1] (7.30ns)   --->   "%gmem_addr_read_19 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 344 'read' 'gmem_addr_read_19' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_63 : Operation 345 [1/1] (0.00ns)   --->   "%signal_shift_reg_18_load = load i32 %signal_shift_reg_18" [equalizer.cpp:58]   --->   Operation 345 'load' 'signal_shift_reg_18_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_63 : Operation 346 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_17_load, i32 %signal_shift_reg_18" [equalizer.cpp:58]   --->   Operation 346 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_63 : Operation 347 [2/2] (6.91ns)   --->   "%mul_ln59_13 = mul i32 %signal_shift_reg_17_load, i32 %gmem_addr_read_18" [equalizer.cpp:59]   --->   Operation 347 'mul' 'mul_ln59_13' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 348 [1/2] (6.91ns)   --->   "%mul_ln59_14 = mul i32 %signal_shift_reg_16_load, i32 %gmem_addr_read_17" [equalizer.cpp:59]   --->   Operation 348 'mul' 'mul_ln59_14' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 349 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V_1, i4 15"   --->   Operation 349 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 64 <SV = 63> <Delay = 7.30>
ST_64 : Operation 350 [1/1] (7.30ns)   --->   "%gmem_addr_read_20 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 350 'read' 'gmem_addr_read_20' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_64 : Operation 351 [1/1] (0.00ns)   --->   "%signal_shift_reg_19_load = load i32 %signal_shift_reg_19" [equalizer.cpp:58]   --->   Operation 351 'load' 'signal_shift_reg_19_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_64 : Operation 352 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_18_load, i32 %signal_shift_reg_19" [equalizer.cpp:58]   --->   Operation 352 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_64 : Operation 353 [2/2] (6.91ns)   --->   "%mul_ln59_12 = mul i32 %signal_shift_reg_18_load, i32 %gmem_addr_read_19" [equalizer.cpp:59]   --->   Operation 353 'mul' 'mul_ln59_12' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 354 [1/2] (6.91ns)   --->   "%mul_ln59_13 = mul i32 %signal_shift_reg_17_load, i32 %gmem_addr_read_18" [equalizer.cpp:59]   --->   Operation 354 'mul' 'mul_ln59_13' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 355 [1/1] (2.55ns)   --->   "%add_ln62_7 = add i32 %mul_ln59_15, i32 %mul_ln59_14" [equalizer.cpp:62]   --->   Operation 355 'add' 'add_ln62_7' <Predicate = (state_2 == 4096)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 356 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln62_9 = add i32 %add_ln62_8, i32 %add_ln62_7" [equalizer.cpp:62]   --->   Operation 356 'add' 'add_ln62_9' <Predicate = (state_2 == 4096)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_64 : Operation 357 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln62_13 = add i32 %add_ln62_12, i32 %add_ln62_9" [equalizer.cpp:62]   --->   Operation 357 'add' 'add_ln62_13' <Predicate = (state_2 == 4096)> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_64 : Operation 358 [1/1] (7.30ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp_data_V, i4 15"   --->   Operation 358 'write' 'write_ln0' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 65 <SV = 64> <Delay = 7.30>
ST_65 : Operation 359 [1/1] (7.30ns)   --->   "%gmem_addr_read_21 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 359 'read' 'gmem_addr_read_21' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_65 : Operation 360 [1/1] (0.00ns)   --->   "%signal_shift_reg_20_load = load i32 %signal_shift_reg_20" [equalizer.cpp:58]   --->   Operation 360 'load' 'signal_shift_reg_20_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_65 : Operation 361 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_19_load, i32 %signal_shift_reg_20" [equalizer.cpp:58]   --->   Operation 361 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_65 : Operation 362 [2/2] (6.91ns)   --->   "%mul_ln59_11 = mul i32 %signal_shift_reg_19_load, i32 %gmem_addr_read_20" [equalizer.cpp:59]   --->   Operation 362 'mul' 'mul_ln59_11' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 363 [1/2] (6.91ns)   --->   "%mul_ln59_12 = mul i32 %signal_shift_reg_18_load, i32 %gmem_addr_read_19" [equalizer.cpp:59]   --->   Operation 363 'mul' 'mul_ln59_12' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 364 [5/5] (7.30ns)   --->   "%empty_50 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr_1"   --->   Operation 364 'writeresp' 'empty_50' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 66 <SV = 65> <Delay = 7.30>
ST_66 : Operation 365 [1/1] (7.30ns)   --->   "%gmem_addr_read_22 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 365 'read' 'gmem_addr_read_22' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_66 : Operation 366 [1/1] (0.00ns)   --->   "%signal_shift_reg_21_load = load i32 %signal_shift_reg_21" [equalizer.cpp:58]   --->   Operation 366 'load' 'signal_shift_reg_21_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_66 : Operation 367 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_20_load, i32 %signal_shift_reg_21" [equalizer.cpp:58]   --->   Operation 367 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_66 : Operation 368 [2/2] (6.91ns)   --->   "%mul_ln59_10 = mul i32 %signal_shift_reg_20_load, i32 %gmem_addr_read_21" [equalizer.cpp:59]   --->   Operation 368 'mul' 'mul_ln59_10' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 369 [1/2] (6.91ns)   --->   "%mul_ln59_11 = mul i32 %signal_shift_reg_19_load, i32 %gmem_addr_read_20" [equalizer.cpp:59]   --->   Operation 369 'mul' 'mul_ln59_11' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 370 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln62_26 = add i32 %mul_ln59_12, i32 %mul_ln59_30" [equalizer.cpp:62]   --->   Operation 370 'add' 'add_ln62_26' <Predicate = (state_2 == 4096)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_66 : Operation 371 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln62_27 = add i32 %add_ln62_26, i32 %mul_ln59_13" [equalizer.cpp:62]   --->   Operation 371 'add' 'add_ln62_27' <Predicate = (state_2 == 4096)> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_66 : Operation 372 [4/5] (7.30ns)   --->   "%empty_50 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr_1"   --->   Operation 372 'writeresp' 'empty_50' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 67 <SV = 66> <Delay = 7.30>
ST_67 : Operation 373 [1/1] (7.30ns)   --->   "%gmem_addr_read_23 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 373 'read' 'gmem_addr_read_23' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_67 : Operation 374 [1/1] (0.00ns)   --->   "%signal_shift_reg_22_load = load i32 %signal_shift_reg_22" [equalizer.cpp:58]   --->   Operation 374 'load' 'signal_shift_reg_22_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_67 : Operation 375 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_21_load, i32 %signal_shift_reg_22" [equalizer.cpp:58]   --->   Operation 375 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_67 : Operation 376 [2/2] (6.91ns)   --->   "%mul_ln59_9 = mul i32 %signal_shift_reg_21_load, i32 %gmem_addr_read_22" [equalizer.cpp:59]   --->   Operation 376 'mul' 'mul_ln59_9' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 377 [1/2] (6.91ns)   --->   "%mul_ln59_10 = mul i32 %signal_shift_reg_20_load, i32 %gmem_addr_read_21" [equalizer.cpp:59]   --->   Operation 377 'mul' 'mul_ln59_10' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 378 [3/5] (7.30ns)   --->   "%empty_50 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr_1"   --->   Operation 378 'writeresp' 'empty_50' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 68 <SV = 67> <Delay = 7.30>
ST_68 : Operation 379 [1/1] (7.30ns)   --->   "%gmem_addr_read_24 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 379 'read' 'gmem_addr_read_24' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_68 : Operation 380 [1/1] (0.00ns)   --->   "%signal_shift_reg_23_load = load i32 %signal_shift_reg_23" [equalizer.cpp:58]   --->   Operation 380 'load' 'signal_shift_reg_23_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_68 : Operation 381 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_22_load, i32 %signal_shift_reg_23" [equalizer.cpp:58]   --->   Operation 381 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_68 : Operation 382 [2/2] (6.91ns)   --->   "%mul_ln59_8 = mul i32 %signal_shift_reg_22_load, i32 %gmem_addr_read_23" [equalizer.cpp:59]   --->   Operation 382 'mul' 'mul_ln59_8' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 383 [1/2] (6.91ns)   --->   "%mul_ln59_9 = mul i32 %signal_shift_reg_21_load, i32 %gmem_addr_read_22" [equalizer.cpp:59]   --->   Operation 383 'mul' 'mul_ln59_9' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 384 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln62_25 = add i32 %mul_ln59_11, i32 %mul_ln59_10" [equalizer.cpp:62]   --->   Operation 384 'add' 'add_ln62_25' <Predicate = (state_2 == 4096)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_68 : Operation 385 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln62_28 = add i32 %add_ln62_27, i32 %add_ln62_25" [equalizer.cpp:62]   --->   Operation 385 'add' 'add_ln62_28' <Predicate = (state_2 == 4096)> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_68 : Operation 386 [2/5] (7.30ns)   --->   "%empty_50 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr_1"   --->   Operation 386 'writeresp' 'empty_50' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 69 <SV = 68> <Delay = 7.30>
ST_69 : Operation 387 [1/1] (7.30ns)   --->   "%gmem_addr_read_25 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 387 'read' 'gmem_addr_read_25' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_69 : Operation 388 [1/1] (0.00ns)   --->   "%signal_shift_reg_24_load = load i32 %signal_shift_reg_24" [equalizer.cpp:58]   --->   Operation 388 'load' 'signal_shift_reg_24_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_69 : Operation 389 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_23_load, i32 %signal_shift_reg_24" [equalizer.cpp:58]   --->   Operation 389 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_69 : Operation 390 [2/2] (6.91ns)   --->   "%mul_ln59_7 = mul i32 %signal_shift_reg_23_load, i32 %gmem_addr_read_24" [equalizer.cpp:59]   --->   Operation 390 'mul' 'mul_ln59_7' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 391 [1/2] (6.91ns)   --->   "%mul_ln59_8 = mul i32 %signal_shift_reg_22_load, i32 %gmem_addr_read_23" [equalizer.cpp:59]   --->   Operation 391 'mul' 'mul_ln59_8' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 392 [1/5] (7.30ns)   --->   "%empty_50 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr_1"   --->   Operation 392 'writeresp' 'empty_50' <Predicate = (state_2 == 17)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 70 <SV = 69> <Delay = 7.30>
ST_70 : Operation 393 [1/1] (0.00ns)   --->   "%tmp_out_data_V_1 = load i32 %tmp_out_data_V"   --->   Operation 393 'load' 'tmp_out_data_V_1' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 394 [1/1] (0.00ns)   --->   "%tmp_out_keep_V_1 = load i4 %tmp_out_keep_V"   --->   Operation 394 'load' 'tmp_out_keep_V_1' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 395 [1/1] (0.00ns)   --->   "%tmp_out_strb_V_1 = load i4 %tmp_out_strb_V"   --->   Operation 395 'load' 'tmp_out_strb_V_1' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 396 [1/1] (0.00ns)   --->   "%tmp_out_user_V_1 = load i1 %tmp_out_user_V"   --->   Operation 396 'load' 'tmp_out_user_V_1' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 397 [1/1] (0.00ns)   --->   "%tmp_out_id_V_1 = load i1 %tmp_out_id_V"   --->   Operation 397 'load' 'tmp_out_id_V_1' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 398 [1/1] (0.00ns)   --->   "%tmp_out_dest_V_1 = load i1 %tmp_out_dest_V"   --->   Operation 398 'load' 'tmp_out_dest_V_1' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 399 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 399 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 400 [1/1] (0.00ns)   --->   "%specpipeline_ln27 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_7" [equalizer.cpp:27]   --->   Operation 400 'specpipeline' 'specpipeline_ln27' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 401 [1/1] (0.00ns)   --->   "%specloopname_ln18 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [equalizer.cpp:18]   --->   Operation 401 'specloopname' 'specloopname_ln18' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 402 [1/1] (7.30ns)   --->   "%gmem_addr_read_26 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 402 'read' 'gmem_addr_read_26' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_70 : Operation 403 [1/1] (0.00ns)   --->   "%signal_shift_reg_25_load = load i32 %signal_shift_reg_25" [equalizer.cpp:58]   --->   Operation 403 'load' 'signal_shift_reg_25_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_70 : Operation 404 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_24_load, i32 %signal_shift_reg_25" [equalizer.cpp:58]   --->   Operation 404 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_70 : Operation 405 [2/2] (6.91ns)   --->   "%mul_ln59_6 = mul i32 %signal_shift_reg_24_load, i32 %gmem_addr_read_25" [equalizer.cpp:59]   --->   Operation 405 'mul' 'mul_ln59_6' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 406 [1/2] (6.91ns)   --->   "%mul_ln59_7 = mul i32 %signal_shift_reg_23_load, i32 %gmem_addr_read_24" [equalizer.cpp:59]   --->   Operation 406 'mul' 'mul_ln59_7' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 407 [1/1] (2.55ns)   --->   "%add_ln62_23 = add i32 %mul_ln59_9, i32 %mul_ln59_8" [equalizer.cpp:62]   --->   Operation 407 'add' 'add_ln62_23' <Predicate = (state_2 == 4096)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 408 [1/1] (0.00ns)   --->   "%store_ln84 = store i1 %tmp_dest_V, i1 %tmp_out_dest_V" [equalizer.cpp:84]   --->   Operation 408 'store' 'store_ln84' <Predicate = (state_2 == 4096 & !tmp_last_V)> <Delay = 0.00>
ST_70 : Operation 409 [1/1] (0.00ns)   --->   "%store_ln84 = store i1 %tmp_id_V, i1 %tmp_out_id_V" [equalizer.cpp:84]   --->   Operation 409 'store' 'store_ln84' <Predicate = (state_2 == 4096 & !tmp_last_V)> <Delay = 0.00>
ST_70 : Operation 410 [1/1] (0.00ns)   --->   "%store_ln84 = store i1 %tmp_user_V, i1 %tmp_out_user_V" [equalizer.cpp:84]   --->   Operation 410 'store' 'store_ln84' <Predicate = (state_2 == 4096 & !tmp_last_V)> <Delay = 0.00>
ST_70 : Operation 411 [1/1] (0.00ns)   --->   "%store_ln84 = store i4 %tmp_strb_V, i4 %tmp_out_strb_V" [equalizer.cpp:84]   --->   Operation 411 'store' 'store_ln84' <Predicate = (state_2 == 4096 & !tmp_last_V)> <Delay = 0.00>
ST_70 : Operation 412 [1/1] (0.00ns)   --->   "%store_ln84 = store i4 %tmp_keep_V, i4 %tmp_out_keep_V" [equalizer.cpp:84]   --->   Operation 412 'store' 'store_ln84' <Predicate = (state_2 == 4096 & !tmp_last_V)> <Delay = 0.00>
ST_70 : Operation 413 [1/1] (0.00ns)   --->   "%store_ln73 = store i1 %tmp_dest_V, i1 %tmp_out_dest_V" [equalizer.cpp:73]   --->   Operation 413 'store' 'store_ln73' <Predicate = (state_2 == 4096 & tmp_last_V)> <Delay = 0.00>
ST_70 : Operation 414 [1/1] (0.00ns)   --->   "%store_ln73 = store i1 %tmp_id_V, i1 %tmp_out_id_V" [equalizer.cpp:73]   --->   Operation 414 'store' 'store_ln73' <Predicate = (state_2 == 4096 & tmp_last_V)> <Delay = 0.00>
ST_70 : Operation 415 [1/1] (0.00ns)   --->   "%store_ln73 = store i1 %tmp_user_V, i1 %tmp_out_user_V" [equalizer.cpp:73]   --->   Operation 415 'store' 'store_ln73' <Predicate = (state_2 == 4096 & tmp_last_V)> <Delay = 0.00>
ST_70 : Operation 416 [1/1] (0.00ns)   --->   "%store_ln73 = store i4 %tmp_strb_V, i4 %tmp_out_strb_V" [equalizer.cpp:73]   --->   Operation 416 'store' 'store_ln73' <Predicate = (state_2 == 4096 & tmp_last_V)> <Delay = 0.00>
ST_70 : Operation 417 [1/1] (0.00ns)   --->   "%store_ln73 = store i4 %tmp_keep_V, i4 %tmp_out_keep_V" [equalizer.cpp:73]   --->   Operation 417 'store' 'store_ln73' <Predicate = (state_2 == 4096 & tmp_last_V)> <Delay = 0.00>

State 71 <SV = 70> <Delay = 7.30>
ST_71 : Operation 418 [1/1] (7.30ns)   --->   "%gmem_addr_read_27 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 418 'read' 'gmem_addr_read_27' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_71 : Operation 419 [1/1] (0.00ns)   --->   "%signal_shift_reg_26_load = load i32 %signal_shift_reg_26" [equalizer.cpp:58]   --->   Operation 419 'load' 'signal_shift_reg_26_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_71 : Operation 420 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_25_load, i32 %signal_shift_reg_26" [equalizer.cpp:58]   --->   Operation 420 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_71 : Operation 421 [2/2] (6.91ns)   --->   "%mul_ln59_5 = mul i32 %signal_shift_reg_25_load, i32 %gmem_addr_read_26" [equalizer.cpp:59]   --->   Operation 421 'mul' 'mul_ln59_5' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_71 : Operation 422 [1/2] (6.91ns)   --->   "%mul_ln59_6 = mul i32 %signal_shift_reg_24_load, i32 %gmem_addr_read_25" [equalizer.cpp:59]   --->   Operation 422 'mul' 'mul_ln59_6' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 72 <SV = 71> <Delay = 7.30>
ST_72 : Operation 423 [1/1] (7.30ns)   --->   "%gmem_addr_read_28 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 423 'read' 'gmem_addr_read_28' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_72 : Operation 424 [1/1] (0.00ns)   --->   "%signal_shift_reg_27_load = load i32 %signal_shift_reg_27" [equalizer.cpp:58]   --->   Operation 424 'load' 'signal_shift_reg_27_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_72 : Operation 425 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_26_load, i32 %signal_shift_reg_27" [equalizer.cpp:58]   --->   Operation 425 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_72 : Operation 426 [2/2] (6.91ns)   --->   "%mul_ln59_4 = mul i32 %signal_shift_reg_26_load, i32 %gmem_addr_read_27" [equalizer.cpp:59]   --->   Operation 426 'mul' 'mul_ln59_4' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_72 : Operation 427 [1/2] (6.91ns)   --->   "%mul_ln59_5 = mul i32 %signal_shift_reg_25_load, i32 %gmem_addr_read_26" [equalizer.cpp:59]   --->   Operation 427 'mul' 'mul_ln59_5' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_72 : Operation 428 [1/1] (2.55ns)   --->   "%add_ln62_22 = add i32 %mul_ln59_7, i32 %mul_ln59_6" [equalizer.cpp:62]   --->   Operation 428 'add' 'add_ln62_22' <Predicate = (state_2 == 4096)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_72 : Operation 429 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln62_24 = add i32 %add_ln62_23, i32 %add_ln62_22" [equalizer.cpp:62]   --->   Operation 429 'add' 'add_ln62_24' <Predicate = (state_2 == 4096)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_72 : Operation 430 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln62_29 = add i32 %add_ln62_28, i32 %add_ln62_24" [equalizer.cpp:62]   --->   Operation 430 'add' 'add_ln62_29' <Predicate = (state_2 == 4096)> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 73 <SV = 72> <Delay = 7.30>
ST_73 : Operation 431 [1/1] (7.30ns)   --->   "%gmem_addr_read_29 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 431 'read' 'gmem_addr_read_29' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_73 : Operation 432 [1/1] (0.00ns)   --->   "%signal_shift_reg_28_load = load i32 %signal_shift_reg_28" [equalizer.cpp:58]   --->   Operation 432 'load' 'signal_shift_reg_28_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_73 : Operation 433 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_27_load, i32 %signal_shift_reg_28" [equalizer.cpp:58]   --->   Operation 433 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_73 : Operation 434 [2/2] (6.91ns)   --->   "%mul_ln59_3 = mul i32 %signal_shift_reg_27_load, i32 %gmem_addr_read_28" [equalizer.cpp:59]   --->   Operation 434 'mul' 'mul_ln59_3' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 435 [1/2] (6.91ns)   --->   "%mul_ln59_4 = mul i32 %signal_shift_reg_26_load, i32 %gmem_addr_read_27" [equalizer.cpp:59]   --->   Operation 435 'mul' 'mul_ln59_4' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 74 <SV = 73> <Delay = 7.30>
ST_74 : Operation 436 [1/1] (7.30ns)   --->   "%gmem_addr_read_30 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 436 'read' 'gmem_addr_read_30' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_74 : Operation 437 [1/1] (0.00ns)   --->   "%signal_shift_reg_29_load = load i32 %signal_shift_reg_29" [equalizer.cpp:58]   --->   Operation 437 'load' 'signal_shift_reg_29_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_74 : Operation 438 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_28_load, i32 %signal_shift_reg_29" [equalizer.cpp:58]   --->   Operation 438 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_74 : Operation 439 [2/2] (6.91ns)   --->   "%mul_ln59_2 = mul i32 %signal_shift_reg_28_load, i32 %gmem_addr_read_29" [equalizer.cpp:59]   --->   Operation 439 'mul' 'mul_ln59_2' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_74 : Operation 440 [1/2] (6.91ns)   --->   "%mul_ln59_3 = mul i32 %signal_shift_reg_27_load, i32 %gmem_addr_read_28" [equalizer.cpp:59]   --->   Operation 440 'mul' 'mul_ln59_3' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_74 : Operation 441 [1/1] (2.55ns)   --->   "%add_ln62_19 = add i32 %mul_ln59_5, i32 %mul_ln59_4" [equalizer.cpp:62]   --->   Operation 441 'add' 'add_ln62_19' <Predicate = (state_2 == 4096)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 75 <SV = 74> <Delay = 7.30>
ST_75 : Operation 442 [1/1] (7.30ns)   --->   "%gmem_addr_read_31 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 442 'read' 'gmem_addr_read_31' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_75 : Operation 443 [1/1] (0.00ns)   --->   "%signal_shift_reg_30_load = load i32 %signal_shift_reg_30" [equalizer.cpp:58]   --->   Operation 443 'load' 'signal_shift_reg_30_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_75 : Operation 444 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_29_load, i32 %signal_shift_reg_30" [equalizer.cpp:58]   --->   Operation 444 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_75 : Operation 445 [2/2] (6.91ns)   --->   "%mul_ln59_1 = mul i32 %signal_shift_reg_29_load, i32 %gmem_addr_read_30" [equalizer.cpp:59]   --->   Operation 445 'mul' 'mul_ln59_1' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_75 : Operation 446 [1/2] (6.91ns)   --->   "%mul_ln59_2 = mul i32 %signal_shift_reg_28_load, i32 %gmem_addr_read_29" [equalizer.cpp:59]   --->   Operation 446 'mul' 'mul_ln59_2' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 76 <SV = 75> <Delay = 7.30>
ST_76 : Operation 447 [1/1] (0.00ns)   --->   "%signal_shift_reg_31_load = load i32 %signal_shift_reg_31" [equalizer.cpp:58]   --->   Operation 447 'load' 'signal_shift_reg_31_load' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_76 : Operation 448 [1/1] (7.30ns)   --->   "%gmem_addr_read_32 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [equalizer.cpp:59]   --->   Operation 448 'read' 'gmem_addr_read_32' <Predicate = (state_2 == 4096)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_76 : Operation 449 [1/1] (0.00ns)   --->   "%store_ln58 = store i32 %signal_shift_reg_30_load, i32 %signal_shift_reg_31" [equalizer.cpp:58]   --->   Operation 449 'store' 'store_ln58' <Predicate = (state_2 == 4096)> <Delay = 0.00>
ST_76 : Operation 450 [2/2] (6.91ns)   --->   "%mul_ln59 = mul i32 %signal_shift_reg_30_load, i32 %gmem_addr_read_31" [equalizer.cpp:59]   --->   Operation 450 'mul' 'mul_ln59' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_76 : Operation 451 [1/2] (6.91ns)   --->   "%mul_ln59_1 = mul i32 %signal_shift_reg_29_load, i32 %gmem_addr_read_30" [equalizer.cpp:59]   --->   Operation 451 'mul' 'mul_ln59_1' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_76 : Operation 452 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln62_18 = add i32 %mul_ln59_3, i32 %mul_ln59_2" [equalizer.cpp:62]   --->   Operation 452 'add' 'add_ln62_18' <Predicate = (state_2 == 4096)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_76 : Operation 453 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln62_20 = add i32 %add_ln62_19, i32 %add_ln62_18" [equalizer.cpp:62]   --->   Operation 453 'add' 'add_ln62_20' <Predicate = (state_2 == 4096)> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 77 <SV = 76> <Delay = 6.91>
ST_77 : Operation 454 [2/2] (6.91ns)   --->   "%accumulate = mul i32 %signal_shift_reg_31_load, i32 %gmem_addr_read_32" [equalizer.cpp:59]   --->   Operation 454 'mul' 'accumulate' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 455 [1/2] (6.91ns)   --->   "%mul_ln59 = mul i32 %signal_shift_reg_30_load, i32 %gmem_addr_read_31" [equalizer.cpp:59]   --->   Operation 455 'mul' 'mul_ln59' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 78 <SV = 77> <Delay = 6.91>
ST_78 : Operation 456 [1/2] (6.91ns)   --->   "%accumulate = mul i32 %signal_shift_reg_31_load, i32 %gmem_addr_read_32" [equalizer.cpp:59]   --->   Operation 456 'mul' 'accumulate' <Predicate = (state_2 == 4096)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 79 <SV = 78> <Delay = 6.92>
ST_79 : Operation 457 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln62_16 = add i32 %mul_ln59_1, i32 %mul_ln59" [equalizer.cpp:62]   --->   Operation 457 'add' 'add_ln62_16' <Predicate = (state_2 == 4096)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_79 : Operation 458 [1/1] (2.55ns)   --->   "%add_ln62_15 = add i32 %accumulate, i32 %mul_ln62" [equalizer.cpp:62]   --->   Operation 458 'add' 'add_ln62_15' <Predicate = (state_2 == 4096)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_79 : Operation 459 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln62_17 = add i32 %add_ln62_15, i32 %add_ln62_16" [equalizer.cpp:62]   --->   Operation 459 'add' 'add_ln62_17' <Predicate = (state_2 == 4096)> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 80 <SV = 79> <Delay = 4.37>
ST_80 : Operation 460 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln62_21 = add i32 %add_ln62_17, i32 %add_ln62_20" [equalizer.cpp:62]   --->   Operation 460 'add' 'add_ln62_21' <Predicate = (state_2 == 4096)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_80 : Operation 461 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln62_30 = add i32 %add_ln62_29, i32 %add_ln62_21" [equalizer.cpp:62]   --->   Operation 461 'add' 'add_ln62_30' <Predicate = (state_2 == 4096)> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 81 <SV = 80> <Delay = 4.37>
ST_81 : Operation 462 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln62_14 = add i32 %add_ln62_13, i32 %add_ln62_6" [equalizer.cpp:62]   --->   Operation 462 'add' 'add_ln62_14' <Predicate = (state_2 == 4096)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_81 : Operation 463 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp_data_V_33 = add i32 %add_ln62_30, i32 %add_ln62_14" [equalizer.cpp:62]   --->   Operation 463 'add' 'tmp_data_V_33' <Predicate = (state_2 == 4096)> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_81 : Operation 464 [1/1] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %output_r_V_data_V, i4 %output_r_V_keep_V, i4 %output_r_V_strb_V, i1 %output_r_V_user_V, i1 %output_r_V_last_V, i1 %output_r_V_id_V, i1 %output_r_V_dest_V, i32 %tmp_data_V_33, i4 %tmp_keep_V, i4 %tmp_strb_V, i1 %tmp_user_V, i1 0, i1 %tmp_id_V, i1 %tmp_dest_V"   --->   Operation 464 'write' 'write_ln304' <Predicate = (state_2 == 4096 & !tmp_last_V)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_81 : Operation 465 [1/1] (0.00ns)   --->   "%store_ln84 = store i32 %tmp_data_V_33, i32 %tmp_out_data_V" [equalizer.cpp:84]   --->   Operation 465 'store' 'store_ln84' <Predicate = (state_2 == 4096 & !tmp_last_V)> <Delay = 0.00>
ST_81 : Operation 466 [1/1] (0.00ns)   --->   "%store_ln73 = store i32 %tmp_data_V_33, i32 %tmp_out_data_V" [equalizer.cpp:73]   --->   Operation 466 'store' 'store_ln73' <Predicate = (state_2 == 4096 & tmp_last_V)> <Delay = 0.00>

State 82 <SV = 69> <Delay = 1.70>
ST_82 : Operation 467 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tmp_out_dest_V_out, i1 %tmp_out_dest_V_1"   --->   Operation 467 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_82 : Operation 468 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tmp_out_id_V_out, i1 %tmp_out_id_V_1"   --->   Operation 468 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_82 : Operation 469 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tmp_out_user_V_out, i1 %tmp_out_user_V_1"   --->   Operation 469 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_82 : Operation 470 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i4P0A, i4 %tmp_out_strb_V_out, i4 %tmp_out_strb_V_1"   --->   Operation 470 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_82 : Operation 471 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i4P0A, i4 %tmp_out_keep_V_out, i4 %tmp_out_keep_V_1"   --->   Operation 471 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_82 : Operation 472 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %tmp_out_data_V_out, i32 %tmp_out_data_V_1"   --->   Operation 472 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_82 : Operation 473 [1/1] (1.70ns)   --->   "%br_ln0 = br void %UnifiedReturnBlock"   --->   Operation 473 'br' 'br_ln0' <Predicate = true> <Delay = 1.70>

State 83 <SV = 69> <Delay = 1.70>
ST_83 : Operation 474 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tmp_out_dest_V_out, i1 %tmp_out_dest_V_1"   --->   Operation 474 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_83 : Operation 475 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tmp_out_id_V_out, i1 %tmp_out_id_V_1"   --->   Operation 475 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_83 : Operation 476 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tmp_out_user_V_out, i1 %tmp_out_user_V_1"   --->   Operation 476 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_83 : Operation 477 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i4P0A, i4 %tmp_out_strb_V_out, i4 %tmp_out_strb_V_1"   --->   Operation 477 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_83 : Operation 478 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i4P0A, i4 %tmp_out_keep_V_out, i4 %tmp_out_keep_V_1"   --->   Operation 478 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_83 : Operation 479 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %tmp_out_data_V_out, i32 %tmp_out_data_V_1"   --->   Operation 479 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_83 : Operation 480 [1/1] (1.70ns)   --->   "%br_ln0 = br void %UnifiedReturnBlock"   --->   Operation 480 'br' 'br_ln0' <Predicate = true> <Delay = 1.70>

State 84 <SV = 69> <Delay = 0.00>
ST_84 : Operation 481 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tmp_out_dest_V_out, i1 %tmp_out_dest_V_1"   --->   Operation 481 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_84 : Operation 482 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tmp_out_id_V_out, i1 %tmp_out_id_V_1"   --->   Operation 482 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_84 : Operation 483 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tmp_out_user_V_out, i1 %tmp_out_user_V_1"   --->   Operation 483 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_84 : Operation 484 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i4P0A, i4 %tmp_out_strb_V_out, i4 %tmp_out_strb_V_1"   --->   Operation 484 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_84 : Operation 485 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i4P0A, i4 %tmp_out_keep_V_out, i4 %tmp_out_keep_V_1"   --->   Operation 485 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_84 : Operation 486 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %tmp_out_data_V_out, i32 %tmp_out_data_V_1"   --->   Operation 486 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>

State 85 <SV = 70> <Delay = 0.00>

State 86 <SV = 71> <Delay = 0.00>

State 87 <SV = 72> <Delay = 0.00>

State 88 <SV = 73> <Delay = 0.00>

State 89 <SV = 74> <Delay = 0.00>

State 90 <SV = 75> <Delay = 0.00>

State 91 <SV = 76> <Delay = 0.00>

State 92 <SV = 77> <Delay = 0.00>

State 93 <SV = 78> <Delay = 0.00>

State 94 <SV = 79> <Delay = 0.00>

State 95 <SV = 80> <Delay = 1.70>
ST_95 : Operation 487 [1/1] (0.00ns)   --->   "%tmp_out_data_V_load = load i32 %tmp_out_data_V"   --->   Operation 487 'load' 'tmp_out_data_V_load' <Predicate = true> <Delay = 0.00>
ST_95 : Operation 488 [1/1] (0.00ns)   --->   "%tmp_out_keep_V_load = load i4 %tmp_out_keep_V"   --->   Operation 488 'load' 'tmp_out_keep_V_load' <Predicate = true> <Delay = 0.00>
ST_95 : Operation 489 [1/1] (0.00ns)   --->   "%tmp_out_strb_V_load = load i4 %tmp_out_strb_V"   --->   Operation 489 'load' 'tmp_out_strb_V_load' <Predicate = true> <Delay = 0.00>
ST_95 : Operation 490 [1/1] (0.00ns)   --->   "%tmp_out_user_V_load = load i1 %tmp_out_user_V"   --->   Operation 490 'load' 'tmp_out_user_V_load' <Predicate = true> <Delay = 0.00>
ST_95 : Operation 491 [1/1] (0.00ns)   --->   "%tmp_out_id_V_load = load i1 %tmp_out_id_V"   --->   Operation 491 'load' 'tmp_out_id_V_load' <Predicate = true> <Delay = 0.00>
ST_95 : Operation 492 [1/1] (0.00ns)   --->   "%tmp_out_dest_V_load = load i1 %tmp_out_dest_V"   --->   Operation 492 'load' 'tmp_out_dest_V_load' <Predicate = true> <Delay = 0.00>
ST_95 : Operation 493 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tmp_out_dest_V_1_out, i1 %tmp_out_dest_V_load"   --->   Operation 493 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_95 : Operation 494 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tmp_out_id_V_1_out, i1 %tmp_out_id_V_load"   --->   Operation 494 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_95 : Operation 495 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %tmp_out_user_V_1_out, i1 %tmp_out_user_V_load"   --->   Operation 495 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_95 : Operation 496 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i4P0A, i4 %tmp_out_strb_V_1_out, i4 %tmp_out_strb_V_load"   --->   Operation 496 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_95 : Operation 497 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i4P0A, i4 %tmp_out_keep_V_1_out, i4 %tmp_out_keep_V_load"   --->   Operation 497 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_95 : Operation 498 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %tmp_out_data_V_1_out, i32 %tmp_out_data_V_load"   --->   Operation 498 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_95 : Operation 499 [1/1] (1.70ns)   --->   "%br_ln0 = br void %UnifiedReturnBlock"   --->   Operation 499 'br' 'br_ln0' <Predicate = true> <Delay = 1.70>

State 96 <SV = 81> <Delay = 0.00>
ST_96 : Operation 500 [1/1] (0.00ns)   --->   "%UnifiedRetVal = phi i2 0, void %sw.bb.while.end_crit_edge.exitStub, i2 1, void %for.inc.while.end_crit_edge.exitStub, i2 2, void %sw.epilog.while.end_crit_edge.exitStub"   --->   Operation 500 'phi' 'UnifiedRetVal' <Predicate = true> <Delay = 0.00>
ST_96 : Operation 501 [1/1] (0.00ns)   --->   "%ret_ln0 = ret i2 %UnifiedRetVal"   --->   Operation 501 'ret' 'ret_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	'alloca' operation ('state') [68]  (0 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'state' [76]  (1.59 ns)

 <State 2>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('tmp.last.V') with incoming values : ('tmp.last.V') [406]  (1.59 ns)

 <State 3>: 1.83ns
The critical path consists of the following:
	'phi' operation ('tmp.last.V') with incoming values : ('tmp.last.V') [406]  (0 ns)
	multiplexor before 'phi' operation ('state') with incoming values : ('state') ('select_ln17_1', equalizer.cpp:17) ('select_ln17', equalizer.cpp:17) [410]  (1.83 ns)

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 0ns
The critical path consists of the following:

 <State 6>: 0ns
The critical path consists of the following:

 <State 7>: 0ns
The critical path consists of the following:

 <State 8>: 0ns
The critical path consists of the following:

 <State 9>: 0ns
The critical path consists of the following:

 <State 10>: 0ns
The critical path consists of the following:

 <State 11>: 0ns
The critical path consists of the following:

 <State 12>: 0ns
The critical path consists of the following:

 <State 13>: 0ns
The critical path consists of the following:

 <State 14>: 0ns
The critical path consists of the following:

 <State 15>: 0ns
The critical path consists of the following:

 <State 16>: 0ns
The critical path consists of the following:

 <State 17>: 0ns
The critical path consists of the following:

 <State 18>: 0ns
The critical path consists of the following:

 <State 19>: 0ns
The critical path consists of the following:

 <State 20>: 0ns
The critical path consists of the following:

 <State 21>: 0ns
The critical path consists of the following:

 <State 22>: 0ns
The critical path consists of the following:

 <State 23>: 0ns
The critical path consists of the following:

 <State 24>: 0ns
The critical path consists of the following:

 <State 25>: 0ns
The critical path consists of the following:

 <State 26>: 0ns
The critical path consists of the following:

 <State 27>: 0ns
The critical path consists of the following:

 <State 28>: 0ns
The critical path consists of the following:

 <State 29>: 0ns
The critical path consists of the following:

 <State 30>: 0ns
The critical path consists of the following:

 <State 31>: 0ns
The critical path consists of the following:

 <State 32>: 7.3ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_addr_1') [88]  (0 ns)
	bus request operation ('empty_49') on port 'gmem' [345]  (7.3 ns)

 <State 33>: 7.3ns
The critical path consists of the following:
	axis read operation ('empty_48') on port 'input_r_V_data_V' [343]  (0 ns)
	bus write operation ('write_ln0') on port 'gmem' [346]  (7.3 ns)

 <State 34>: 7.3ns
The critical path consists of the following:
	bus write operation ('write_ln0') on port 'gmem' [347]  (7.3 ns)

 <State 35>: 7.3ns
The critical path consists of the following:
	bus write operation ('write_ln0') on port 'gmem' [348]  (7.3 ns)

 <State 36>: 7.3ns
The critical path consists of the following:
	bus write operation ('write_ln0') on port 'gmem' [349]  (7.3 ns)

 <State 37>: 7.3ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_addr', equalizer.cpp:59) [87]  (0 ns)
	bus request operation ('empty_52', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [102]  (7.3 ns)

 <State 38>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty_52', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [102]  (7.3 ns)

 <State 39>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty_52', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [102]  (7.3 ns)

 <State 40>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty_52', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [102]  (7.3 ns)

 <State 41>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty_52', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [102]  (7.3 ns)

 <State 42>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty_52', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [102]  (7.3 ns)

 <State 43>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty_52', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [102]  (7.3 ns)

 <State 44>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [103]  (7.3 ns)

 <State 45>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_1', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [104]  (7.3 ns)

 <State 46>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_2', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [105]  (7.3 ns)

 <State 47>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_3', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [106]  (7.3 ns)

 <State 48>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_4', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [107]  (7.3 ns)

 <State 49>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_5', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [108]  (7.3 ns)

 <State 50>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_6', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [109]  (7.3 ns)

 <State 51>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_7', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [110]  (7.3 ns)

 <State 52>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_8', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [111]  (7.3 ns)

 <State 53>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_9', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [112]  (7.3 ns)

 <State 54>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_10', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [113]  (7.3 ns)

 <State 55>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_11', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [114]  (7.3 ns)

 <State 56>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_12', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [115]  (7.3 ns)

 <State 57>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_13', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [116]  (7.3 ns)

 <State 58>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_14', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [117]  (7.3 ns)

 <State 59>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_15', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [118]  (7.3 ns)

 <State 60>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_16', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [119]  (7.3 ns)

 <State 61>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_17', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [120]  (7.3 ns)

 <State 62>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_18', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [121]  (7.3 ns)

 <State 63>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_19', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [122]  (7.3 ns)

 <State 64>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_20', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [123]  (7.3 ns)

 <State 65>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_21', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [124]  (7.3 ns)

 <State 66>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_22', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [125]  (7.3 ns)

 <State 67>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_23', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [126]  (7.3 ns)

 <State 68>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_24', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [127]  (7.3 ns)

 <State 69>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_25', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [128]  (7.3 ns)

 <State 70>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_26', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [129]  (7.3 ns)

 <State 71>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_27', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [130]  (7.3 ns)

 <State 72>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_28', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [131]  (7.3 ns)

 <State 73>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_29', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [132]  (7.3 ns)

 <State 74>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_30', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [133]  (7.3 ns)

 <State 75>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_31', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [134]  (7.3 ns)

 <State 76>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read_32', equalizer.cpp:59) on port 'gmem' (equalizer.cpp:59) [135]  (7.3 ns)

 <State 77>: 6.91ns
The critical path consists of the following:
	'mul' operation ('accumulate', equalizer.cpp:59) [136]  (6.91 ns)

 <State 78>: 6.91ns
The critical path consists of the following:
	'mul' operation ('accumulate', equalizer.cpp:59) [136]  (6.91 ns)

 <State 79>: 6.92ns
The critical path consists of the following:
	'add' operation ('add_ln62_15', equalizer.cpp:62) [250]  (2.55 ns)
	'add' operation ('add_ln62_17', equalizer.cpp:62) [255]  (4.37 ns)

 <State 80>: 4.37ns
The critical path consists of the following:
	'add' operation ('add_ln62_21', equalizer.cpp:62) [256]  (0 ns)
	'add' operation ('add_ln62_30', equalizer.cpp:62) [261]  (4.37 ns)

 <State 81>: 4.37ns
The critical path consists of the following:
	'add' operation ('add_ln62_14', equalizer.cpp:62) [245]  (0 ns)
	'add' operation ('accumulate', equalizer.cpp:62) [262]  (4.37 ns)
	axis write operation ('write_ln304') on port 'output_r_V_data_V' [266]  (0 ns)

 <State 82>: 1.71ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('UnifiedRetVal') [434]  (1.71 ns)

 <State 83>: 1.71ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('UnifiedRetVal') [434]  (1.71 ns)

 <State 84>: 0ns
The critical path consists of the following:

 <State 85>: 0ns
The critical path consists of the following:

 <State 86>: 0ns
The critical path consists of the following:

 <State 87>: 0ns
The critical path consists of the following:

 <State 88>: 0ns
The critical path consists of the following:

 <State 89>: 0ns
The critical path consists of the following:

 <State 90>: 0ns
The critical path consists of the following:

 <State 91>: 0ns
The critical path consists of the following:

 <State 92>: 0ns
The critical path consists of the following:

 <State 93>: 0ns
The critical path consists of the following:

 <State 94>: 0ns
The critical path consists of the following:

 <State 95>: 1.71ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('UnifiedRetVal') [434]  (1.71 ns)

 <State 96>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
