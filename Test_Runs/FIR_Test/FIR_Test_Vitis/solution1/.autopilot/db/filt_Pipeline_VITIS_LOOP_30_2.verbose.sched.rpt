

================================================================
== Vitis HLS Report for 'filt_Pipeline_VITIS_LOOP_30_2'
================================================================
* Date:           Wed Apr 10 21:16:09 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        FIR_Test_Vitis
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_30_2  |        ?|        ?|         9|          1|          1|     ?|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 9


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 1, D = 9, States = { 1 2 3 4 5 6 7 8 9 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.72>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%tmp_data_1 = alloca i32 1" [filt.cpp:24]   --->   Operation 12 'alloca' 'tmp_data_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [filt.cpp:10]   --->   Operation 13 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%c_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %c"   --->   Operation 14 'read' 'c_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%read_coefs_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %read_coefs"   --->   Operation 15 'read' 'read_coefs_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_data_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %tmp_data"   --->   Operation 16 'read' 'tmp_data_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%sext_ln30_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %sext_ln30"   --->   Operation 17 'read' 'sext_ln30_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%sext_ln30_cast = sext i32 %sext_ln30_read"   --->   Operation 18 'sext' 'sext_ln30_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specaxissidechannel_ln0 = specaxissidechannel void @_ssdm_op_SpecAXISSideChannel, i32 %x_V_data_V, i4 %x_V_keep_V, i4 %x_V_strb_V, i1 %x_V_user_V, i1 %x_V_last_V, i1 %x_V_id_V, i1 %x_V_dest_V, void @empty_11"   --->   Operation 19 'specaxissidechannel' 'specaxissidechannel_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %x_V_dest_V, i1 %x_V_id_V, i1 %x_V_last_V, i1 %x_V_user_V, i4 %x_V_strb_V, i4 %x_V_keep_V, i32 %x_V_data_V, void @empty_3, i32 0, i32 0, void @empty_4, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 20 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 99, void @empty_1, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 21 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (1.58ns)   --->   "%store_ln10 = store i64 %sext_ln30_cast, i64 %i" [filt.cpp:10]   --->   Operation 22 'store' 'store_ln10' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 23 [1/1] (1.58ns)   --->   "%store_ln24 = store i32 %tmp_data_read, i32 %tmp_data_1" [filt.cpp:24]   --->   Operation 23 'store' 'store_ln24' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%br_ln0 = br void %while.cond1"   --->   Operation 24 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%tmp_data_2 = load i32 %tmp_data_1" [filt.cpp:40]   --->   Operation 25 'load' 'tmp_data_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 26 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (1.58ns)   --->   "%br_ln30 = br i1 %read_coefs_read, void %while.end.exitStub, void %while.body2" [filt.cpp:30]   --->   Operation 27 'br' 'br_ln30' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%specpipeline_ln32 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [filt.cpp:32]   --->   Operation 28 'specpipeline' 'specpipeline_ln32' <Predicate = (read_coefs_read)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specloopname_ln30 = specloopname void @_ssdm_op_SpecLoopName, void @empty_14" [filt.cpp:30]   --->   Operation 29 'specloopname' 'specloopname_ln30' <Predicate = (read_coefs_read)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (2.55ns)   --->   "%icmp_ln32 = icmp_eq  i32 %tmp_data_2, i32 43962" [filt.cpp:32]   --->   Operation 30 'icmp' 'icmp_ln32' <Predicate = (read_coefs_read)> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (1.58ns)   --->   "%br_ln32 = br i1 %icmp_ln32, void %if.end, void %while.end.exitStub" [filt.cpp:32]   --->   Operation 31 'br' 'br_ln32' <Predicate = (read_coefs_read)> <Delay = 1.58>
ST_1 : Operation 32 [1/1] (1.00ns)   --->   "%empty = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %x_V_data_V, i4 %x_V_keep_V, i4 %x_V_strb_V, i1 %x_V_user_V, i1 %x_V_last_V, i1 %x_V_id_V, i1 %x_V_dest_V" [filt.cpp:42]   --->   Operation 32 'read' 'empty' <Predicate = (read_coefs_read & !icmp_ln32)> <Delay = 1.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_data_3 = extractvalue i44 %empty" [filt.cpp:42]   --->   Operation 33 'extractvalue' 'tmp_data_3' <Predicate = (read_coefs_read & !icmp_ln32)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (1.58ns)   --->   "%store_ln24 = store i32 %tmp_data_3, i32 %tmp_data_1" [filt.cpp:24]   --->   Operation 34 'store' 'store_ln24' <Predicate = (read_coefs_read & !icmp_ln32)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 5.10>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%i_load = load i64 %i" [filt.cpp:40]   --->   Operation 35 'load' 'i_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node add_ln40)   --->   "%shl_ln40 = shl i64 %i_load, i64 2" [filt.cpp:40]   --->   Operation 36 'shl' 'shl_ln40' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (3.52ns) (out node of the LUT)   --->   "%add_ln40 = add i64 %shl_ln40, i64 %c_read" [filt.cpp:40]   --->   Operation 37 'add' 'add_ln40' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln40, i32 2, i32 63" [filt.cpp:40]   --->   Operation 38 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%sext_ln40 = sext i62 %trunc_ln" [filt.cpp:40]   --->   Operation 39 'sext' 'sext_ln40' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln40" [filt.cpp:40]   --->   Operation 40 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (3.52ns)   --->   "%add_ln43 = add i64 %i_load, i64 1" [filt.cpp:43]   --->   Operation 41 'add' 'add_ln43' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (1.58ns)   --->   "%store_ln10 = store i64 %add_ln43, i64 %i" [filt.cpp:10]   --->   Operation 42 'store' 'store_ln10' <Predicate = true> <Delay = 1.58>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 43 [1/1] (7.30ns)   --->   "%gmem_addr_req = writereq i1 @_ssdm_op_WriteReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [filt.cpp:40]   --->   Operation 43 'writereq' 'gmem_addr_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 44 [1/1] (7.30ns)   --->   "%write_ln40 = write void @_ssdm_op_Write.m_axi.i32P1A, i32 %gmem_addr, i32 %tmp_data_2, i4 15" [filt.cpp:40]   --->   Operation 44 'write' 'write_ln40' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 45 [5/5] (7.30ns)   --->   "%gmem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [filt.cpp:40]   --->   Operation 45 'writeresp' 'gmem_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 46 [4/5] (7.30ns)   --->   "%gmem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [filt.cpp:40]   --->   Operation 46 'writeresp' 'gmem_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 47 [3/5] (7.30ns)   --->   "%gmem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [filt.cpp:40]   --->   Operation 47 'writeresp' 'gmem_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 48 [2/5] (7.30ns)   --->   "%gmem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [filt.cpp:40]   --->   Operation 48 'writeresp' 'gmem_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 51 [1/1] (0.00ns)   --->   "%merge = phi i1 1, void %while.cond1, i1 0, void %while.body2"   --->   Operation 51 'phi' 'merge' <Predicate = (icmp_ln32) | (!read_coefs_read)> <Delay = 0.00>
ST_8 : Operation 52 [1/1] (0.00ns)   --->   "%ret_ln0 = ret i1 %merge"   --->   Operation 52 'ret' 'ret_ln0' <Predicate = (icmp_ln32) | (!read_coefs_read)> <Delay = 0.00>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 49 [1/5] (7.30ns)   --->   "%gmem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [filt.cpp:40]   --->   Operation 49 'writeresp' 'gmem_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 50 [1/1] (0.00ns)   --->   "%br_ln30 = br void %while.cond1" [filt.cpp:30]   --->   Operation 50 'br' 'br_ln30' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 6.728ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln24', filt.cpp:24) of variable 'tmp_data_read' on local variable 'tmp.data', filt.cpp:24 [24]  (1.588 ns)
	'load' operation 32 bit ('tmp.data', filt.cpp:40) on local variable 'tmp.data', filt.cpp:24 [27]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln32', filt.cpp:32) [33]  (2.552 ns)
	axis read operation ('empty', filt.cpp:42) on port 'x_V_data_V' (filt.cpp:42) [45]  (1.000 ns)
	'store' operation 0 bit ('store_ln24', filt.cpp:24) of variable 'tmp.data', filt.cpp:42 on local variable 'tmp.data', filt.cpp:24 [49]  (1.588 ns)

 <State 2>: 5.108ns
The critical path consists of the following:
	'load' operation 64 bit ('i_load', filt.cpp:40) on local variable 'i', filt.cpp:10 [36]  (0.000 ns)
	'add' operation 64 bit ('add_ln43', filt.cpp:43) [47]  (3.520 ns)
	'store' operation 0 bit ('store_ln10', filt.cpp:10) of variable 'add_ln43', filt.cpp:43 on local variable 'i', filt.cpp:10 [48]  (1.588 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_addr_req', filt.cpp:40) on port 'gmem' (filt.cpp:40) [42]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus write operation ('write_ln40', filt.cpp:40) on port 'gmem' (filt.cpp:40) [43]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus response operation ('gmem_addr_resp', filt.cpp:40) on port 'gmem' (filt.cpp:40) [44]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus response operation ('gmem_addr_resp', filt.cpp:40) on port 'gmem' (filt.cpp:40) [44]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus response operation ('gmem_addr_resp', filt.cpp:40) on port 'gmem' (filt.cpp:40) [44]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus response operation ('gmem_addr_resp', filt.cpp:40) on port 'gmem' (filt.cpp:40) [44]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus response operation ('gmem_addr_resp', filt.cpp:40) on port 'gmem' (filt.cpp:40) [44]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
