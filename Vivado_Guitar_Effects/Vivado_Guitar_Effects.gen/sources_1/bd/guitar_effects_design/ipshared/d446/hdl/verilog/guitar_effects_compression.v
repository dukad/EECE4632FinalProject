// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module guitar_effects_compression (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r,
        min_threshold,
        max_threshold,
        zero_threshold,
        values_buffer_address0,
        values_buffer_ce0,
        values_buffer_we0,
        values_buffer_d0,
        values_buffer_q0,
        compression_buffer_index_read,
        current_sample,
        ap_return_0,
        ap_return_1,
        grp_fu_607_p_din0,
        grp_fu_607_p_din1,
        grp_fu_607_p_dout0,
        grp_fu_607_p_ce,
        grp_fu_611_p_din0,
        grp_fu_611_p_dout0,
        grp_fu_611_p_ce
);

parameter    ap_ST_fsm_state1 = 115'd1;
parameter    ap_ST_fsm_state2 = 115'd2;
parameter    ap_ST_fsm_state3 = 115'd4;
parameter    ap_ST_fsm_state4 = 115'd8;
parameter    ap_ST_fsm_state5 = 115'd16;
parameter    ap_ST_fsm_state6 = 115'd32;
parameter    ap_ST_fsm_state7 = 115'd64;
parameter    ap_ST_fsm_state8 = 115'd128;
parameter    ap_ST_fsm_state9 = 115'd256;
parameter    ap_ST_fsm_state10 = 115'd512;
parameter    ap_ST_fsm_state11 = 115'd1024;
parameter    ap_ST_fsm_state12 = 115'd2048;
parameter    ap_ST_fsm_state13 = 115'd4096;
parameter    ap_ST_fsm_state14 = 115'd8192;
parameter    ap_ST_fsm_state15 = 115'd16384;
parameter    ap_ST_fsm_state16 = 115'd32768;
parameter    ap_ST_fsm_state17 = 115'd65536;
parameter    ap_ST_fsm_state18 = 115'd131072;
parameter    ap_ST_fsm_state19 = 115'd262144;
parameter    ap_ST_fsm_state20 = 115'd524288;
parameter    ap_ST_fsm_state21 = 115'd1048576;
parameter    ap_ST_fsm_state22 = 115'd2097152;
parameter    ap_ST_fsm_state23 = 115'd4194304;
parameter    ap_ST_fsm_state24 = 115'd8388608;
parameter    ap_ST_fsm_state25 = 115'd16777216;
parameter    ap_ST_fsm_state26 = 115'd33554432;
parameter    ap_ST_fsm_state27 = 115'd67108864;
parameter    ap_ST_fsm_state28 = 115'd134217728;
parameter    ap_ST_fsm_state29 = 115'd268435456;
parameter    ap_ST_fsm_state30 = 115'd536870912;
parameter    ap_ST_fsm_state31 = 115'd1073741824;
parameter    ap_ST_fsm_state32 = 115'd2147483648;
parameter    ap_ST_fsm_state33 = 115'd4294967296;
parameter    ap_ST_fsm_state34 = 115'd8589934592;
parameter    ap_ST_fsm_state35 = 115'd17179869184;
parameter    ap_ST_fsm_state36 = 115'd34359738368;
parameter    ap_ST_fsm_state37 = 115'd68719476736;
parameter    ap_ST_fsm_state38 = 115'd137438953472;
parameter    ap_ST_fsm_state39 = 115'd274877906944;
parameter    ap_ST_fsm_state40 = 115'd549755813888;
parameter    ap_ST_fsm_state41 = 115'd1099511627776;
parameter    ap_ST_fsm_state42 = 115'd2199023255552;
parameter    ap_ST_fsm_state43 = 115'd4398046511104;
parameter    ap_ST_fsm_state44 = 115'd8796093022208;
parameter    ap_ST_fsm_state45 = 115'd17592186044416;
parameter    ap_ST_fsm_state46 = 115'd35184372088832;
parameter    ap_ST_fsm_state47 = 115'd70368744177664;
parameter    ap_ST_fsm_state48 = 115'd140737488355328;
parameter    ap_ST_fsm_state49 = 115'd281474976710656;
parameter    ap_ST_fsm_state50 = 115'd562949953421312;
parameter    ap_ST_fsm_state51 = 115'd1125899906842624;
parameter    ap_ST_fsm_state52 = 115'd2251799813685248;
parameter    ap_ST_fsm_state53 = 115'd4503599627370496;
parameter    ap_ST_fsm_state54 = 115'd9007199254740992;
parameter    ap_ST_fsm_state55 = 115'd18014398509481984;
parameter    ap_ST_fsm_state56 = 115'd36028797018963968;
parameter    ap_ST_fsm_state57 = 115'd72057594037927936;
parameter    ap_ST_fsm_state58 = 115'd144115188075855872;
parameter    ap_ST_fsm_state59 = 115'd288230376151711744;
parameter    ap_ST_fsm_state60 = 115'd576460752303423488;
parameter    ap_ST_fsm_state61 = 115'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 115'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 115'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 115'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 115'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 115'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 115'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 115'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 115'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 115'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 115'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 115'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 115'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 115'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 115'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 115'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 115'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 115'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 115'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 115'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 115'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 115'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 115'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 115'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 115'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 115'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 115'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 115'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 115'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 115'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 115'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 115'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 115'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 115'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 115'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 115'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 115'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 115'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 115'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 115'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 115'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 115'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 115'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 115'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 115'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 115'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 115'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 115'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 115'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 115'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 115'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 115'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 115'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 115'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 115'd20769187434139310514121985316880384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] input_r;
input  [31:0] min_threshold;
input  [31:0] max_threshold;
input  [31:0] zero_threshold;
output  [8:0] values_buffer_address0;
output   values_buffer_ce0;
output   values_buffer_we0;
output  [15:0] values_buffer_d0;
input  [15:0] values_buffer_q0;
input  [15:0] compression_buffer_index_read;
input  [31:0] current_sample;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [31:0] grp_fu_607_p_din0;
output  [31:0] grp_fu_607_p_din1;
input  [31:0] grp_fu_607_p_dout0;
output   grp_fu_607_p_ce;
output  [31:0] grp_fu_611_p_din0;
input  [31:0] grp_fu_611_p_dout0;
output   grp_fu_611_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] values_buffer_address0;
reg values_buffer_ce0;
reg values_buffer_we0;
reg[15:0] ap_return_0;
reg[15:0] ap_return_1;

(* fsm_encoding = "none" *) reg   [114:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_203;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state109;
reg   [31:0] reg_208;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state113;
wire    ap_CS_fsm_state21;
wire   [15:0] grp_fu_222_p2;
reg   [15:0] srem_ln171_reg_1242;
wire   [10:0] trunc_ln174_fu_255_p1;
reg   [10:0] trunc_ln174_reg_1247;
wire   [0:0] icmp_ln181_fu_259_p2;
reg   [0:0] icmp_ln181_reg_1252;
wire    ap_CS_fsm_state23;
wire   [15:0] trunc_ln171_fu_265_p1;
reg   [15:0] trunc_ln171_reg_1257;
wire    ap_CS_fsm_state24;
wire  signed [31:0] sext_ln189_fu_282_p1;
wire   [0:0] icmp_ln189_fu_286_p2;
reg   [0:0] icmp_ln189_reg_1268;
wire   [0:0] and_ln194_fu_304_p2;
reg   [0:0] and_ln194_reg_1272;
wire  signed [31:0] sext_ln196_fu_334_p1;
wire    ap_CS_fsm_state58;
wire  signed [31:0] grp_fu_316_p2;
reg  signed [31:0] r_V_19_reg_1291;
wire    ap_CS_fsm_state59;
reg   [0:0] p_Result_37_reg_1297;
wire   [0:0] icmp_ln1136_1_fu_349_p2;
reg   [0:0] icmp_ln1136_1_reg_1303;
wire    ap_CS_fsm_state60;
wire   [32:0] tmp_V_7_fu_360_p3;
reg   [32:0] tmp_V_7_reg_1308;
wire   [31:0] sub_ln1145_1_fu_401_p2;
reg   [31:0] sub_ln1145_1_reg_1316;
wire   [5:0] trunc_ln1148_1_fu_407_p1;
reg   [5:0] trunc_ln1148_1_reg_1323;
wire   [7:0] trunc_ln1144_1_fu_411_p1;
reg   [7:0] trunc_ln1144_1_reg_1328;
wire   [1:0] or_ln1150_1_fu_501_p3;
reg   [1:0] or_ln1150_1_reg_1333;
wire    ap_CS_fsm_state61;
wire   [0:0] icmp_ln1155_1_fu_509_p2;
reg   [0:0] icmp_ln1155_1_reg_1338;
reg   [32:0] m_1_reg_1343;
wire    ap_CS_fsm_state62;
reg   [0:0] p_Result_27_reg_1348;
wire   [31:0] compression_factor_1_fu_629_p3;
reg   [31:0] compression_factor_1_reg_1353;
reg   [0:0] p_Result_40_reg_1358;
wire    ap_CS_fsm_state68;
wire   [22:0] p_Result_41_fu_658_p1;
reg   [22:0] p_Result_41_reg_1363;
wire   [0:0] isNeg_1_fu_672_p3;
reg   [0:0] isNeg_1_reg_1368;
wire   [8:0] ush_1_fu_690_p3;
reg   [8:0] ush_1_reg_1373;
wire   [15:0] val_1_fu_752_p3;
reg   [15:0] val_1_reg_1378;
wire    ap_CS_fsm_state69;
wire  signed [31:0] sext_ln192_fu_794_p1;
wire    ap_CS_fsm_state104;
wire  signed [31:0] grp_fu_328_p2;
reg  signed [31:0] r_V_18_reg_1389;
wire    ap_CS_fsm_state105;
reg   [0:0] p_Result_32_reg_1395;
wire   [0:0] icmp_ln1136_fu_809_p2;
reg   [0:0] icmp_ln1136_reg_1401;
wire    ap_CS_fsm_state106;
wire   [32:0] tmp_V_6_fu_820_p3;
reg   [32:0] tmp_V_6_reg_1406;
wire   [31:0] sub_ln1145_fu_861_p2;
reg   [31:0] sub_ln1145_reg_1414;
wire   [5:0] trunc_ln1148_fu_867_p1;
reg   [5:0] trunc_ln1148_reg_1421;
wire   [7:0] trunc_ln1144_fu_871_p1;
reg   [7:0] trunc_ln1144_reg_1426;
wire   [1:0] or_ln_fu_961_p3;
reg   [1:0] or_ln_reg_1431;
wire    ap_CS_fsm_state107;
wire   [0:0] icmp_ln1155_fu_969_p2;
reg   [0:0] icmp_ln1155_reg_1436;
reg   [32:0] m_s_reg_1441;
wire    ap_CS_fsm_state108;
reg   [0:0] p_Result_17_reg_1446;
wire   [31:0] compression_factor_fu_1089_p3;
reg   [31:0] compression_factor_reg_1451;
reg   [0:0] p_Result_35_reg_1456;
wire    ap_CS_fsm_state114;
wire   [22:0] p_Result_36_fu_1118_p1;
reg   [22:0] p_Result_36_reg_1461;
wire   [0:0] isNeg_fu_1132_p3;
reg   [0:0] isNeg_reg_1466;
wire   [8:0] ush_fu_1150_p3;
reg   [8:0] ush_reg_1471;
wire   [15:0] val_fu_1212_p3;
reg   [15:0] val_reg_1476;
wire    ap_CS_fsm_state115;
wire    grp_compression_Pipeline_LPF_Loop_fu_186_ap_start;
wire    grp_compression_Pipeline_LPF_Loop_fu_186_ap_done;
wire    grp_compression_Pipeline_LPF_Loop_fu_186_ap_idle;
wire    grp_compression_Pipeline_LPF_Loop_fu_186_ap_ready;
wire   [8:0] grp_compression_Pipeline_LPF_Loop_fu_186_values_buffer_address0;
wire    grp_compression_Pipeline_LPF_Loop_fu_186_values_buffer_ce0;
wire   [15:0] grp_compression_Pipeline_LPF_Loop_fu_186_p_out;
wire    grp_compression_Pipeline_LPF_Loop_fu_186_p_out_ap_vld;
wire   [15:0] result_V_fu_776_p3;
reg   [15:0] ap_phi_mux_output_1_phi_fu_178_p6;
reg   [15:0] output_1_reg_175;
wire    ap_CS_fsm_state70;
wire   [15:0] result_V_11_fu_764_p3;
reg    grp_compression_Pipeline_LPF_Loop_fu_186_ap_start_reg;
wire    ap_CS_fsm_state22;
wire   [63:0] zext_ln170_fu_251_p1;
reg   [31:0] grp_fu_196_p1;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state110;
reg  signed [31:0] grp_fu_200_p0;
wire  signed [15:0] sext_ln171_fu_212_p0;
wire  signed [16:0] sext_ln171_fu_212_p1;
wire   [16:0] grp_fu_222_p0;
wire   [9:0] grp_fu_222_p1;
wire  signed [15:0] tmp_fu_228_p1;
wire  signed [15:0] abs_in_fu_236_p1;
wire   [0:0] tmp_fu_228_p3;
wire   [15:0] abs_in_fu_236_p2;
wire  signed [15:0] abs_in_1_fu_242_p2;
wire  signed [15:0] zext_ln170_fu_251_p0;
wire   [15:0] trunc_ln182_fu_271_p1;
wire   [15:0] select_ln181_fu_275_p3;
wire   [0:0] icmp_ln194_fu_292_p2;
wire   [0:0] icmp_ln194_1_fu_298_p2;
wire   [31:0] grp_fu_316_p0;
wire  signed [15:0] grp_fu_316_p1;
wire   [31:0] grp_fu_328_p0;
wire  signed [15:0] grp_fu_328_p1;
wire  signed [15:0] sext_ln196_fu_334_p0;
wire  signed [32:0] sext_ln1349_1_fu_346_p1;
wire   [32:0] tmp_V_4_fu_354_p2;
reg   [32:0] p_Result_23_fu_367_p4;
wire   [33:0] p_Result_38_fu_377_p3;
wire  signed [63:0] sext_ln1250_1_fu_385_p1;
reg   [63:0] tmp_1_fu_389_p3;
wire   [31:0] l_1_fu_397_p1;
wire   [31:0] lsb_index_1_fu_415_p2;
wire   [30:0] tmp_29_fu_420_p4;
wire   [5:0] sub_ln1148_1_fu_436_p2;
wire   [32:0] zext_ln1148_1_fu_441_p1;
wire   [32:0] lshr_ln1148_1_fu_445_p2;
wire   [32:0] p_Result_25_fu_451_p2;
wire   [0:0] icmp_ln1147_1_fu_430_p2;
wire   [0:0] icmp_ln1148_1_fu_456_p2;
wire   [0:0] tmp_30_fu_468_p3;
wire   [0:0] p_Result_26_fu_482_p3;
wire   [0:0] xor_ln1150_1_fu_476_p2;
wire   [0:0] and_ln1150_1_fu_489_p2;
wire   [0:0] a_1_fu_462_p2;
wire   [0:0] or_ln1150_fu_495_p2;
wire   [31:0] add_ln1155_1_fu_515_p2;
wire   [32:0] zext_ln1155_1_fu_520_p1;
wire   [31:0] sub_ln1156_1_fu_529_p2;
wire   [32:0] zext_ln1156_1_fu_534_p1;
wire   [32:0] lshr_ln1155_1_fu_524_p2;
wire   [32:0] shl_ln1156_1_fu_538_p2;
wire   [32:0] m_7_fu_543_p3;
wire   [33:0] zext_ln1152_2_fu_550_p1;
wire   [33:0] zext_ln1162_1_fu_554_p1;
wire   [33:0] m_8_fu_557_p2;
wire   [7:0] sub_ln1165_1_fu_591_p2;
wire   [7:0] select_ln1144_1_fu_584_p3;
wire   [7:0] add_ln1170_1_fu_596_p2;
wire   [63:0] zext_ln1152_3_fu_581_p1;
wire   [8:0] tmp_2_fu_602_p3;
wire   [63:0] p_Result_39_fu_609_p5;
wire   [31:0] LD_1_fu_621_p1;
wire   [31:0] bitcast_ln810_1_fu_625_p1;
wire   [31:0] data_V_1_fu_636_p1;
wire   [7:0] xs_exp_V_1_fu_648_p4;
wire   [8:0] zext_ln346_1_fu_662_p1;
wire   [8:0] add_ln346_1_fu_666_p2;
wire   [7:0] sub_ln1512_1_fu_680_p2;
wire  signed [8:0] sext_ln1512_1_fu_686_p1;
wire   [24:0] mantissa_1_fu_698_p4;
wire  signed [31:0] sext_ln1488_1_fu_711_p1;
wire   [62:0] zext_ln15_1_fu_707_p1;
wire   [62:0] zext_ln1488_1_fu_714_p1;
wire   [62:0] r_V_16_fu_718_p2;
wire   [0:0] tmp_35_fu_730_p3;
wire   [62:0] r_V_17_fu_724_p2;
wire   [15:0] zext_ln818_1_fu_738_p1;
wire   [15:0] tmp_4_fu_742_p4;
wire   [15:0] result_V_10_fu_759_p2;
wire   [15:0] result_V_6_fu_771_p2;
wire  signed [15:0] sext_ln192_fu_794_p0;
wire  signed [32:0] sext_ln1349_fu_806_p1;
wire   [32:0] tmp_V_fu_814_p2;
reg   [32:0] p_Result_s_fu_827_p4;
wire   [33:0] p_Result_33_fu_837_p3;
wire  signed [63:0] sext_ln1250_fu_845_p1;
reg   [63:0] tmp_s_fu_849_p3;
wire   [31:0] l_fu_857_p1;
wire   [31:0] lsb_index_fu_875_p2;
wire   [30:0] tmp_21_fu_880_p4;
wire   [5:0] sub_ln1148_fu_896_p2;
wire   [32:0] zext_ln1148_fu_901_p1;
wire   [32:0] lshr_ln1148_fu_905_p2;
wire   [32:0] p_Result_15_fu_911_p2;
wire   [0:0] icmp_ln1147_fu_890_p2;
wire   [0:0] icmp_ln1148_fu_916_p2;
wire   [0:0] tmp_22_fu_928_p3;
wire   [0:0] p_Result_16_fu_942_p3;
wire   [0:0] xor_ln1150_fu_936_p2;
wire   [0:0] and_ln1150_fu_949_p2;
wire   [0:0] a_fu_922_p2;
wire   [0:0] or_ln1150_2_fu_955_p2;
wire   [31:0] add_ln1155_fu_975_p2;
wire   [32:0] zext_ln1155_fu_980_p1;
wire   [31:0] sub_ln1156_fu_989_p2;
wire   [32:0] zext_ln1156_fu_994_p1;
wire   [32:0] lshr_ln1155_fu_984_p2;
wire   [32:0] shl_ln1156_fu_998_p2;
wire   [32:0] m_fu_1003_p3;
wire   [33:0] zext_ln1152_fu_1010_p1;
wire   [33:0] zext_ln1162_fu_1014_p1;
wire   [33:0] m_5_fu_1017_p2;
wire   [7:0] sub_ln1165_fu_1051_p2;
wire   [7:0] select_ln1144_fu_1044_p3;
wire   [7:0] add_ln1170_fu_1056_p2;
wire   [63:0] zext_ln1152_1_fu_1041_p1;
wire   [8:0] tmp_8_fu_1062_p3;
wire   [63:0] p_Result_34_fu_1069_p5;
wire   [31:0] LD_fu_1081_p1;
wire   [31:0] bitcast_ln810_fu_1085_p1;
wire   [31:0] data_V_fu_1096_p1;
wire   [7:0] xs_exp_V_fu_1108_p4;
wire   [8:0] zext_ln346_fu_1122_p1;
wire   [8:0] add_ln346_fu_1126_p2;
wire   [7:0] sub_ln1512_fu_1140_p2;
wire  signed [8:0] sext_ln1512_fu_1146_p1;
wire   [24:0] mantissa_fu_1158_p4;
wire  signed [31:0] sext_ln1488_fu_1171_p1;
wire   [62:0] zext_ln15_fu_1167_p1;
wire   [62:0] zext_ln1488_fu_1174_p1;
wire   [62:0] r_V_fu_1178_p2;
wire   [0:0] tmp_27_fu_1190_p3;
wire   [62:0] r_V_14_fu_1184_p2;
wire   [15:0] zext_ln818_fu_1198_p1;
wire   [15:0] tmp_3_fu_1202_p4;
reg    grp_fu_222_ap_start;
wire    grp_fu_222_ap_done;
reg    grp_fu_316_ap_start;
wire    grp_fu_316_ap_done;
reg    grp_fu_328_ap_start;
wire    grp_fu_328_ap_done;
reg   [15:0] ap_return_0_preg;
reg   [15:0] ap_return_1_preg;
reg   [114:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
wire    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
wire    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
wire    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
wire    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
wire    ap_ST_fsm_state109_blk;
wire    ap_ST_fsm_state110_blk;
wire    ap_ST_fsm_state111_blk;
wire    ap_ST_fsm_state112_blk;
wire    ap_ST_fsm_state113_blk;
wire    ap_ST_fsm_state114_blk;
wire    ap_ST_fsm_state115_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 115'd1;
#0 grp_compression_Pipeline_LPF_Loop_fu_186_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 16'd0;
#0 ap_return_1_preg = 16'd0;
end

guitar_effects_compression_Pipeline_LPF_Loop grp_compression_Pipeline_LPF_Loop_fu_186(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_compression_Pipeline_LPF_Loop_fu_186_ap_start),
    .ap_done(grp_compression_Pipeline_LPF_Loop_fu_186_ap_done),
    .ap_idle(grp_compression_Pipeline_LPF_Loop_fu_186_ap_idle),
    .ap_ready(grp_compression_Pipeline_LPF_Loop_fu_186_ap_ready),
    .trunc_ln7(trunc_ln174_reg_1247),
    .values_buffer_address0(grp_compression_Pipeline_LPF_Loop_fu_186_values_buffer_address0),
    .values_buffer_ce0(grp_compression_Pipeline_LPF_Loop_fu_186_values_buffer_ce0),
    .values_buffer_q0(values_buffer_q0),
    .p_out(grp_compression_Pipeline_LPF_Loop_fu_186_p_out),
    .p_out_ap_vld(grp_compression_Pipeline_LPF_Loop_fu_186_p_out_ap_vld)
);

guitar_effects_srem_17ns_10ns_16_21_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 16 ))
srem_17ns_10ns_16_21_seq_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_222_ap_start),
    .done(grp_fu_222_ap_done),
    .din0(grp_fu_222_p0),
    .din1(grp_fu_222_p1),
    .ce(1'b1),
    .dout(grp_fu_222_p2)
);

guitar_effects_sdiv_32ns_16s_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
sdiv_32ns_16s_32_36_seq_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_316_ap_start),
    .done(grp_fu_316_ap_done),
    .din0(grp_fu_316_p0),
    .din1(grp_fu_316_p1),
    .ce(1'b1),
    .dout(grp_fu_316_p2)
);

guitar_effects_sdiv_32ns_16s_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
sdiv_32ns_16s_32_36_seq_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_328_ap_start),
    .done(grp_fu_328_ap_done),
    .din0(grp_fu_328_p0),
    .din1(grp_fu_328_p1),
    .ce(1'b1),
    .dout(grp_fu_328_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state70)) begin
            ap_return_0_preg <= ap_phi_mux_output_1_phi_fu_178_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state70)) begin
            ap_return_1_preg <= trunc_ln171_reg_1257;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_compression_Pipeline_LPF_Loop_fu_186_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            grp_compression_Pipeline_LPF_Loop_fu_186_ap_start_reg <= 1'b1;
        end else if ((grp_compression_Pipeline_LPF_Loop_fu_186_ap_ready == 1'b1)) begin
            grp_compression_Pipeline_LPF_Loop_fu_186_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln194_fu_304_p2) & (icmp_ln189_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        output_1_reg_175 <= input_r;
    end else if (((1'd1 == and_ln194_reg_1272) & (icmp_ln189_reg_1268 == 1'd0) & (1'b1 == ap_CS_fsm_state70))) begin
        output_1_reg_175 <= result_V_11_fu_764_p3;
    end else if (((icmp_ln189_reg_1268 == 1'd1) & (1'b1 == ap_CS_fsm_state70))) begin
        output_1_reg_175 <= result_V_fu_776_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln189_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        and_ln194_reg_1272 <= and_ln194_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        compression_factor_1_reg_1353 <= compression_factor_1_fu_629_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        compression_factor_reg_1451 <= compression_factor_fu_1089_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        icmp_ln1136_1_reg_1303 <= icmp_ln1136_1_fu_349_p2;
        sub_ln1145_1_reg_1316 <= sub_ln1145_1_fu_401_p2;
        tmp_V_7_reg_1308 <= tmp_V_7_fu_360_p3;
        trunc_ln1144_1_reg_1328 <= trunc_ln1144_1_fu_411_p1;
        trunc_ln1148_1_reg_1323 <= trunc_ln1148_1_fu_407_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        icmp_ln1136_reg_1401 <= icmp_ln1136_fu_809_p2;
        sub_ln1145_reg_1414 <= sub_ln1145_fu_861_p2;
        tmp_V_6_reg_1406 <= tmp_V_6_fu_820_p3;
        trunc_ln1144_reg_1426 <= trunc_ln1144_fu_871_p1;
        trunc_ln1148_reg_1421 <= trunc_ln1148_fu_867_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1136_1_reg_1303 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
        icmp_ln1155_1_reg_1338 <= icmp_ln1155_1_fu_509_p2;
        or_ln1150_1_reg_1333[0] <= or_ln1150_1_fu_501_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1136_reg_1401 == 1'd0) & (1'b1 == ap_CS_fsm_state107))) begin
        icmp_ln1155_reg_1436 <= icmp_ln1155_fu_969_p2;
        or_ln_reg_1431[0] <= or_ln_fu_961_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        icmp_ln181_reg_1252 <= icmp_ln181_fu_259_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        icmp_ln189_reg_1268 <= icmp_ln189_fu_286_p2;
        trunc_ln171_reg_1257 <= trunc_ln171_fu_265_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        isNeg_1_reg_1368 <= add_ln346_1_fu_666_p2[32'd8];
        p_Result_40_reg_1358 <= data_V_1_fu_636_p1[32'd31];
        p_Result_41_reg_1363 <= p_Result_41_fu_658_p1;
        ush_1_reg_1373 <= ush_1_fu_690_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        isNeg_reg_1466 <= add_ln346_fu_1126_p2[32'd8];
        p_Result_35_reg_1456 <= data_V_fu_1096_p1[32'd31];
        p_Result_36_reg_1461 <= p_Result_36_fu_1118_p1;
        ush_reg_1471 <= ush_fu_1150_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1136_1_reg_1303 == 1'd0) & (1'b1 == ap_CS_fsm_state62))) begin
        m_1_reg_1343 <= {{m_8_fu_557_p2[33:1]}};
        p_Result_27_reg_1348 <= m_8_fu_557_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1136_reg_1401 == 1'd0) & (1'b1 == ap_CS_fsm_state108))) begin
        m_s_reg_1441 <= {{m_5_fu_1017_p2[33:1]}};
        p_Result_17_reg_1446 <= m_5_fu_1017_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        p_Result_32_reg_1395 <= grp_fu_328_p2[32'd31];
        r_V_18_reg_1389 <= grp_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        p_Result_37_reg_1297 <= grp_fu_316_p2[32'd31];
        r_V_19_reg_1291 <= grp_fu_316_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state63))) begin
        reg_203 <= grp_fu_611_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state67))) begin
        reg_208 <= grp_fu_607_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        srem_ln171_reg_1242 <= grp_fu_222_p2;
        trunc_ln174_reg_1247 <= trunc_ln174_fu_255_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        val_1_reg_1378 <= val_1_fu_752_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        val_reg_1476 <= val_fu_1212_p3;
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

assign ap_ST_fsm_state101_blk = 1'b0;

assign ap_ST_fsm_state102_blk = 1'b0;

assign ap_ST_fsm_state103_blk = 1'b0;

assign ap_ST_fsm_state104_blk = 1'b0;

assign ap_ST_fsm_state105_blk = 1'b0;

assign ap_ST_fsm_state106_blk = 1'b0;

assign ap_ST_fsm_state107_blk = 1'b0;

assign ap_ST_fsm_state108_blk = 1'b0;

assign ap_ST_fsm_state109_blk = 1'b0;

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state110_blk = 1'b0;

assign ap_ST_fsm_state111_blk = 1'b0;

assign ap_ST_fsm_state112_blk = 1'b0;

assign ap_ST_fsm_state113_blk = 1'b0;

assign ap_ST_fsm_state114_blk = 1'b0;

assign ap_ST_fsm_state115_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

always @ (*) begin
    if ((grp_compression_Pipeline_LPF_Loop_fu_186_ap_done == 1'b0)) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state70) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        if (((1'd1 == and_ln194_reg_1272) & (icmp_ln189_reg_1268 == 1'd0))) begin
            ap_phi_mux_output_1_phi_fu_178_p6 = result_V_11_fu_764_p3;
        end else if ((icmp_ln189_reg_1268 == 1'd1)) begin
            ap_phi_mux_output_1_phi_fu_178_p6 = result_V_fu_776_p3;
        end else begin
            ap_phi_mux_output_1_phi_fu_178_p6 = output_1_reg_175;
        end
    end else begin
        ap_phi_mux_output_1_phi_fu_178_p6 = output_1_reg_175;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        ap_return_0 = ap_phi_mux_output_1_phi_fu_178_p6;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        ap_return_1 = trunc_ln171_reg_1257;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        grp_fu_196_p1 = compression_factor_reg_1451;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_196_p1 = compression_factor_1_reg_1353;
    end else begin
        grp_fu_196_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_fu_200_p0 = sext_ln192_fu_794_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_200_p0 = sext_ln196_fu_334_p1;
    end else begin
        grp_fu_200_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        grp_fu_222_ap_start = 1'b1;
    end else begin
        grp_fu_222_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln194_fu_304_p2) & (icmp_ln189_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_316_ap_start = 1'b1;
    end else begin
        grp_fu_316_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln189_fu_286_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_328_ap_start = 1'b1;
    end else begin
        grp_fu_328_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        values_buffer_address0 = zext_ln170_fu_251_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        values_buffer_address0 = grp_compression_Pipeline_LPF_Loop_fu_186_values_buffer_address0;
    end else begin
        values_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        values_buffer_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        values_buffer_ce0 = grp_compression_Pipeline_LPF_Loop_fu_186_values_buffer_ce0;
    end else begin
        values_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        values_buffer_we0 = 1'b1;
    end else begin
        values_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((grp_compression_Pipeline_LPF_Loop_fu_186_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'd0 == and_ln194_fu_304_p2) & (icmp_ln189_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else if (((1'd1 == and_ln194_fu_304_p2) & (icmp_ln189_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_1_fu_621_p1 = p_Result_39_fu_609_p5[31:0];

assign LD_fu_1081_p1 = p_Result_34_fu_1069_p5[31:0];

assign a_1_fu_462_p2 = (icmp_ln1148_1_fu_456_p2 & icmp_ln1147_1_fu_430_p2);

assign a_fu_922_p2 = (icmp_ln1148_fu_916_p2 & icmp_ln1147_fu_890_p2);

assign abs_in_1_fu_242_p2 = input_r;

assign abs_in_fu_236_p1 = input_r;

assign abs_in_fu_236_p2 = ($signed(16'd0) - $signed(abs_in_fu_236_p1));

assign add_ln1155_1_fu_515_p2 = ($signed(sub_ln1145_1_reg_1316) + $signed(32'd4294967271));

assign add_ln1155_fu_975_p2 = ($signed(sub_ln1145_reg_1414) + $signed(32'd4294967271));

assign add_ln1170_1_fu_596_p2 = (sub_ln1165_1_fu_591_p2 + select_ln1144_1_fu_584_p3);

assign add_ln1170_fu_1056_p2 = (sub_ln1165_fu_1051_p2 + select_ln1144_fu_1044_p3);

assign add_ln346_1_fu_666_p2 = ($signed(zext_ln346_1_fu_662_p1) + $signed(9'd385));

assign add_ln346_fu_1126_p2 = ($signed(zext_ln346_fu_1122_p1) + $signed(9'd385));

assign and_ln1150_1_fu_489_p2 = (xor_ln1150_1_fu_476_p2 & p_Result_26_fu_482_p3);

assign and_ln1150_fu_949_p2 = (xor_ln1150_fu_936_p2 & p_Result_16_fu_942_p3);

assign and_ln194_fu_304_p2 = (icmp_ln194_fu_292_p2 & icmp_ln194_1_fu_298_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign bitcast_ln810_1_fu_625_p1 = LD_1_fu_621_p1;

assign bitcast_ln810_fu_1085_p1 = LD_fu_1081_p1;

assign compression_factor_1_fu_629_p3 = ((icmp_ln1136_1_reg_1303[0:0] == 1'b1) ? 32'd0 : bitcast_ln810_1_fu_625_p1);

assign compression_factor_fu_1089_p3 = ((icmp_ln1136_reg_1401[0:0] == 1'b1) ? 32'd0 : bitcast_ln810_fu_1085_p1);

assign data_V_1_fu_636_p1 = reg_208;

assign data_V_fu_1096_p1 = reg_208;

assign grp_compression_Pipeline_LPF_Loop_fu_186_ap_start = grp_compression_Pipeline_LPF_Loop_fu_186_ap_start_reg;

assign grp_fu_222_p0 = ($signed(sext_ln171_fu_212_p1) + $signed(17'd1));

assign grp_fu_222_p1 = 17'd441;

assign grp_fu_316_p0 = min_threshold << 32'd16;

assign grp_fu_316_p1 = sext_ln189_fu_282_p1;

assign grp_fu_328_p0 = max_threshold << 32'd16;

assign grp_fu_328_p1 = sext_ln189_fu_282_p1;

assign grp_fu_607_p_ce = 1'b1;

assign grp_fu_607_p_din0 = reg_203;

assign grp_fu_607_p_din1 = grp_fu_196_p1;

assign grp_fu_611_p_ce = 1'b1;

assign grp_fu_611_p_din0 = grp_fu_200_p0;

assign icmp_ln1136_1_fu_349_p2 = ((r_V_19_reg_1291 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1136_fu_809_p2 = ((r_V_18_reg_1389 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1147_1_fu_430_p2 = (($signed(tmp_29_fu_420_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1147_fu_890_p2 = (($signed(tmp_21_fu_880_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1148_1_fu_456_p2 = ((p_Result_25_fu_451_p2 != 33'd0) ? 1'b1 : 1'b0);

assign icmp_ln1148_fu_916_p2 = ((p_Result_15_fu_911_p2 != 33'd0) ? 1'b1 : 1'b0);

assign icmp_ln1155_1_fu_509_p2 = (($signed(lsb_index_1_fu_415_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1155_fu_969_p2 = (($signed(lsb_index_fu_875_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln181_fu_259_p2 = (($signed(current_sample) < $signed(32'd441)) ? 1'b1 : 1'b0);

assign icmp_ln189_fu_286_p2 = (($signed(sext_ln189_fu_282_p1) > $signed(max_threshold)) ? 1'b1 : 1'b0);

assign icmp_ln194_1_fu_298_p2 = (($signed(sext_ln189_fu_282_p1) > $signed(zero_threshold)) ? 1'b1 : 1'b0);

assign icmp_ln194_fu_292_p2 = (($signed(sext_ln189_fu_282_p1) < $signed(min_threshold)) ? 1'b1 : 1'b0);

assign isNeg_1_fu_672_p3 = add_ln346_1_fu_666_p2[32'd8];

assign isNeg_fu_1132_p3 = add_ln346_fu_1126_p2[32'd8];

assign l_1_fu_397_p1 = tmp_1_fu_389_p3[31:0];

assign l_fu_857_p1 = tmp_s_fu_849_p3[31:0];

assign lsb_index_1_fu_415_p2 = ($signed(sub_ln1145_1_reg_1316) + $signed(32'd4294967272));

assign lsb_index_fu_875_p2 = ($signed(sub_ln1145_reg_1414) + $signed(32'd4294967272));

assign lshr_ln1148_1_fu_445_p2 = 33'd8589934591 >> zext_ln1148_1_fu_441_p1;

assign lshr_ln1148_fu_905_p2 = 33'd8589934591 >> zext_ln1148_fu_901_p1;

assign lshr_ln1155_1_fu_524_p2 = tmp_V_7_reg_1308 >> zext_ln1155_1_fu_520_p1;

assign lshr_ln1155_fu_984_p2 = tmp_V_6_reg_1406 >> zext_ln1155_fu_980_p1;

assign m_5_fu_1017_p2 = (zext_ln1152_fu_1010_p1 + zext_ln1162_fu_1014_p1);

assign m_7_fu_543_p3 = ((icmp_ln1155_1_reg_1338[0:0] == 1'b1) ? lshr_ln1155_1_fu_524_p2 : shl_ln1156_1_fu_538_p2);

assign m_8_fu_557_p2 = (zext_ln1152_2_fu_550_p1 + zext_ln1162_1_fu_554_p1);

assign m_fu_1003_p3 = ((icmp_ln1155_reg_1436[0:0] == 1'b1) ? lshr_ln1155_fu_984_p2 : shl_ln1156_fu_998_p2);

assign mantissa_1_fu_698_p4 = {{{{1'd1}, {p_Result_41_reg_1363}}}, {1'd0}};

assign mantissa_fu_1158_p4 = {{{{1'd1}, {p_Result_36_reg_1461}}}, {1'd0}};

assign or_ln1150_1_fu_501_p3 = {{1'd0}, {or_ln1150_fu_495_p2}};

assign or_ln1150_2_fu_955_p2 = (and_ln1150_fu_949_p2 | a_fu_922_p2);

assign or_ln1150_fu_495_p2 = (and_ln1150_1_fu_489_p2 | a_1_fu_462_p2);

assign or_ln_fu_961_p3 = {{1'd0}, {or_ln1150_2_fu_955_p2}};

assign p_Result_15_fu_911_p2 = (tmp_V_6_reg_1406 & lshr_ln1148_fu_905_p2);

assign p_Result_16_fu_942_p3 = tmp_V_6_reg_1406[lsb_index_fu_875_p2];

integer ap_tvar_int_0;

always @ (tmp_V_7_fu_360_p3) begin
    for (ap_tvar_int_0 = 33 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 32 - 0) begin
            p_Result_23_fu_367_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_23_fu_367_p4[ap_tvar_int_0] = tmp_V_7_fu_360_p3[32 - ap_tvar_int_0];
        end
    end
end

assign p_Result_25_fu_451_p2 = (tmp_V_7_reg_1308 & lshr_ln1148_1_fu_445_p2);

assign p_Result_26_fu_482_p3 = tmp_V_7_reg_1308[lsb_index_1_fu_415_p2];

assign p_Result_33_fu_837_p3 = {{1'd1}, {p_Result_s_fu_827_p4}};

assign p_Result_34_fu_1069_p5 = {{zext_ln1152_1_fu_1041_p1[63:32]}, {tmp_8_fu_1062_p3}, {zext_ln1152_1_fu_1041_p1[22:0]}};

assign p_Result_36_fu_1118_p1 = data_V_fu_1096_p1[22:0];

assign p_Result_38_fu_377_p3 = {{1'd1}, {p_Result_23_fu_367_p4}};

assign p_Result_39_fu_609_p5 = {{zext_ln1152_3_fu_581_p1[63:32]}, {tmp_2_fu_602_p3}, {zext_ln1152_3_fu_581_p1[22:0]}};

assign p_Result_41_fu_658_p1 = data_V_1_fu_636_p1[22:0];

integer ap_tvar_int_1;

always @ (tmp_V_6_fu_820_p3) begin
    for (ap_tvar_int_1 = 33 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 32 - 0) begin
            p_Result_s_fu_827_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_s_fu_827_p4[ap_tvar_int_1] = tmp_V_6_fu_820_p3[32 - ap_tvar_int_1];
        end
    end
end

assign r_V_14_fu_1184_p2 = zext_ln15_fu_1167_p1 << zext_ln1488_fu_1174_p1;

assign r_V_16_fu_718_p2 = zext_ln15_1_fu_707_p1 >> zext_ln1488_1_fu_714_p1;

assign r_V_17_fu_724_p2 = zext_ln15_1_fu_707_p1 << zext_ln1488_1_fu_714_p1;

assign r_V_fu_1178_p2 = zext_ln15_fu_1167_p1 >> zext_ln1488_fu_1174_p1;

assign result_V_10_fu_759_p2 = (16'd0 - val_1_reg_1378);

assign result_V_11_fu_764_p3 = ((p_Result_40_reg_1358[0:0] == 1'b1) ? result_V_10_fu_759_p2 : val_1_reg_1378);

assign result_V_6_fu_771_p2 = (16'd0 - val_reg_1476);

assign result_V_fu_776_p3 = ((p_Result_35_reg_1456[0:0] == 1'b1) ? result_V_6_fu_771_p2 : val_reg_1476);

assign select_ln1144_1_fu_584_p3 = ((p_Result_27_reg_1348[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln1144_fu_1044_p3 = ((p_Result_17_reg_1446[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln181_fu_275_p3 = ((icmp_ln181_reg_1252[0:0] == 1'b1) ? trunc_ln182_fu_271_p1 : grp_compression_Pipeline_LPF_Loop_fu_186_p_out);

assign sext_ln1250_1_fu_385_p1 = $signed(p_Result_38_fu_377_p3);

assign sext_ln1250_fu_845_p1 = $signed(p_Result_33_fu_837_p3);

assign sext_ln1349_1_fu_346_p1 = r_V_19_reg_1291;

assign sext_ln1349_fu_806_p1 = r_V_18_reg_1389;

assign sext_ln1488_1_fu_711_p1 = $signed(ush_1_reg_1373);

assign sext_ln1488_fu_1171_p1 = $signed(ush_reg_1471);

assign sext_ln1512_1_fu_686_p1 = $signed(sub_ln1512_1_fu_680_p2);

assign sext_ln1512_fu_1146_p1 = $signed(sub_ln1512_fu_1140_p2);

assign sext_ln171_fu_212_p0 = compression_buffer_index_read;

assign sext_ln171_fu_212_p1 = sext_ln171_fu_212_p0;

assign sext_ln189_fu_282_p1 = $signed(select_ln181_fu_275_p3);

assign sext_ln192_fu_794_p0 = input_r;

assign sext_ln192_fu_794_p1 = sext_ln192_fu_794_p0;

assign sext_ln196_fu_334_p0 = input_r;

assign sext_ln196_fu_334_p1 = sext_ln196_fu_334_p0;

assign shl_ln1156_1_fu_538_p2 = tmp_V_7_reg_1308 << zext_ln1156_1_fu_534_p1;

assign shl_ln1156_fu_998_p2 = tmp_V_6_reg_1406 << zext_ln1156_fu_994_p1;

assign sub_ln1145_1_fu_401_p2 = (32'd33 - l_1_fu_397_p1);

assign sub_ln1145_fu_861_p2 = (32'd33 - l_fu_857_p1);

assign sub_ln1148_1_fu_436_p2 = ($signed(6'd58) - $signed(trunc_ln1148_1_reg_1323));

assign sub_ln1148_fu_896_p2 = ($signed(6'd58) - $signed(trunc_ln1148_reg_1421));

assign sub_ln1156_1_fu_529_p2 = (32'd25 - sub_ln1145_1_reg_1316);

assign sub_ln1156_fu_989_p2 = (32'd25 - sub_ln1145_reg_1414);

assign sub_ln1165_1_fu_591_p2 = (8'd17 - trunc_ln1144_1_reg_1328);

assign sub_ln1165_fu_1051_p2 = (8'd17 - trunc_ln1144_reg_1426);

assign sub_ln1512_1_fu_680_p2 = (8'd127 - xs_exp_V_1_fu_648_p4);

assign sub_ln1512_fu_1140_p2 = (8'd127 - xs_exp_V_fu_1108_p4);


always @ (sext_ln1250_1_fu_385_p1) begin
    if (sext_ln1250_1_fu_385_p1[0] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd0;
    end else if (sext_ln1250_1_fu_385_p1[1] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd1;
    end else if (sext_ln1250_1_fu_385_p1[2] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd2;
    end else if (sext_ln1250_1_fu_385_p1[3] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd3;
    end else if (sext_ln1250_1_fu_385_p1[4] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd4;
    end else if (sext_ln1250_1_fu_385_p1[5] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd5;
    end else if (sext_ln1250_1_fu_385_p1[6] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd6;
    end else if (sext_ln1250_1_fu_385_p1[7] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd7;
    end else if (sext_ln1250_1_fu_385_p1[8] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd8;
    end else if (sext_ln1250_1_fu_385_p1[9] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd9;
    end else if (sext_ln1250_1_fu_385_p1[10] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd10;
    end else if (sext_ln1250_1_fu_385_p1[11] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd11;
    end else if (sext_ln1250_1_fu_385_p1[12] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd12;
    end else if (sext_ln1250_1_fu_385_p1[13] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd13;
    end else if (sext_ln1250_1_fu_385_p1[14] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd14;
    end else if (sext_ln1250_1_fu_385_p1[15] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd15;
    end else if (sext_ln1250_1_fu_385_p1[16] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd16;
    end else if (sext_ln1250_1_fu_385_p1[17] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd17;
    end else if (sext_ln1250_1_fu_385_p1[18] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd18;
    end else if (sext_ln1250_1_fu_385_p1[19] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd19;
    end else if (sext_ln1250_1_fu_385_p1[20] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd20;
    end else if (sext_ln1250_1_fu_385_p1[21] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd21;
    end else if (sext_ln1250_1_fu_385_p1[22] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd22;
    end else if (sext_ln1250_1_fu_385_p1[23] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd23;
    end else if (sext_ln1250_1_fu_385_p1[24] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd24;
    end else if (sext_ln1250_1_fu_385_p1[25] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd25;
    end else if (sext_ln1250_1_fu_385_p1[26] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd26;
    end else if (sext_ln1250_1_fu_385_p1[27] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd27;
    end else if (sext_ln1250_1_fu_385_p1[28] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd28;
    end else if (sext_ln1250_1_fu_385_p1[29] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd29;
    end else if (sext_ln1250_1_fu_385_p1[30] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd30;
    end else if (sext_ln1250_1_fu_385_p1[31] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd31;
    end else if (sext_ln1250_1_fu_385_p1[32] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd32;
    end else if (sext_ln1250_1_fu_385_p1[33] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd33;
    end else if (sext_ln1250_1_fu_385_p1[34] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd34;
    end else if (sext_ln1250_1_fu_385_p1[35] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd35;
    end else if (sext_ln1250_1_fu_385_p1[36] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd36;
    end else if (sext_ln1250_1_fu_385_p1[37] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd37;
    end else if (sext_ln1250_1_fu_385_p1[38] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd38;
    end else if (sext_ln1250_1_fu_385_p1[39] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd39;
    end else if (sext_ln1250_1_fu_385_p1[40] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd40;
    end else if (sext_ln1250_1_fu_385_p1[41] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd41;
    end else if (sext_ln1250_1_fu_385_p1[42] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd42;
    end else if (sext_ln1250_1_fu_385_p1[43] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd43;
    end else if (sext_ln1250_1_fu_385_p1[44] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd44;
    end else if (sext_ln1250_1_fu_385_p1[45] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd45;
    end else if (sext_ln1250_1_fu_385_p1[46] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd46;
    end else if (sext_ln1250_1_fu_385_p1[47] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd47;
    end else if (sext_ln1250_1_fu_385_p1[48] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd48;
    end else if (sext_ln1250_1_fu_385_p1[49] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd49;
    end else if (sext_ln1250_1_fu_385_p1[50] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd50;
    end else if (sext_ln1250_1_fu_385_p1[51] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd51;
    end else if (sext_ln1250_1_fu_385_p1[52] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd52;
    end else if (sext_ln1250_1_fu_385_p1[53] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd53;
    end else if (sext_ln1250_1_fu_385_p1[54] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd54;
    end else if (sext_ln1250_1_fu_385_p1[55] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd55;
    end else if (sext_ln1250_1_fu_385_p1[56] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd56;
    end else if (sext_ln1250_1_fu_385_p1[57] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd57;
    end else if (sext_ln1250_1_fu_385_p1[58] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd58;
    end else if (sext_ln1250_1_fu_385_p1[59] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd59;
    end else if (sext_ln1250_1_fu_385_p1[60] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd60;
    end else if (sext_ln1250_1_fu_385_p1[61] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd61;
    end else if (sext_ln1250_1_fu_385_p1[62] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd62;
    end else if (sext_ln1250_1_fu_385_p1[63] == 1'b1) begin
        tmp_1_fu_389_p3 = 64'd63;
    end else begin
        tmp_1_fu_389_p3 = 64'd64;
    end
end

assign tmp_21_fu_880_p4 = {{lsb_index_fu_875_p2[31:1]}};

assign tmp_22_fu_928_p3 = lsb_index_fu_875_p2[32'd31];

assign tmp_27_fu_1190_p3 = r_V_fu_1178_p2[32'd24];

assign tmp_29_fu_420_p4 = {{lsb_index_1_fu_415_p2[31:1]}};

assign tmp_2_fu_602_p3 = {{p_Result_37_reg_1297}, {add_ln1170_1_fu_596_p2}};

assign tmp_30_fu_468_p3 = lsb_index_1_fu_415_p2[32'd31];

assign tmp_35_fu_730_p3 = r_V_16_fu_718_p2[32'd24];

assign tmp_3_fu_1202_p4 = {{r_V_14_fu_1184_p2[39:24]}};

assign tmp_4_fu_742_p4 = {{r_V_17_fu_724_p2[39:24]}};

assign tmp_8_fu_1062_p3 = {{p_Result_32_reg_1395}, {add_ln1170_fu_1056_p2}};

assign tmp_V_4_fu_354_p2 = ($signed(33'd0) - $signed(sext_ln1349_1_fu_346_p1));

assign tmp_V_6_fu_820_p3 = ((p_Result_32_reg_1395[0:0] == 1'b1) ? tmp_V_fu_814_p2 : sext_ln1349_fu_806_p1);

assign tmp_V_7_fu_360_p3 = ((p_Result_37_reg_1297[0:0] == 1'b1) ? tmp_V_4_fu_354_p2 : sext_ln1349_1_fu_346_p1);

assign tmp_V_fu_814_p2 = ($signed(33'd0) - $signed(sext_ln1349_fu_806_p1));

assign tmp_fu_228_p1 = input_r;

assign tmp_fu_228_p3 = tmp_fu_228_p1[32'd15];


always @ (sext_ln1250_fu_845_p1) begin
    if (sext_ln1250_fu_845_p1[0] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd0;
    end else if (sext_ln1250_fu_845_p1[1] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd1;
    end else if (sext_ln1250_fu_845_p1[2] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd2;
    end else if (sext_ln1250_fu_845_p1[3] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd3;
    end else if (sext_ln1250_fu_845_p1[4] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd4;
    end else if (sext_ln1250_fu_845_p1[5] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd5;
    end else if (sext_ln1250_fu_845_p1[6] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd6;
    end else if (sext_ln1250_fu_845_p1[7] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd7;
    end else if (sext_ln1250_fu_845_p1[8] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd8;
    end else if (sext_ln1250_fu_845_p1[9] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd9;
    end else if (sext_ln1250_fu_845_p1[10] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd10;
    end else if (sext_ln1250_fu_845_p1[11] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd11;
    end else if (sext_ln1250_fu_845_p1[12] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd12;
    end else if (sext_ln1250_fu_845_p1[13] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd13;
    end else if (sext_ln1250_fu_845_p1[14] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd14;
    end else if (sext_ln1250_fu_845_p1[15] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd15;
    end else if (sext_ln1250_fu_845_p1[16] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd16;
    end else if (sext_ln1250_fu_845_p1[17] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd17;
    end else if (sext_ln1250_fu_845_p1[18] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd18;
    end else if (sext_ln1250_fu_845_p1[19] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd19;
    end else if (sext_ln1250_fu_845_p1[20] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd20;
    end else if (sext_ln1250_fu_845_p1[21] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd21;
    end else if (sext_ln1250_fu_845_p1[22] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd22;
    end else if (sext_ln1250_fu_845_p1[23] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd23;
    end else if (sext_ln1250_fu_845_p1[24] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd24;
    end else if (sext_ln1250_fu_845_p1[25] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd25;
    end else if (sext_ln1250_fu_845_p1[26] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd26;
    end else if (sext_ln1250_fu_845_p1[27] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd27;
    end else if (sext_ln1250_fu_845_p1[28] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd28;
    end else if (sext_ln1250_fu_845_p1[29] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd29;
    end else if (sext_ln1250_fu_845_p1[30] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd30;
    end else if (sext_ln1250_fu_845_p1[31] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd31;
    end else if (sext_ln1250_fu_845_p1[32] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd32;
    end else if (sext_ln1250_fu_845_p1[33] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd33;
    end else if (sext_ln1250_fu_845_p1[34] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd34;
    end else if (sext_ln1250_fu_845_p1[35] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd35;
    end else if (sext_ln1250_fu_845_p1[36] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd36;
    end else if (sext_ln1250_fu_845_p1[37] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd37;
    end else if (sext_ln1250_fu_845_p1[38] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd38;
    end else if (sext_ln1250_fu_845_p1[39] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd39;
    end else if (sext_ln1250_fu_845_p1[40] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd40;
    end else if (sext_ln1250_fu_845_p1[41] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd41;
    end else if (sext_ln1250_fu_845_p1[42] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd42;
    end else if (sext_ln1250_fu_845_p1[43] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd43;
    end else if (sext_ln1250_fu_845_p1[44] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd44;
    end else if (sext_ln1250_fu_845_p1[45] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd45;
    end else if (sext_ln1250_fu_845_p1[46] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd46;
    end else if (sext_ln1250_fu_845_p1[47] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd47;
    end else if (sext_ln1250_fu_845_p1[48] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd48;
    end else if (sext_ln1250_fu_845_p1[49] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd49;
    end else if (sext_ln1250_fu_845_p1[50] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd50;
    end else if (sext_ln1250_fu_845_p1[51] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd51;
    end else if (sext_ln1250_fu_845_p1[52] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd52;
    end else if (sext_ln1250_fu_845_p1[53] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd53;
    end else if (sext_ln1250_fu_845_p1[54] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd54;
    end else if (sext_ln1250_fu_845_p1[55] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd55;
    end else if (sext_ln1250_fu_845_p1[56] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd56;
    end else if (sext_ln1250_fu_845_p1[57] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd57;
    end else if (sext_ln1250_fu_845_p1[58] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd58;
    end else if (sext_ln1250_fu_845_p1[59] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd59;
    end else if (sext_ln1250_fu_845_p1[60] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd60;
    end else if (sext_ln1250_fu_845_p1[61] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd61;
    end else if (sext_ln1250_fu_845_p1[62] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd62;
    end else if (sext_ln1250_fu_845_p1[63] == 1'b1) begin
        tmp_s_fu_849_p3 = 64'd63;
    end else begin
        tmp_s_fu_849_p3 = 64'd64;
    end
end

assign trunc_ln1144_1_fu_411_p1 = tmp_1_fu_389_p3[7:0];

assign trunc_ln1144_fu_871_p1 = tmp_s_fu_849_p3[7:0];

assign trunc_ln1148_1_fu_407_p1 = sub_ln1145_1_fu_401_p2[5:0];

assign trunc_ln1148_fu_867_p1 = sub_ln1145_fu_861_p2[5:0];

assign trunc_ln171_fu_265_p1 = srem_ln171_reg_1242[15:0];

assign trunc_ln174_fu_255_p1 = grp_fu_222_p2[10:0];

assign trunc_ln182_fu_271_p1 = min_threshold[15:0];

assign ush_1_fu_690_p3 = ((isNeg_1_fu_672_p3[0:0] == 1'b1) ? sext_ln1512_1_fu_686_p1 : add_ln346_1_fu_666_p2);

assign ush_fu_1150_p3 = ((isNeg_fu_1132_p3[0:0] == 1'b1) ? sext_ln1512_fu_1146_p1 : add_ln346_fu_1126_p2);

assign val_1_fu_752_p3 = ((isNeg_1_reg_1368[0:0] == 1'b1) ? zext_ln818_1_fu_738_p1 : tmp_4_fu_742_p4);

assign val_fu_1212_p3 = ((isNeg_reg_1466[0:0] == 1'b1) ? zext_ln818_fu_1198_p1 : tmp_3_fu_1202_p4);

assign values_buffer_d0 = ((tmp_fu_228_p3[0:0] == 1'b1) ? abs_in_fu_236_p2 : abs_in_1_fu_242_p2);

assign xor_ln1150_1_fu_476_p2 = (tmp_30_fu_468_p3 ^ 1'd1);

assign xor_ln1150_fu_936_p2 = (tmp_22_fu_928_p3 ^ 1'd1);

assign xs_exp_V_1_fu_648_p4 = {{data_V_1_fu_636_p1[30:23]}};

assign xs_exp_V_fu_1108_p4 = {{data_V_fu_1096_p1[30:23]}};

assign zext_ln1148_1_fu_441_p1 = sub_ln1148_1_fu_436_p2;

assign zext_ln1148_fu_901_p1 = sub_ln1148_fu_896_p2;

assign zext_ln1152_1_fu_1041_p1 = m_s_reg_1441;

assign zext_ln1152_2_fu_550_p1 = m_7_fu_543_p3;

assign zext_ln1152_3_fu_581_p1 = m_1_reg_1343;

assign zext_ln1152_fu_1010_p1 = m_fu_1003_p3;

assign zext_ln1155_1_fu_520_p1 = add_ln1155_1_fu_515_p2;

assign zext_ln1155_fu_980_p1 = add_ln1155_fu_975_p2;

assign zext_ln1156_1_fu_534_p1 = sub_ln1156_1_fu_529_p2;

assign zext_ln1156_fu_994_p1 = sub_ln1156_fu_989_p2;

assign zext_ln1162_1_fu_554_p1 = or_ln1150_1_reg_1333;

assign zext_ln1162_fu_1014_p1 = or_ln_reg_1431;

assign zext_ln1488_1_fu_714_p1 = $unsigned(sext_ln1488_1_fu_711_p1);

assign zext_ln1488_fu_1174_p1 = $unsigned(sext_ln1488_fu_1171_p1);

assign zext_ln15_1_fu_707_p1 = mantissa_1_fu_698_p4;

assign zext_ln15_fu_1167_p1 = mantissa_fu_1158_p4;

assign zext_ln170_fu_251_p0 = compression_buffer_index_read;

assign zext_ln170_fu_251_p1 = $unsigned(zext_ln170_fu_251_p0);

assign zext_ln346_1_fu_662_p1 = xs_exp_V_1_fu_648_p4;

assign zext_ln346_fu_1122_p1 = xs_exp_V_fu_1108_p4;

assign zext_ln818_1_fu_738_p1 = tmp_35_fu_730_p3;

assign zext_ln818_fu_1198_p1 = tmp_27_fu_1190_p3;

always @ (posedge ap_clk) begin
    or_ln1150_1_reg_1333[1] <= 1'b0;
    or_ln_reg_1431[1] <= 1'b0;
end

endmodule //guitar_effects_compression
