// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="guitar_effects_guitar_effects,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.912000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=129,HLS_SYN_DSP=0,HLS_SYN_FF=2317,HLS_SYN_LUT=2800,HLS_VERSION=2022_1}" *)

module guitar_effects (
        ap_clk,
        ap_rst_n,
        INPUT_r_TDATA,
        INPUT_r_TVALID,
        INPUT_r_TREADY,
        INPUT_r_TKEEP,
        INPUT_r_TSTRB,
        INPUT_r_TUSER,
        INPUT_r_TLAST,
        INPUT_r_TID,
        INPUT_r_TDEST,
        OUTPUT_r_TDATA,
        OUTPUT_r_TVALID,
        OUTPUT_r_TREADY,
        OUTPUT_r_TKEEP,
        OUTPUT_r_TSTRB,
        OUTPUT_r_TUSER,
        OUTPUT_r_TLAST,
        OUTPUT_r_TID,
        OUTPUT_r_TDEST,
        s_axi_control_r_AWVALID,
        s_axi_control_r_AWREADY,
        s_axi_control_r_AWADDR,
        s_axi_control_r_WVALID,
        s_axi_control_r_WREADY,
        s_axi_control_r_WDATA,
        s_axi_control_r_WSTRB,
        s_axi_control_r_ARVALID,
        s_axi_control_r_ARREADY,
        s_axi_control_r_ARADDR,
        s_axi_control_r_RVALID,
        s_axi_control_r_RREADY,
        s_axi_control_r_RDATA,
        s_axi_control_r_RRESP,
        s_axi_control_r_BVALID,
        s_axi_control_r_BREADY,
        s_axi_control_r_BRESP
);

parameter    ap_ST_fsm_state1 = 52'd1;
parameter    ap_ST_fsm_state2 = 52'd2;
parameter    ap_ST_fsm_state3 = 52'd4;
parameter    ap_ST_fsm_state4 = 52'd8;
parameter    ap_ST_fsm_state5 = 52'd16;
parameter    ap_ST_fsm_state6 = 52'd32;
parameter    ap_ST_fsm_state7 = 52'd64;
parameter    ap_ST_fsm_state8 = 52'd128;
parameter    ap_ST_fsm_state9 = 52'd256;
parameter    ap_ST_fsm_state10 = 52'd512;
parameter    ap_ST_fsm_state11 = 52'd1024;
parameter    ap_ST_fsm_state12 = 52'd2048;
parameter    ap_ST_fsm_state13 = 52'd4096;
parameter    ap_ST_fsm_state14 = 52'd8192;
parameter    ap_ST_fsm_state15 = 52'd16384;
parameter    ap_ST_fsm_state16 = 52'd32768;
parameter    ap_ST_fsm_state17 = 52'd65536;
parameter    ap_ST_fsm_state18 = 52'd131072;
parameter    ap_ST_fsm_state19 = 52'd262144;
parameter    ap_ST_fsm_state20 = 52'd524288;
parameter    ap_ST_fsm_state21 = 52'd1048576;
parameter    ap_ST_fsm_state22 = 52'd2097152;
parameter    ap_ST_fsm_state23 = 52'd4194304;
parameter    ap_ST_fsm_state24 = 52'd8388608;
parameter    ap_ST_fsm_state25 = 52'd16777216;
parameter    ap_ST_fsm_state26 = 52'd33554432;
parameter    ap_ST_fsm_state27 = 52'd67108864;
parameter    ap_ST_fsm_state28 = 52'd134217728;
parameter    ap_ST_fsm_state29 = 52'd268435456;
parameter    ap_ST_fsm_state30 = 52'd536870912;
parameter    ap_ST_fsm_state31 = 52'd1073741824;
parameter    ap_ST_fsm_state32 = 52'd2147483648;
parameter    ap_ST_fsm_state33 = 52'd4294967296;
parameter    ap_ST_fsm_state34 = 52'd8589934592;
parameter    ap_ST_fsm_state35 = 52'd17179869184;
parameter    ap_ST_fsm_state36 = 52'd34359738368;
parameter    ap_ST_fsm_state37 = 52'd68719476736;
parameter    ap_ST_fsm_state38 = 52'd137438953472;
parameter    ap_ST_fsm_state39 = 52'd274877906944;
parameter    ap_ST_fsm_state40 = 52'd549755813888;
parameter    ap_ST_fsm_state41 = 52'd1099511627776;
parameter    ap_ST_fsm_state42 = 52'd2199023255552;
parameter    ap_ST_fsm_state43 = 52'd4398046511104;
parameter    ap_ST_fsm_state44 = 52'd8796093022208;
parameter    ap_ST_fsm_state45 = 52'd17592186044416;
parameter    ap_ST_fsm_state46 = 52'd35184372088832;
parameter    ap_ST_fsm_state47 = 52'd70368744177664;
parameter    ap_ST_fsm_state48 = 52'd140737488355328;
parameter    ap_ST_fsm_state49 = 52'd281474976710656;
parameter    ap_ST_fsm_state50 = 52'd562949953421312;
parameter    ap_ST_fsm_state51 = 52'd1125899906842624;
parameter    ap_ST_fsm_state52 = 52'd2251799813685248;
parameter    C_S_AXI_CONTROL_R_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_R_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_R_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] INPUT_r_TDATA;
input   INPUT_r_TVALID;
output   INPUT_r_TREADY;
input  [3:0] INPUT_r_TKEEP;
input  [3:0] INPUT_r_TSTRB;
input  [1:0] INPUT_r_TUSER;
input  [0:0] INPUT_r_TLAST;
input  [4:0] INPUT_r_TID;
input  [5:0] INPUT_r_TDEST;
output  [31:0] OUTPUT_r_TDATA;
output   OUTPUT_r_TVALID;
input   OUTPUT_r_TREADY;
output  [3:0] OUTPUT_r_TKEEP;
output  [3:0] OUTPUT_r_TSTRB;
output  [1:0] OUTPUT_r_TUSER;
output  [0:0] OUTPUT_r_TLAST;
output  [4:0] OUTPUT_r_TID;
output  [5:0] OUTPUT_r_TDEST;
input   s_axi_control_r_AWVALID;
output   s_axi_control_r_AWREADY;
input  [C_S_AXI_CONTROL_R_ADDR_WIDTH - 1:0] s_axi_control_r_AWADDR;
input   s_axi_control_r_WVALID;
output   s_axi_control_r_WREADY;
input  [C_S_AXI_CONTROL_R_DATA_WIDTH - 1:0] s_axi_control_r_WDATA;
input  [C_S_AXI_CONTROL_R_WSTRB_WIDTH - 1:0] s_axi_control_r_WSTRB;
input   s_axi_control_r_ARVALID;
output   s_axi_control_r_ARREADY;
input  [C_S_AXI_CONTROL_R_ADDR_WIDTH - 1:0] s_axi_control_r_ARADDR;
output   s_axi_control_r_RVALID;
input   s_axi_control_r_RREADY;
output  [C_S_AXI_CONTROL_R_DATA_WIDTH - 1:0] s_axi_control_r_RDATA;
output  [1:0] s_axi_control_r_RRESP;
output   s_axi_control_r_BVALID;
input   s_axi_control_r_BREADY;
output  [1:0] s_axi_control_r_BRESP;

 reg    ap_rst_n_inv;
wire   [31:0] axilite_out;
reg    axilite_out_ap_vld;
wire   [7:0] control;
wire   [31:0] distortion_threshold;
wire   [9:0] distortion_clip_factor;
wire   [31:0] compression_min_threshold;
wire   [31:0] compression_max_threshold;
wire   [31:0] compression_zero_threshold;
wire   [9:0] delay_mult;
wire   [31:0] delay_samples;
reg    INPUT_r_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [51:0] ap_CS_fsm;
wire    ap_CS_fsm_state38;
reg    OUTPUT_r_TDATA_blk_n;
wire    ap_CS_fsm_state50;
reg   [0:0] tmp_last_V_reg_906;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state51;
reg   [31:0] delay_samples_read_reg_794;
wire    ap_CS_fsm_state1;
reg   [9:0] delay_mult_read_reg_799;
reg   [9:0] distortion_clip_factor_read_reg_804;
reg   [31:0] distortion_threshold_read_reg_809;
wire   [0:0] trunc_ln19_fu_361_p1;
reg   [0:0] trunc_ln19_reg_825;
reg   [0:0] tmp_reg_830;
reg   [0:0] tmp_1_reg_837;
reg   [0:0] tmp_2_reg_841;
wire    ap_CS_fsm_state2;
wire   [0:0] rev_fu_410_p2;
reg   [0:0] rev_reg_850;
wire    ap_CS_fsm_state37;
wire   [31:0] negative_threshold_fu_415_p2;
reg   [31:0] negative_threshold_reg_865;
wire  signed [41:0] conv7_i_i_i_fu_420_p1;
reg  signed [41:0] conv7_i_i_i_reg_870;
reg   [15:0] delay_buffer_addr_1_reg_876;
wire  signed [41:0] conv7_i_i_i300_fu_432_p1;
reg  signed [41:0] conv7_i_i_i300_reg_881;
reg   [31:0] tmp_data_V_1_reg_886;
reg   [3:0] tmp_keep_V_reg_891;
reg   [3:0] tmp_strb_V_reg_896;
reg   [1:0] tmp_user_V_reg_901;
reg   [4:0] tmp_id_V_reg_910;
reg   [5:0] tmp_dest_V_reg_915;
wire   [0:0] icmp_ln116_fu_463_p2;
reg   [0:0] icmp_ln116_reg_920;
wire   [31:0] r_V_3_fu_468_p2;
reg  signed [31:0] r_V_3_reg_925;
wire   [31:0] r_V_fu_473_p2;
reg  signed [31:0] r_V_reg_930;
wire   [0:0] or_ln118_fu_501_p2;
reg   [0:0] or_ln118_reg_935;
wire    ap_CS_fsm_state39;
wire   [41:0] grp_fu_509_p2;
reg   [41:0] r_V_9_reg_950;
wire    ap_CS_fsm_state40;
reg   [31:0] ret_V_cast_reg_955;
wire   [7:0] trunc_ln1049_fu_532_p1;
reg   [7:0] trunc_ln1049_reg_962;
wire   [41:0] grp_fu_517_p2;
reg   [41:0] r_V_10_reg_967;
reg   [31:0] ret_V_3_cast_reg_972;
wire   [7:0] trunc_ln1049_1_fu_546_p1;
reg   [7:0] trunc_ln1049_1_reg_979;
wire   [31:0] result_4_fu_634_p3;
reg   [31:0] result_4_reg_984;
wire    ap_CS_fsm_state41;
wire   [31:0] empty_33_fu_649_p3;
reg   [31:0] empty_33_reg_992;
wire    ap_CS_fsm_state42;
wire   [31:0] delay_buffer_q0;
reg  signed [31:0] r_V_7_reg_1001;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire   [41:0] grp_fu_698_p2;
reg   [41:0] r_V_11_reg_1011;
wire    ap_CS_fsm_state48;
reg   [31:0] ret_V_9_cast_reg_1016;
wire   [7:0] trunc_ln1049_2_fu_713_p1;
reg   [7:0] trunc_ln1049_2_reg_1023;
wire   [31:0] output_fu_748_p2;
reg   [31:0] output_reg_1028;
wire    ap_CS_fsm_state49;
reg   [7:0] compression_buffer_address0;
reg    compression_buffer_ce0;
reg    compression_buffer_we0;
reg   [31:0] compression_buffer_d0;
wire   [31:0] compression_buffer_q0;
reg   [7:0] lpf_coefficients_V_address0;
reg    lpf_coefficients_V_ce0;
reg    lpf_coefficients_V_we0;
wire   [0:0] lpf_coefficients_V_q0;
reg   [15:0] delay_buffer_address0;
reg    delay_buffer_ce0;
reg    delay_buffer_we0;
reg   [31:0] delay_buffer_d0;
wire    grp_guitar_effects_Pipeline_1_fu_341_ap_start;
wire    grp_guitar_effects_Pipeline_1_fu_341_ap_done;
wire    grp_guitar_effects_Pipeline_1_fu_341_ap_idle;
wire    grp_guitar_effects_Pipeline_1_fu_341_ap_ready;
wire   [7:0] grp_guitar_effects_Pipeline_1_fu_341_compression_buffer_address0;
wire    grp_guitar_effects_Pipeline_1_fu_341_compression_buffer_ce0;
wire    grp_guitar_effects_Pipeline_1_fu_341_compression_buffer_we0;
wire   [31:0] grp_guitar_effects_Pipeline_1_fu_341_compression_buffer_d0;
wire    grp_guitar_effects_Pipeline_2_fu_347_ap_start;
wire    grp_guitar_effects_Pipeline_2_fu_347_ap_done;
wire    grp_guitar_effects_Pipeline_2_fu_347_ap_idle;
wire    grp_guitar_effects_Pipeline_2_fu_347_ap_ready;
wire   [15:0] grp_guitar_effects_Pipeline_2_fu_347_delay_buffer_address0;
wire    grp_guitar_effects_Pipeline_2_fu_347_delay_buffer_ce0;
wire    grp_guitar_effects_Pipeline_2_fu_347_delay_buffer_we0;
wire   [31:0] grp_guitar_effects_Pipeline_2_fu_347_delay_buffer_d0;
wire    grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_start;
wire    grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_done;
wire    grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_idle;
wire    grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_ready;
wire   [7:0] grp_guitar_effects_Pipeline_LPF_Loop_fu_353_compression_buffer_address0;
wire    grp_guitar_effects_Pipeline_LPF_Loop_fu_353_compression_buffer_ce0;
wire   [7:0] grp_guitar_effects_Pipeline_LPF_Loop_fu_353_lpf_coefficients_V_address0;
wire    grp_guitar_effects_Pipeline_LPF_Loop_fu_353_lpf_coefficients_V_ce0;
wire   [31:0] grp_guitar_effects_Pipeline_LPF_Loop_fu_353_p_out;
wire    grp_guitar_effects_Pipeline_LPF_Loop_fu_353_p_out_ap_vld;
wire   [31:0] or_ln78_fu_684_p2;
reg   [31:0] ap_phi_mux_empty_34_phi_fu_301_p4;
reg   [31:0] empty_34_reg_298;
wire    ap_CS_fsm_state45;
reg   [31:0] ap_phi_mux_tmp_int_4_phi_fu_311_p4;
reg   [31:0] tmp_int_4_reg_308;
wire   [31:0] or_ln83_fu_754_p2;
reg   [31:0] ap_phi_mux_empty_35_phi_fu_321_p4;
reg   [31:0] empty_35_reg_318;
reg    ap_block_state50;
reg    ap_block_state50_io;
reg   [31:0] ap_phi_mux_tmp_int_phi_fu_332_p4;
reg   [31:0] tmp_int_reg_328;
reg    grp_guitar_effects_Pipeline_1_fu_341_ap_start_reg;
reg    grp_guitar_effects_Pipeline_2_fu_347_ap_start_reg;
reg    grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_start_reg;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire   [63:0] idxprom_i_cast_fu_427_p1;
reg   [31:0] empty_fu_148;
wire   [31:0] select_ln86_fu_767_p3;
reg   [31:0] current_level_fu_152;
wire   [31:0] abs_in_1_fu_668_p3;
wire   [31:0] grp_fu_404_p0;
wire   [16:0] grp_fu_404_p1;
wire   [15:0] grp_fu_404_p2;
wire   [15:0] empty_31_fu_423_p1;
wire   [0:0] icmp_ln118_fu_484_p2;
wire   [0:0] xor_ln118_fu_489_p2;
wire   [0:0] xor_ln116_fu_478_p2;
wire   [0:0] and_ln118_fu_495_p2;
wire  signed [9:0] grp_fu_509_p1;
wire  signed [9:0] grp_fu_517_p1;
wire   [0:0] icmp_ln1049_fu_557_p2;
wire   [31:0] ret_V_fu_562_p2;
wire   [0:0] p_Result_s_fu_550_p3;
wire   [31:0] select_ln1048_fu_567_p3;
wire   [31:0] ret_V_4_fu_574_p3;
wire   [0:0] icmp_ln1049_1_fu_593_p2;
wire   [31:0] ret_V_5_fu_598_p2;
wire   [0:0] p_Result_1_fu_586_p3;
wire   [31:0] select_ln1048_1_fu_603_p3;
wire   [31:0] ret_V_8_fu_610_p3;
wire   [0:0] and_ln116_fu_622_p2;
wire   [31:0] result_fu_581_p2;
wire   [31:0] result_1_fu_617_p2;
wire   [31:0] result_2_fu_626_p3;
wire   [31:0] or_ln73_fu_643_p2;
wire   [0:0] tmp_5_fu_656_p3;
wire   [31:0] sub_ln131_fu_663_p2;
wire  signed [9:0] grp_fu_698_p1;
wire   [0:0] icmp_ln1049_2_fu_724_p2;
wire   [31:0] ret_V_9_fu_729_p2;
wire   [0:0] p_Result_2_fu_717_p3;
wire   [31:0] select_ln1048_2_fu_734_p3;
wire   [31:0] ret_V_10_fu_741_p3;
wire   [31:0] or_ln88_fu_761_p2;
reg    grp_fu_404_ap_start;
reg    ap_block_state2_on_subcall_done;
wire    grp_fu_404_ap_done;
reg    grp_fu_404_ce;
reg   [51:0] ap_NS_fsm;
wire    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
reg    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
reg    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
reg    ap_ST_fsm_state50_blk;
reg    ap_ST_fsm_state51_blk;
reg    ap_ST_fsm_state52_blk;
wire    regslice_both_OUTPUT_r_V_data_V_U_apdone_blk;
reg    ap_block_state52;
wire    regslice_both_INPUT_r_V_data_V_U_apdone_blk;
wire   [31:0] INPUT_r_TDATA_int_regslice;
wire    INPUT_r_TVALID_int_regslice;
reg    INPUT_r_TREADY_int_regslice;
wire    regslice_both_INPUT_r_V_data_V_U_ack_in;
wire    regslice_both_INPUT_r_V_keep_V_U_apdone_blk;
wire   [3:0] INPUT_r_TKEEP_int_regslice;
wire    regslice_both_INPUT_r_V_keep_V_U_vld_out;
wire    regslice_both_INPUT_r_V_keep_V_U_ack_in;
wire    regslice_both_INPUT_r_V_strb_V_U_apdone_blk;
wire   [3:0] INPUT_r_TSTRB_int_regslice;
wire    regslice_both_INPUT_r_V_strb_V_U_vld_out;
wire    regslice_both_INPUT_r_V_strb_V_U_ack_in;
wire    regslice_both_INPUT_r_V_user_V_U_apdone_blk;
wire   [1:0] INPUT_r_TUSER_int_regslice;
wire    regslice_both_INPUT_r_V_user_V_U_vld_out;
wire    regslice_both_INPUT_r_V_user_V_U_ack_in;
wire    regslice_both_INPUT_r_V_last_V_U_apdone_blk;
wire   [0:0] INPUT_r_TLAST_int_regslice;
wire    regslice_both_INPUT_r_V_last_V_U_vld_out;
wire    regslice_both_INPUT_r_V_last_V_U_ack_in;
wire    regslice_both_INPUT_r_V_id_V_U_apdone_blk;
wire   [4:0] INPUT_r_TID_int_regslice;
wire    regslice_both_INPUT_r_V_id_V_U_vld_out;
wire    regslice_both_INPUT_r_V_id_V_U_ack_in;
wire    regslice_both_INPUT_r_V_dest_V_U_apdone_blk;
wire   [5:0] INPUT_r_TDEST_int_regslice;
wire    regslice_both_INPUT_r_V_dest_V_U_vld_out;
wire    regslice_both_INPUT_r_V_dest_V_U_ack_in;
reg    OUTPUT_r_TVALID_int_regslice;
wire    OUTPUT_r_TREADY_int_regslice;
wire    regslice_both_OUTPUT_r_V_data_V_U_vld_out;
wire    regslice_both_OUTPUT_r_V_keep_V_U_apdone_blk;
wire    regslice_both_OUTPUT_r_V_keep_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_r_V_keep_V_U_vld_out;
wire    regslice_both_OUTPUT_r_V_strb_V_U_apdone_blk;
wire    regslice_both_OUTPUT_r_V_strb_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_r_V_strb_V_U_vld_out;
wire    regslice_both_OUTPUT_r_V_user_V_U_apdone_blk;
wire    regslice_both_OUTPUT_r_V_user_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_r_V_user_V_U_vld_out;
wire    regslice_both_OUTPUT_r_V_last_V_U_apdone_blk;
reg   [0:0] OUTPUT_r_TLAST_int_regslice;
wire    regslice_both_OUTPUT_r_V_last_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_r_V_last_V_U_vld_out;
wire    regslice_both_OUTPUT_r_V_id_V_U_apdone_blk;
wire    regslice_both_OUTPUT_r_V_id_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_r_V_id_V_U_vld_out;
wire    regslice_both_OUTPUT_r_V_dest_V_U_apdone_blk;
wire    regslice_both_OUTPUT_r_V_dest_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_r_V_dest_V_U_vld_out;
reg    ap_condition_1170;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 52'd1;
#0 grp_guitar_effects_Pipeline_1_fu_341_ap_start_reg = 1'b0;
#0 grp_guitar_effects_Pipeline_2_fu_347_ap_start_reg = 1'b0;
#0 grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_start_reg = 1'b0;
end

guitar_effects_compression_buffer_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
compression_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(compression_buffer_address0),
    .ce0(compression_buffer_ce0),
    .we0(compression_buffer_we0),
    .d0(compression_buffer_d0),
    .q0(compression_buffer_q0)
);

guitar_effects_lpf_coefficients_V_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
lpf_coefficients_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lpf_coefficients_V_address0),
    .ce0(lpf_coefficients_V_ce0),
    .we0(lpf_coefficients_V_we0),
    .d0(1'd1),
    .q0(lpf_coefficients_V_q0)
);

guitar_effects_delay_buffer_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 44100 ),
    .AddressWidth( 16 ))
delay_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(delay_buffer_address0),
    .ce0(delay_buffer_ce0),
    .we0(delay_buffer_we0),
    .d0(delay_buffer_d0),
    .q0(delay_buffer_q0)
);

guitar_effects_guitar_effects_Pipeline_1 grp_guitar_effects_Pipeline_1_fu_341(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_guitar_effects_Pipeline_1_fu_341_ap_start),
    .ap_done(grp_guitar_effects_Pipeline_1_fu_341_ap_done),
    .ap_idle(grp_guitar_effects_Pipeline_1_fu_341_ap_idle),
    .ap_ready(grp_guitar_effects_Pipeline_1_fu_341_ap_ready),
    .compression_buffer_address0(grp_guitar_effects_Pipeline_1_fu_341_compression_buffer_address0),
    .compression_buffer_ce0(grp_guitar_effects_Pipeline_1_fu_341_compression_buffer_ce0),
    .compression_buffer_we0(grp_guitar_effects_Pipeline_1_fu_341_compression_buffer_we0),
    .compression_buffer_d0(grp_guitar_effects_Pipeline_1_fu_341_compression_buffer_d0)
);

guitar_effects_guitar_effects_Pipeline_2 grp_guitar_effects_Pipeline_2_fu_347(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_guitar_effects_Pipeline_2_fu_347_ap_start),
    .ap_done(grp_guitar_effects_Pipeline_2_fu_347_ap_done),
    .ap_idle(grp_guitar_effects_Pipeline_2_fu_347_ap_idle),
    .ap_ready(grp_guitar_effects_Pipeline_2_fu_347_ap_ready),
    .delay_buffer_address0(grp_guitar_effects_Pipeline_2_fu_347_delay_buffer_address0),
    .delay_buffer_ce0(grp_guitar_effects_Pipeline_2_fu_347_delay_buffer_ce0),
    .delay_buffer_we0(grp_guitar_effects_Pipeline_2_fu_347_delay_buffer_we0),
    .delay_buffer_d0(grp_guitar_effects_Pipeline_2_fu_347_delay_buffer_d0)
);

guitar_effects_guitar_effects_Pipeline_LPF_Loop grp_guitar_effects_Pipeline_LPF_Loop_fu_353(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_start),
    .ap_done(grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_done),
    .ap_idle(grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_idle),
    .ap_ready(grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_ready),
    .current_level(current_level_fu_152),
    .compression_buffer_address0(grp_guitar_effects_Pipeline_LPF_Loop_fu_353_compression_buffer_address0),
    .compression_buffer_ce0(grp_guitar_effects_Pipeline_LPF_Loop_fu_353_compression_buffer_ce0),
    .compression_buffer_q0(compression_buffer_q0),
    .lpf_coefficients_V_address0(grp_guitar_effects_Pipeline_LPF_Loop_fu_353_lpf_coefficients_V_address0),
    .lpf_coefficients_V_ce0(grp_guitar_effects_Pipeline_LPF_Loop_fu_353_lpf_coefficients_V_ce0),
    .lpf_coefficients_V_q0(lpf_coefficients_V_q0),
    .p_out(grp_guitar_effects_Pipeline_LPF_Loop_fu_353_p_out),
    .p_out_ap_vld(grp_guitar_effects_Pipeline_LPF_Loop_fu_353_p_out_ap_vld)
);

guitar_effects_control_r_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_R_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_R_DATA_WIDTH ))
control_r_s_axi_U(
    .AWVALID(s_axi_control_r_AWVALID),
    .AWREADY(s_axi_control_r_AWREADY),
    .AWADDR(s_axi_control_r_AWADDR),
    .WVALID(s_axi_control_r_WVALID),
    .WREADY(s_axi_control_r_WREADY),
    .WDATA(s_axi_control_r_WDATA),
    .WSTRB(s_axi_control_r_WSTRB),
    .ARVALID(s_axi_control_r_ARVALID),
    .ARREADY(s_axi_control_r_ARREADY),
    .ARADDR(s_axi_control_r_ARADDR),
    .RVALID(s_axi_control_r_RVALID),
    .RREADY(s_axi_control_r_RREADY),
    .RDATA(s_axi_control_r_RDATA),
    .RRESP(s_axi_control_r_RRESP),
    .BVALID(s_axi_control_r_BVALID),
    .BREADY(s_axi_control_r_BREADY),
    .BRESP(s_axi_control_r_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .axilite_out(axilite_out),
    .axilite_out_ap_vld(axilite_out_ap_vld),
    .control(control),
    .distortion_threshold(distortion_threshold),
    .distortion_clip_factor(distortion_clip_factor),
    .compression_min_threshold(compression_min_threshold),
    .compression_max_threshold(compression_max_threshold),
    .compression_zero_threshold(compression_zero_threshold),
    .delay_mult(delay_mult),
    .delay_samples(delay_samples)
);

guitar_effects_srem_32ns_17ns_16_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 16 ))
srem_32ns_17ns_16_36_seq_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_404_ap_start),
    .done(grp_fu_404_ap_done),
    .din0(grp_fu_404_p0),
    .din1(grp_fu_404_p1),
    .ce(grp_fu_404_ce),
    .dout(grp_fu_404_p2)
);

guitar_effects_mul_32s_10s_42_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 42 ))
mul_32s_10s_42_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(r_V_3_reg_925),
    .din1(grp_fu_509_p1),
    .ce(1'b1),
    .dout(grp_fu_509_p2)
);

guitar_effects_mul_32s_10s_42_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 42 ))
mul_32s_10s_42_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(r_V_reg_930),
    .din1(grp_fu_517_p1),
    .ce(1'b1),
    .dout(grp_fu_517_p2)
);

guitar_effects_mul_32s_10s_42_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 42 ))
mul_32s_10s_42_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(r_V_7_reg_1001),
    .din1(grp_fu_698_p1),
    .ce(1'b1),
    .dout(grp_fu_698_p2)
);

guitar_effects_regslice_both #(
    .DataWidth( 32 ))
regslice_both_INPUT_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_r_TDATA),
    .vld_in(INPUT_r_TVALID),
    .ack_in(regslice_both_INPUT_r_V_data_V_U_ack_in),
    .data_out(INPUT_r_TDATA_int_regslice),
    .vld_out(INPUT_r_TVALID_int_regslice),
    .ack_out(INPUT_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_r_V_data_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 4 ))
regslice_both_INPUT_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_r_TKEEP),
    .vld_in(INPUT_r_TVALID),
    .ack_in(regslice_both_INPUT_r_V_keep_V_U_ack_in),
    .data_out(INPUT_r_TKEEP_int_regslice),
    .vld_out(regslice_both_INPUT_r_V_keep_V_U_vld_out),
    .ack_out(INPUT_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_r_V_keep_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 4 ))
regslice_both_INPUT_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_r_TSTRB),
    .vld_in(INPUT_r_TVALID),
    .ack_in(regslice_both_INPUT_r_V_strb_V_U_ack_in),
    .data_out(INPUT_r_TSTRB_int_regslice),
    .vld_out(regslice_both_INPUT_r_V_strb_V_U_vld_out),
    .ack_out(INPUT_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_r_V_strb_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 2 ))
regslice_both_INPUT_r_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_r_TUSER),
    .vld_in(INPUT_r_TVALID),
    .ack_in(regslice_both_INPUT_r_V_user_V_U_ack_in),
    .data_out(INPUT_r_TUSER_int_regslice),
    .vld_out(regslice_both_INPUT_r_V_user_V_U_vld_out),
    .ack_out(INPUT_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_r_V_user_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 1 ))
regslice_both_INPUT_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_r_TLAST),
    .vld_in(INPUT_r_TVALID),
    .ack_in(regslice_both_INPUT_r_V_last_V_U_ack_in),
    .data_out(INPUT_r_TLAST_int_regslice),
    .vld_out(regslice_both_INPUT_r_V_last_V_U_vld_out),
    .ack_out(INPUT_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_r_V_last_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 5 ))
regslice_both_INPUT_r_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_r_TID),
    .vld_in(INPUT_r_TVALID),
    .ack_in(regslice_both_INPUT_r_V_id_V_U_ack_in),
    .data_out(INPUT_r_TID_int_regslice),
    .vld_out(regslice_both_INPUT_r_V_id_V_U_vld_out),
    .ack_out(INPUT_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_r_V_id_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 6 ))
regslice_both_INPUT_r_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_r_TDEST),
    .vld_in(INPUT_r_TVALID),
    .ack_in(regslice_both_INPUT_r_V_dest_V_U_ack_in),
    .data_out(INPUT_r_TDEST_int_regslice),
    .vld_out(regslice_both_INPUT_r_V_dest_V_U_vld_out),
    .ack_out(INPUT_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_r_V_dest_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 32 ))
regslice_both_OUTPUT_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ap_phi_mux_tmp_int_phi_fu_332_p4),
    .vld_in(OUTPUT_r_TVALID_int_regslice),
    .ack_in(OUTPUT_r_TREADY_int_regslice),
    .data_out(OUTPUT_r_TDATA),
    .vld_out(regslice_both_OUTPUT_r_V_data_V_U_vld_out),
    .ack_out(OUTPUT_r_TREADY),
    .apdone_blk(regslice_both_OUTPUT_r_V_data_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 4 ))
regslice_both_OUTPUT_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_keep_V_reg_891),
    .vld_in(OUTPUT_r_TVALID_int_regslice),
    .ack_in(regslice_both_OUTPUT_r_V_keep_V_U_ack_in_dummy),
    .data_out(OUTPUT_r_TKEEP),
    .vld_out(regslice_both_OUTPUT_r_V_keep_V_U_vld_out),
    .ack_out(OUTPUT_r_TREADY),
    .apdone_blk(regslice_both_OUTPUT_r_V_keep_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 4 ))
regslice_both_OUTPUT_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_strb_V_reg_896),
    .vld_in(OUTPUT_r_TVALID_int_regslice),
    .ack_in(regslice_both_OUTPUT_r_V_strb_V_U_ack_in_dummy),
    .data_out(OUTPUT_r_TSTRB),
    .vld_out(regslice_both_OUTPUT_r_V_strb_V_U_vld_out),
    .ack_out(OUTPUT_r_TREADY),
    .apdone_blk(regslice_both_OUTPUT_r_V_strb_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 2 ))
regslice_both_OUTPUT_r_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_user_V_reg_901),
    .vld_in(OUTPUT_r_TVALID_int_regslice),
    .ack_in(regslice_both_OUTPUT_r_V_user_V_U_ack_in_dummy),
    .data_out(OUTPUT_r_TUSER),
    .vld_out(regslice_both_OUTPUT_r_V_user_V_U_vld_out),
    .ack_out(OUTPUT_r_TREADY),
    .apdone_blk(regslice_both_OUTPUT_r_V_user_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 1 ))
regslice_both_OUTPUT_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(OUTPUT_r_TLAST_int_regslice),
    .vld_in(OUTPUT_r_TVALID_int_regslice),
    .ack_in(regslice_both_OUTPUT_r_V_last_V_U_ack_in_dummy),
    .data_out(OUTPUT_r_TLAST),
    .vld_out(regslice_both_OUTPUT_r_V_last_V_U_vld_out),
    .ack_out(OUTPUT_r_TREADY),
    .apdone_blk(regslice_both_OUTPUT_r_V_last_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 5 ))
regslice_both_OUTPUT_r_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_id_V_reg_910),
    .vld_in(OUTPUT_r_TVALID_int_regslice),
    .ack_in(regslice_both_OUTPUT_r_V_id_V_U_ack_in_dummy),
    .data_out(OUTPUT_r_TID),
    .vld_out(regslice_both_OUTPUT_r_V_id_V_U_vld_out),
    .ack_out(OUTPUT_r_TREADY),
    .apdone_blk(regslice_both_OUTPUT_r_V_id_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 6 ))
regslice_both_OUTPUT_r_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_dest_V_reg_915),
    .vld_in(OUTPUT_r_TVALID_int_regslice),
    .ack_in(regslice_both_OUTPUT_r_V_dest_V_U_ack_in_dummy),
    .data_out(OUTPUT_r_TDEST),
    .vld_out(regslice_both_OUTPUT_r_V_dest_V_U_vld_out),
    .ack_out(OUTPUT_r_TREADY),
    .apdone_blk(regslice_both_OUTPUT_r_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_guitar_effects_Pipeline_1_fu_341_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state1)) begin
            grp_guitar_effects_Pipeline_1_fu_341_ap_start_reg <= 1'b1;
        end else if ((grp_guitar_effects_Pipeline_1_fu_341_ap_ready == 1'b1)) begin
            grp_guitar_effects_Pipeline_1_fu_341_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_guitar_effects_Pipeline_2_fu_347_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state1)) begin
            grp_guitar_effects_Pipeline_2_fu_347_ap_start_reg <= 1'b1;
        end else if ((grp_guitar_effects_Pipeline_2_fu_347_ap_ready == 1'b1)) begin
            grp_guitar_effects_Pipeline_2_fu_347_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state43)) begin
            grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_start_reg <= 1'b1;
        end else if ((grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_ready == 1'b1)) begin
            grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        current_level_fu_152 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state45) & (tmp_1_reg_837 == 1'd1))) begin
        current_level_fu_152 <= grp_guitar_effects_Pipeline_LPF_Loop_fu_353_p_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (tmp_1_reg_837 == 1'd0))) begin
        empty_34_reg_298 <= empty_33_fu_649_p3;
    end else if (((1'b1 == ap_CS_fsm_state45) & (tmp_1_reg_837 == 1'd1))) begin
        empty_34_reg_298 <= or_ln78_fu_684_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (tmp_2_reg_841 == 1'd0))) begin
        empty_35_reg_318 <= ap_phi_mux_empty_34_phi_fu_301_p4;
    end else if ((~((1'b1 == ap_block_state50_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd0)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd1))) & (1'b1 == ap_CS_fsm_state50) & (tmp_2_reg_841 == 1'd1))) begin
        empty_35_reg_318 <= or_ln83_fu_754_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_fu_148 <= 32'd0;
    end else if ((~((1'b1 == ap_block_state50_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd0)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd1))) & (1'b1 == ap_CS_fsm_state50) & (tmp_last_V_reg_906 == 1'd0))) begin
        empty_fu_148 <= select_ln86_fu_767_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (tmp_1_reg_837 == 1'd0))) begin
        tmp_int_4_reg_308 <= result_4_reg_984;
    end else if (((1'b1 == ap_CS_fsm_state45) & (tmp_1_reg_837 == 1'd1))) begin
        tmp_int_4_reg_308 <= grp_guitar_effects_Pipeline_LPF_Loop_fu_353_p_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (tmp_2_reg_841 == 1'd0))) begin
        tmp_int_reg_328 <= ap_phi_mux_tmp_int_4_phi_fu_311_p4;
    end else if ((~((1'b1 == ap_block_state50_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd0)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd1))) & (1'b1 == ap_CS_fsm_state50) & (tmp_2_reg_841 == 1'd1))) begin
        tmp_int_reg_328 <= output_reg_1028;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        conv7_i_i_i300_reg_881 <= conv7_i_i_i300_fu_432_p1;
        conv7_i_i_i_reg_870 <= conv7_i_i_i_fu_420_p1;
        delay_buffer_addr_1_reg_876 <= idxprom_i_cast_fu_427_p1;
        negative_threshold_reg_865 <= negative_threshold_fu_415_p2;
        rev_reg_850 <= rev_fu_410_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        delay_mult_read_reg_799 <= delay_mult;
        delay_samples_read_reg_794 <= delay_samples;
        distortion_clip_factor_read_reg_804 <= distortion_clip_factor;
        distortion_threshold_read_reg_809 <= distortion_threshold;
        tmp_1_reg_837 <= control[32'd2];
        tmp_2_reg_841 <= control[32'd1];
        tmp_reg_830 <= control[32'd3];
        trunc_ln19_reg_825 <= trunc_ln19_fu_361_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        empty_33_reg_992 <= empty_33_fu_649_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        icmp_ln116_reg_920 <= icmp_ln116_fu_463_p2;
        or_ln118_reg_935 <= or_ln118_fu_501_p2;
        r_V_3_reg_925 <= r_V_3_fu_468_p2;
        r_V_reg_930 <= r_V_fu_473_p2;
        tmp_data_V_1_reg_886 <= INPUT_r_TDATA_int_regslice;
        tmp_dest_V_reg_915 <= INPUT_r_TDEST_int_regslice;
        tmp_id_V_reg_910 <= INPUT_r_TID_int_regslice;
        tmp_keep_V_reg_891 <= INPUT_r_TKEEP_int_regslice;
        tmp_last_V_reg_906 <= INPUT_r_TLAST_int_regslice;
        tmp_strb_V_reg_896 <= INPUT_r_TSTRB_int_regslice;
        tmp_user_V_reg_901 <= INPUT_r_TUSER_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        output_reg_1028 <= output_fu_748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (or_ln118_reg_935 == 1'd0))) begin
        r_V_10_reg_967 <= grp_fu_517_p2;
        r_V_9_reg_950 <= grp_fu_509_p2;
        ret_V_3_cast_reg_972 <= {{grp_fu_517_p2[39:8]}};
        ret_V_cast_reg_955 <= {{grp_fu_509_p2[39:8]}};
        trunc_ln1049_1_reg_979 <= trunc_ln1049_1_fu_546_p1;
        trunc_ln1049_reg_962 <= trunc_ln1049_fu_532_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        r_V_11_reg_1011 <= grp_fu_698_p2;
        ret_V_9_cast_reg_1016 <= {{grp_fu_698_p2[39:8]}};
        trunc_ln1049_2_reg_1023 <= trunc_ln1049_2_fu_713_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        r_V_7_reg_1001 <= delay_buffer_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        result_4_reg_984 <= result_4_fu_634_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        INPUT_r_TDATA_blk_n = INPUT_r_TVALID_int_regslice;
    end else begin
        INPUT_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) & (1'b1 == INPUT_r_TVALID_int_regslice))) begin
        INPUT_r_TREADY_int_regslice = 1'b1;
    end else begin
        INPUT_r_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52) | ((1'b1 == ap_CS_fsm_state50) & (tmp_last_V_reg_906 == 1'd0)) | ((1'b1 == ap_CS_fsm_state50) & (tmp_last_V_reg_906 == 1'd1)))) begin
        OUTPUT_r_TDATA_blk_n = OUTPUT_r_TREADY_int_regslice;
    end else begin
        OUTPUT_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1170)) begin
        if ((tmp_last_V_reg_906 == 1'd1)) begin
            OUTPUT_r_TLAST_int_regslice = 1'd1;
        end else if ((tmp_last_V_reg_906 == 1'd0)) begin
            OUTPUT_r_TLAST_int_regslice = 1'd0;
        end else begin
            OUTPUT_r_TLAST_int_regslice = 'bx;
        end
    end else begin
        OUTPUT_r_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state50_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd0)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd1))) & (1'b1 == ap_CS_fsm_state50) & (tmp_last_V_reg_906 == 1'd0)) | (~((1'b1 == ap_block_state50_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd0)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd1))) & (1'b1 == ap_CS_fsm_state50) & (tmp_last_V_reg_906 == 1'd1)))) begin
        OUTPUT_r_TVALID_int_regslice = 1'b1;
    end else begin
        OUTPUT_r_TVALID_int_regslice = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

assign ap_ST_fsm_state1_blk = 1'b0;

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

always @ (*) begin
    if ((1'b0 == INPUT_r_TVALID_int_regslice)) begin
        ap_ST_fsm_state38_blk = 1'b1;
    end else begin
        ap_ST_fsm_state38_blk = 1'b0;
    end
end

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

always @ (*) begin
    if ((grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_done == 1'b0)) begin
        ap_ST_fsm_state44_blk = 1'b1;
    end else begin
        ap_ST_fsm_state44_blk = 1'b0;
    end
end

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_block_state50_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd0)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd1)))) begin
        ap_ST_fsm_state50_blk = 1'b1;
    end else begin
        ap_ST_fsm_state50_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == OUTPUT_r_TREADY_int_regslice)) begin
        ap_ST_fsm_state51_blk = 1'b1;
    end else begin
        ap_ST_fsm_state51_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == OUTPUT_r_TREADY_int_regslice) | (regslice_both_OUTPUT_r_V_data_V_U_apdone_blk == 1'b1))) begin
        ap_ST_fsm_state52_blk = 1'b1;
    end else begin
        ap_ST_fsm_state52_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) & (tmp_1_reg_837 == 1'd1))) begin
        ap_phi_mux_empty_34_phi_fu_301_p4 = or_ln78_fu_684_p2;
    end else begin
        ap_phi_mux_empty_34_phi_fu_301_p4 = empty_34_reg_298;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) & (tmp_2_reg_841 == 1'd1))) begin
        ap_phi_mux_empty_35_phi_fu_321_p4 = or_ln83_fu_754_p2;
    end else begin
        ap_phi_mux_empty_35_phi_fu_321_p4 = empty_35_reg_318;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) & (tmp_1_reg_837 == 1'd1))) begin
        ap_phi_mux_tmp_int_4_phi_fu_311_p4 = grp_guitar_effects_Pipeline_LPF_Loop_fu_353_p_out;
    end else begin
        ap_phi_mux_tmp_int_4_phi_fu_311_p4 = tmp_int_4_reg_308;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) & (tmp_2_reg_841 == 1'd1))) begin
        ap_phi_mux_tmp_int_phi_fu_332_p4 = output_reg_1028;
    end else begin
        ap_phi_mux_tmp_int_phi_fu_332_p4 = tmp_int_reg_328;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state50_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd0)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd1))) & (1'b1 == ap_CS_fsm_state50) & (tmp_last_V_reg_906 == 1'd1))) begin
        axilite_out_ap_vld = 1'b1;
    end else begin
        axilite_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        compression_buffer_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        compression_buffer_address0 = grp_guitar_effects_Pipeline_LPF_Loop_fu_353_compression_buffer_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        compression_buffer_address0 = grp_guitar_effects_Pipeline_1_fu_341_compression_buffer_address0;
    end else begin
        compression_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        compression_buffer_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        compression_buffer_ce0 = grp_guitar_effects_Pipeline_LPF_Loop_fu_353_compression_buffer_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        compression_buffer_ce0 = grp_guitar_effects_Pipeline_1_fu_341_compression_buffer_ce0;
    end else begin
        compression_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        compression_buffer_d0 = abs_in_1_fu_668_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        compression_buffer_d0 = grp_guitar_effects_Pipeline_1_fu_341_compression_buffer_d0;
    end else begin
        compression_buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) & (tmp_1_reg_837 == 1'd1))) begin
        compression_buffer_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        compression_buffer_we0 = grp_guitar_effects_Pipeline_1_fu_341_compression_buffer_we0;
    end else begin
        compression_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        delay_buffer_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        delay_buffer_address0 = delay_buffer_addr_1_reg_876;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        delay_buffer_address0 = grp_guitar_effects_Pipeline_2_fu_347_delay_buffer_address0;
    end else begin
        delay_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (~((1'b1 == ap_block_state50_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd0)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd1))) & (1'b1 == ap_CS_fsm_state50)))) begin
        delay_buffer_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        delay_buffer_ce0 = grp_guitar_effects_Pipeline_2_fu_347_delay_buffer_ce0;
    end else begin
        delay_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        delay_buffer_d0 = output_reg_1028;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        delay_buffer_d0 = grp_guitar_effects_Pipeline_2_fu_347_delay_buffer_d0;
    end else begin
        delay_buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state50_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd0)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd1))) & (1'b1 == ap_CS_fsm_state50) & (tmp_2_reg_841 == 1'd1))) begin
        delay_buffer_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        delay_buffer_we0 = grp_guitar_effects_Pipeline_2_fu_347_delay_buffer_we0;
    end else begin
        delay_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_404_ap_start = 1'b1;
    end else begin
        grp_fu_404_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_fu_404_ce = 1'b0;
    end else begin
        grp_fu_404_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        lpf_coefficients_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        lpf_coefficients_V_address0 = grp_guitar_effects_Pipeline_LPF_Loop_fu_353_lpf_coefficients_V_address0;
    end else begin
        lpf_coefficients_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        lpf_coefficients_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        lpf_coefficients_V_ce0 = grp_guitar_effects_Pipeline_LPF_Loop_fu_353_lpf_coefficients_V_ce0;
    end else begin
        lpf_coefficients_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        lpf_coefficients_V_we0 = 1'b1;
    end else begin
        lpf_coefficients_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (1'b1 == INPUT_r_TVALID_int_regslice))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((1'b1 == ap_CS_fsm_state42) & (tmp_1_reg_837 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            if (((grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (tmp_2_reg_841 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            if ((~((1'b1 == ap_block_state50_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd0)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd1))) & (1'b1 == ap_CS_fsm_state50) & (tmp_last_V_reg_906 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else if ((~((1'b1 == ap_block_state50_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd0)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd1))) & (1'b1 == ap_CS_fsm_state50) & (tmp_last_V_reg_906 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((1'b1 == ap_CS_fsm_state51) & (1'b1 == OUTPUT_r_TREADY_int_regslice))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            if ((~((1'b0 == OUTPUT_r_TREADY_int_regslice) | (regslice_both_OUTPUT_r_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign INPUT_r_TREADY = regslice_both_INPUT_r_V_data_V_U_ack_in;

assign OUTPUT_r_TVALID = regslice_both_OUTPUT_r_V_data_V_U_vld_out;

assign abs_in_1_fu_668_p3 = ((tmp_5_fu_656_p3[0:0] == 1'b1) ? sub_ln131_fu_663_p2 : result_4_reg_984);

assign and_ln116_fu_622_p2 = (tmp_reg_830 & icmp_ln116_reg_920);

assign and_ln118_fu_495_p2 = (xor_ln118_fu_489_p2 & xor_ln116_fu_478_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_guitar_effects_Pipeline_2_fu_347_ap_done == 1'b0) | (grp_guitar_effects_Pipeline_1_fu_341_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state50 = (((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd0)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd1)));
end

always @ (*) begin
    ap_block_state50_io = (((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd0)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd1)));
end

always @ (*) begin
    ap_block_state52 = ((1'b0 == OUTPUT_r_TREADY_int_regslice) | (regslice_both_OUTPUT_r_V_data_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_condition_1170 = (~(((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd0)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_906 == 1'd1))) & (1'b1 == ap_CS_fsm_state50));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign axilite_out = ((trunc_ln19_reg_825[0:0] == 1'b1) ? or_ln88_fu_761_p2 : ap_phi_mux_empty_35_phi_fu_321_p4);

assign conv7_i_i_i300_fu_432_p1 = $signed(delay_mult_read_reg_799);

assign conv7_i_i_i_fu_420_p1 = $signed(distortion_clip_factor_read_reg_804);

assign empty_31_fu_423_p1 = grp_fu_404_p2[15:0];

assign empty_33_fu_649_p3 = ((tmp_reg_830[0:0] == 1'b1) ? or_ln73_fu_643_p2 : empty_fu_148);

assign grp_fu_404_p0 = (32'd0 - delay_samples_read_reg_794);

assign grp_fu_404_p1 = 32'd44100;

assign grp_fu_509_p1 = conv7_i_i_i_reg_870;

assign grp_fu_517_p1 = conv7_i_i_i_reg_870;

assign grp_fu_698_p1 = conv7_i_i_i300_reg_881;

assign grp_guitar_effects_Pipeline_1_fu_341_ap_start = grp_guitar_effects_Pipeline_1_fu_341_ap_start_reg;

assign grp_guitar_effects_Pipeline_2_fu_347_ap_start = grp_guitar_effects_Pipeline_2_fu_347_ap_start_reg;

assign grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_start = grp_guitar_effects_Pipeline_LPF_Loop_fu_353_ap_start_reg;

assign icmp_ln1049_1_fu_593_p2 = ((trunc_ln1049_1_reg_979 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1049_2_fu_724_p2 = ((trunc_ln1049_2_reg_1023 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1049_fu_557_p2 = ((trunc_ln1049_reg_962 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_463_p2 = (($signed(INPUT_r_TDATA_int_regslice) > $signed(distortion_threshold_read_reg_809)) ? 1'b1 : 1'b0);

assign icmp_ln118_fu_484_p2 = (($signed(INPUT_r_TDATA_int_regslice) < $signed(negative_threshold_reg_865)) ? 1'b1 : 1'b0);

assign idxprom_i_cast_fu_427_p1 = empty_31_fu_423_p1;

assign negative_threshold_fu_415_p2 = (32'd0 - distortion_threshold_read_reg_809);

assign or_ln118_fu_501_p2 = (rev_reg_850 | and_ln118_fu_495_p2);

assign or_ln73_fu_643_p2 = (empty_fu_148 | 32'd8);

assign or_ln78_fu_684_p2 = (empty_33_reg_992 | 32'd4);

assign or_ln83_fu_754_p2 = (empty_34_reg_298 | 32'd2);

assign or_ln88_fu_761_p2 = (ap_phi_mux_empty_35_phi_fu_321_p4 | 32'd1);

assign output_fu_748_p2 = (ret_V_10_fu_741_p3 + tmp_int_4_reg_308);

assign p_Result_1_fu_586_p3 = r_V_10_reg_967[32'd41];

assign p_Result_2_fu_717_p3 = r_V_11_reg_1011[32'd41];

assign p_Result_s_fu_550_p3 = r_V_9_reg_950[32'd41];

assign r_V_3_fu_468_p2 = (INPUT_r_TDATA_int_regslice - distortion_threshold_read_reg_809);

assign r_V_fu_473_p2 = (INPUT_r_TDATA_int_regslice + distortion_threshold_read_reg_809);

assign result_1_fu_617_p2 = (ret_V_8_fu_610_p3 - distortion_threshold_read_reg_809);

assign result_2_fu_626_p3 = ((and_ln116_fu_622_p2[0:0] == 1'b1) ? result_fu_581_p2 : result_1_fu_617_p2);

assign result_4_fu_634_p3 = ((or_ln118_reg_935[0:0] == 1'b1) ? tmp_data_V_1_reg_886 : result_2_fu_626_p3);

assign result_fu_581_p2 = (ret_V_4_fu_574_p3 + distortion_threshold_read_reg_809);

assign ret_V_10_fu_741_p3 = ((p_Result_2_fu_717_p3[0:0] == 1'b1) ? select_ln1048_2_fu_734_p3 : ret_V_9_cast_reg_1016);

assign ret_V_4_fu_574_p3 = ((p_Result_s_fu_550_p3[0:0] == 1'b1) ? select_ln1048_fu_567_p3 : ret_V_cast_reg_955);

assign ret_V_5_fu_598_p2 = (ret_V_3_cast_reg_972 + 32'd1);

assign ret_V_8_fu_610_p3 = ((p_Result_1_fu_586_p3[0:0] == 1'b1) ? select_ln1048_1_fu_603_p3 : ret_V_3_cast_reg_972);

assign ret_V_9_fu_729_p2 = (ret_V_9_cast_reg_1016 + 32'd1);

assign ret_V_fu_562_p2 = (ret_V_cast_reg_955 + 32'd1);

assign rev_fu_410_p2 = (tmp_reg_830 ^ 1'd1);

assign select_ln1048_1_fu_603_p3 = ((icmp_ln1049_1_fu_593_p2[0:0] == 1'b1) ? ret_V_3_cast_reg_972 : ret_V_5_fu_598_p2);

assign select_ln1048_2_fu_734_p3 = ((icmp_ln1049_2_fu_724_p2[0:0] == 1'b1) ? ret_V_9_cast_reg_1016 : ret_V_9_fu_729_p2);

assign select_ln1048_fu_567_p3 = ((icmp_ln1049_fu_557_p2[0:0] == 1'b1) ? ret_V_cast_reg_955 : ret_V_fu_562_p2);

assign select_ln86_fu_767_p3 = ((trunc_ln19_reg_825[0:0] == 1'b1) ? or_ln88_fu_761_p2 : ap_phi_mux_empty_35_phi_fu_321_p4);

assign sub_ln131_fu_663_p2 = (32'd0 - result_4_reg_984);

assign tmp_5_fu_656_p3 = result_4_reg_984[32'd31];

assign trunc_ln1049_1_fu_546_p1 = grp_fu_517_p2[7:0];

assign trunc_ln1049_2_fu_713_p1 = grp_fu_698_p2[7:0];

assign trunc_ln1049_fu_532_p1 = grp_fu_509_p2[7:0];

assign trunc_ln19_fu_361_p1 = control[0:0];

assign xor_ln116_fu_478_p2 = (icmp_ln116_fu_463_p2 ^ 1'd1);

assign xor_ln118_fu_489_p2 = (icmp_ln118_fu_484_p2 ^ 1'd1);


reg find_kernel_block = 0;
// synthesis translate_off
`include "guitar_effects_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //guitar_effects

