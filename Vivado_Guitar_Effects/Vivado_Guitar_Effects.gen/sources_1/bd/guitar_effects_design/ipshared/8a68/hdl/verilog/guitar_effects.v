// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="guitar_effects_guitar_effects,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=267,HLS_SYN_DSP=0,HLS_SYN_FF=14698,HLS_SYN_LUT=21635,HLS_VERSION=2022_1}" *)

module guitar_effects (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        INPUT_r_TDATA,
        INPUT_r_TVALID,
        INPUT_r_TREADY,
        INPUT_r_TKEEP,
        INPUT_r_TSTRB,
        INPUT_r_TUSER,
        INPUT_r_TLAST,
        INPUT_r_TID,
        INPUT_r_TDEST,
        OUTPUT_r_TDATA,
        OUTPUT_r_TVALID,
        OUTPUT_r_TREADY,
        OUTPUT_r_TKEEP,
        OUTPUT_r_TSTRB,
        OUTPUT_r_TUSER,
        OUTPUT_r_TLAST,
        OUTPUT_r_TID,
        OUTPUT_r_TDEST,
        s_axi_control_r_AWVALID,
        s_axi_control_r_AWREADY,
        s_axi_control_r_AWADDR,
        s_axi_control_r_WVALID,
        s_axi_control_r_WREADY,
        s_axi_control_r_WDATA,
        s_axi_control_r_WSTRB,
        s_axi_control_r_ARVALID,
        s_axi_control_r_ARREADY,
        s_axi_control_r_ARADDR,
        s_axi_control_r_RVALID,
        s_axi_control_r_RREADY,
        s_axi_control_r_RDATA,
        s_axi_control_r_RRESP,
        s_axi_control_r_BVALID,
        s_axi_control_r_BREADY,
        s_axi_control_r_BRESP
);

parameter    ap_ST_fsm_state1 = 169'd1;
parameter    ap_ST_fsm_state2 = 169'd2;
parameter    ap_ST_fsm_state3 = 169'd4;
parameter    ap_ST_fsm_state4 = 169'd8;
parameter    ap_ST_fsm_state5 = 169'd16;
parameter    ap_ST_fsm_state6 = 169'd32;
parameter    ap_ST_fsm_state7 = 169'd64;
parameter    ap_ST_fsm_state8 = 169'd128;
parameter    ap_ST_fsm_state9 = 169'd256;
parameter    ap_ST_fsm_state10 = 169'd512;
parameter    ap_ST_fsm_state11 = 169'd1024;
parameter    ap_ST_fsm_state12 = 169'd2048;
parameter    ap_ST_fsm_state13 = 169'd4096;
parameter    ap_ST_fsm_state14 = 169'd8192;
parameter    ap_ST_fsm_state15 = 169'd16384;
parameter    ap_ST_fsm_state16 = 169'd32768;
parameter    ap_ST_fsm_state17 = 169'd65536;
parameter    ap_ST_fsm_state18 = 169'd131072;
parameter    ap_ST_fsm_state19 = 169'd262144;
parameter    ap_ST_fsm_state20 = 169'd524288;
parameter    ap_ST_fsm_state21 = 169'd1048576;
parameter    ap_ST_fsm_state22 = 169'd2097152;
parameter    ap_ST_fsm_state23 = 169'd4194304;
parameter    ap_ST_fsm_state24 = 169'd8388608;
parameter    ap_ST_fsm_state25 = 169'd16777216;
parameter    ap_ST_fsm_state26 = 169'd33554432;
parameter    ap_ST_fsm_state27 = 169'd67108864;
parameter    ap_ST_fsm_state28 = 169'd134217728;
parameter    ap_ST_fsm_state29 = 169'd268435456;
parameter    ap_ST_fsm_state30 = 169'd536870912;
parameter    ap_ST_fsm_state31 = 169'd1073741824;
parameter    ap_ST_fsm_state32 = 169'd2147483648;
parameter    ap_ST_fsm_state33 = 169'd4294967296;
parameter    ap_ST_fsm_state34 = 169'd8589934592;
parameter    ap_ST_fsm_state35 = 169'd17179869184;
parameter    ap_ST_fsm_state36 = 169'd34359738368;
parameter    ap_ST_fsm_state37 = 169'd68719476736;
parameter    ap_ST_fsm_state38 = 169'd137438953472;
parameter    ap_ST_fsm_state39 = 169'd274877906944;
parameter    ap_ST_fsm_state40 = 169'd549755813888;
parameter    ap_ST_fsm_state41 = 169'd1099511627776;
parameter    ap_ST_fsm_state42 = 169'd2199023255552;
parameter    ap_ST_fsm_state43 = 169'd4398046511104;
parameter    ap_ST_fsm_state44 = 169'd8796093022208;
parameter    ap_ST_fsm_state45 = 169'd17592186044416;
parameter    ap_ST_fsm_state46 = 169'd35184372088832;
parameter    ap_ST_fsm_state47 = 169'd70368744177664;
parameter    ap_ST_fsm_state48 = 169'd140737488355328;
parameter    ap_ST_fsm_state49 = 169'd281474976710656;
parameter    ap_ST_fsm_state50 = 169'd562949953421312;
parameter    ap_ST_fsm_state51 = 169'd1125899906842624;
parameter    ap_ST_fsm_state52 = 169'd2251799813685248;
parameter    ap_ST_fsm_state53 = 169'd4503599627370496;
parameter    ap_ST_fsm_state54 = 169'd9007199254740992;
parameter    ap_ST_fsm_state55 = 169'd18014398509481984;
parameter    ap_ST_fsm_state56 = 169'd36028797018963968;
parameter    ap_ST_fsm_state57 = 169'd72057594037927936;
parameter    ap_ST_fsm_state58 = 169'd144115188075855872;
parameter    ap_ST_fsm_state59 = 169'd288230376151711744;
parameter    ap_ST_fsm_state60 = 169'd576460752303423488;
parameter    ap_ST_fsm_state61 = 169'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 169'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 169'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 169'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 169'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 169'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 169'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 169'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 169'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 169'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 169'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 169'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 169'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 169'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 169'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 169'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 169'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 169'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 169'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 169'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 169'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 169'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 169'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 169'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 169'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 169'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 169'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 169'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 169'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 169'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 169'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 169'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 169'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 169'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 169'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 169'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 169'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 169'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 169'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 169'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 169'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 169'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 169'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 169'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 169'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 169'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 169'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 169'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 169'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 169'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 169'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 169'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 169'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 169'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 169'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 169'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 169'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 169'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 169'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 169'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 169'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 169'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 169'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 169'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 169'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 169'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 169'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 169'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 169'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 169'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 169'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 169'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 169'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 169'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 169'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 169'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 169'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 169'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 169'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 169'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 169'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 169'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 169'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 169'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 169'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 169'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 169'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 169'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 169'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 169'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 169'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 169'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 169'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 169'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 169'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 169'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 169'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 169'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 169'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 169'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 169'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 169'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 169'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 169'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 169'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 169'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 169'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 169'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 169'd374144419156711147060143317175368453031918731001856;
parameter    C_S_AXI_CONTROL_R_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_R_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_R_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input  [31:0] INPUT_r_TDATA;
input   INPUT_r_TVALID;
output   INPUT_r_TREADY;
input  [3:0] INPUT_r_TKEEP;
input  [3:0] INPUT_r_TSTRB;
input  [1:0] INPUT_r_TUSER;
input  [0:0] INPUT_r_TLAST;
input  [4:0] INPUT_r_TID;
input  [5:0] INPUT_r_TDEST;
output  [31:0] OUTPUT_r_TDATA;
output   OUTPUT_r_TVALID;
input   OUTPUT_r_TREADY;
output  [3:0] OUTPUT_r_TKEEP;
output  [3:0] OUTPUT_r_TSTRB;
output  [1:0] OUTPUT_r_TUSER;
output  [0:0] OUTPUT_r_TLAST;
output  [4:0] OUTPUT_r_TID;
output  [5:0] OUTPUT_r_TDEST;
input   s_axi_control_r_AWVALID;
output   s_axi_control_r_AWREADY;
input  [C_S_AXI_CONTROL_R_ADDR_WIDTH - 1:0] s_axi_control_r_AWADDR;
input   s_axi_control_r_WVALID;
output   s_axi_control_r_WREADY;
input  [C_S_AXI_CONTROL_R_DATA_WIDTH - 1:0] s_axi_control_r_WDATA;
input  [C_S_AXI_CONTROL_R_WSTRB_WIDTH - 1:0] s_axi_control_r_WSTRB;
input   s_axi_control_r_ARVALID;
output   s_axi_control_r_ARREADY;
input  [C_S_AXI_CONTROL_R_ADDR_WIDTH - 1:0] s_axi_control_r_ARADDR;
output   s_axi_control_r_RVALID;
input   s_axi_control_r_RREADY;
output  [C_S_AXI_CONTROL_R_DATA_WIDTH - 1:0] s_axi_control_r_RDATA;
output  [1:0] s_axi_control_r_RRESP;
output   s_axi_control_r_BVALID;
input   s_axi_control_r_BREADY;
output  [1:0] s_axi_control_r_BRESP;

 reg    ap_rst_n_inv;
reg    axilite_out_ap_vld;
wire   [7:0] control;
wire   [31:0] distortion_threshold;
wire   [7:0] distortion_clip_factor;
wire   [31:0] compression_min_threshold;
wire   [31:0] compression_max_threshold;
wire   [31:0] compression_zero_threshold;
wire   [31:0] delay_mult;
wire   [31:0] delay_samples;
wire   [31:0] tempo;
wire   [63:0] wah_coeffs;
reg    debug_output_ap_vld;
wire   [31:0] starting_sample;
reg    gmem_blk_n_AR;
(* fsm_encoding = "none" *) reg   [168:0] ap_CS_fsm;
wire    ap_CS_fsm_state5;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_state12;
reg    INPUT_r_TDATA_blk_n;
wire    ap_CS_fsm_state14;
reg    OUTPUT_r_TDATA_blk_n;
wire    ap_CS_fsm_state167;
reg   [0:0] tmp_last_V_reg_1955;
wire    ap_CS_fsm_state168;
wire    ap_CS_fsm_state169;
wire   [31:0] grp_fu_709_p1;
reg   [31:0] reg_719;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state108;
wire    ap_CS_fsm_state157;
wire   [31:0] grp_fu_705_p2;
reg   [31:0] reg_725;
wire   [31:0] grp_fu_701_p2;
reg   [31:0] reg_730;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state112;
wire    ap_CS_fsm_state161;
reg   [31:0] starting_sample_read_reg_1733;
wire    ap_CS_fsm_state1;
reg   [63:0] wah_coeffs_read_reg_1738;
reg   [31:0] tempo_read_reg_1744;
reg   [31:0] delay_samples_read_reg_1749;
reg   [31:0] delay_mult_read_reg_1754;
reg   [31:0] compression_zero_threshold_read_reg_1759;
reg   [31:0] compression_max_threshold_read_reg_1764;
reg   [31:0] compression_min_threshold_read_reg_1770;
reg   [7:0] distortion_clip_factor_read_reg_1777;
reg   [31:0] distortion_threshold_read_reg_1782;
reg   [7:0] control_read_reg_1792;
wire   [0:0] trunc_ln23_fu_734_p1;
reg   [0:0] trunc_ln23_reg_1805;
reg   [0:0] tmp_reg_1884;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln82_fu_811_p2;
reg   [0:0] tmp_23_reg_1888;
reg   [0:0] tmp_24_reg_1892;
reg   [31:0] gmem_addr_read_reg_1902;
wire   [31:0] negative_threshold_fu_898_p2;
reg   [31:0] negative_threshold_reg_1907;
wire    ap_CS_fsm_state13;
wire  signed [39:0] conv7_i_i_i_fu_903_p1;
reg  signed [39:0] conv7_i_i_i_reg_1912;
reg   [31:0] conv18_i_reg_1918;
wire   [31:0] grp_fu_712_p1;
reg   [31:0] conv30_i_reg_1923;
reg   [3:0] tmp_keep_V_reg_1940;
reg   [3:0] tmp_strb_V_reg_1945;
reg   [1:0] tmp_user_V_reg_1950;
reg   [4:0] tmp_id_V_reg_1959;
reg   [5:0] tmp_dest_V_reg_1964;
wire   [31:0] or_ln102_fu_944_p2;
reg   [31:0] or_ln102_reg_1969;
wire   [31:0] r_V_fu_960_p2;
reg  signed [31:0] r_V_reg_1985;
wire   [0:0] icmp_ln147_fu_950_p2;
wire   [0:0] icmp_ln149_fu_955_p2;
wire   [31:0] r_V_25_fu_965_p2;
reg  signed [31:0] r_V_25_reg_1990;
wire    ap_CS_fsm_state15;
wire   [39:0] grp_fu_973_p2;
reg   [39:0] r_V_35_reg_2000;
wire    ap_CS_fsm_state16;
reg   [31:0] ret_V_9_cast_reg_2005;
wire   [6:0] trunc_ln1049_1_fu_988_p1;
reg   [6:0] trunc_ln1049_1_reg_2012;
wire   [31:0] result_1_fu_1023_p2;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire   [39:0] grp_fu_1031_p2;
reg   [39:0] r_V_34_reg_2027;
wire    ap_CS_fsm_state19;
reg   [31:0] ret_V_cast_reg_2032;
wire   [6:0] trunc_ln1049_fu_1046_p1;
reg   [6:0] trunc_ln1049_reg_2039;
wire   [31:0] result_fu_1081_p2;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire   [31:0] grp_fu_1123_p2;
reg   [31:0] compression_buffer_index_1_reg_2054;
wire    ap_CS_fsm_state56;
wire   [9:0] trunc_ln67_fu_1129_p1;
reg   [9:0] trunc_ln67_reg_2062;
wire   [0:0] icmp_ln180_fu_1133_p2;
reg   [0:0] icmp_ln180_reg_2067;
wire    ap_CS_fsm_state58;
wire   [31:0] or_ln107_fu_1139_p2;
reg   [31:0] or_ln107_reg_2072;
wire    ap_CS_fsm_state59;
wire   [31:0] current_level_fu_1148_p3;
wire   [0:0] icmp_ln188_fu_1155_p2;
reg   [0:0] icmp_ln188_reg_2089;
wire   [0:0] icmp_ln198_fu_1160_p2;
reg   [0:0] icmp_ln198_reg_2093;
wire   [0:0] and_ln197_1_fu_1182_p2;
reg   [0:0] and_ln197_1_reg_2097;
reg   [0:0] p_Result_51_reg_2101;
wire    ap_CS_fsm_state85;
wire   [22:0] p_Result_52_fu_1226_p1;
reg   [22:0] p_Result_52_reg_2106;
wire   [0:0] isNeg_3_fu_1240_p3;
reg   [0:0] isNeg_3_reg_2111;
wire   [8:0] ush_3_fu_1258_p3;
reg   [8:0] ush_3_reg_2116;
wire   [31:0] val_2_fu_1320_p3;
reg   [31:0] val_2_reg_2121;
wire    ap_CS_fsm_state86;
reg   [31:0] delay_buffer_index_load_reg_2127;
wire    ap_CS_fsm_state87;
reg   [0:0] p_Result_49_reg_2142;
wire    ap_CS_fsm_state113;
wire   [22:0] p_Result_50_fu_1399_p1;
reg   [22:0] p_Result_50_reg_2147;
wire   [0:0] isNeg_fu_1413_p3;
reg   [0:0] isNeg_reg_2152;
wire   [8:0] ush_fu_1431_p3;
reg   [8:0] ush_reg_2157;
wire   [31:0] val_fu_1493_p3;
reg   [31:0] val_reg_2162;
wire    ap_CS_fsm_state114;
wire   [16:0] grp_fu_1359_p2;
reg   [16:0] srem_ln216_reg_2168;
wire    ap_CS_fsm_state149;
wire    ap_CS_fsm_state150;
wire   [31:0] delay_buffer_q0;
reg   [31:0] delay_buffer_load_reg_2178;
wire    ap_CS_fsm_state151;
wire   [31:0] data_V_3_fu_1513_p1;
reg   [31:0] data_V_3_reg_2183;
wire    ap_CS_fsm_state162;
wire   [22:0] p_Result_54_fu_1527_p1;
reg   [22:0] p_Result_54_reg_2188;
wire   [0:0] isNeg_4_fu_1541_p3;
reg   [0:0] isNeg_4_reg_2193;
wire   [8:0] ush_4_fu_1559_p3;
reg   [8:0] ush_4_reg_2198;
wire   [31:0] val_3_fu_1621_p3;
reg   [31:0] val_3_reg_2203;
wire    ap_CS_fsm_state163;
wire   [31:0] result_V_19_fu_1628_p2;
reg   [31:0] result_V_19_reg_2208;
wire   [31:0] or_ln112_fu_1634_p2;
wire    ap_CS_fsm_state164;
wire   [31:0] output_fu_1653_p2;
wire   [30:0] trunc_ln76_fu_1668_p1;
reg   [30:0] trunc_ln76_reg_2227;
wire    ap_CS_fsm_state165;
reg   [31:0] tmp_int_3_reg_2232;
wire    ap_CS_fsm_state166;
reg   [31:0] wah_buffer_index_reg_2237;
reg   [31:0] debug_output_ret_reg_2242;
reg   [8:0] compression_buffer_address0;
reg    compression_buffer_ce0;
reg    compression_buffer_we0;
reg   [31:0] compression_buffer_d0;
wire   [31:0] compression_buffer_q0;
reg   [16:0] delay_buffer_address0;
reg    delay_buffer_ce0;
reg    delay_buffer_we0;
reg   [31:0] delay_buffer_d0;
reg   [6:0] wah_values_buffer_address0;
reg    wah_values_buffer_ce0;
reg    wah_values_buffer_we0;
reg   [31:0] wah_values_buffer_d0;
wire   [31:0] wah_values_buffer_q0;
wire    grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_start;
wire    grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_done;
wire    grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_idle;
wire    grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_ready;
wire   [8:0] grp_guitar_effects_Pipeline_LPF_Loop_fu_667_compression_buffer_address0;
wire    grp_guitar_effects_Pipeline_LPF_Loop_fu_667_compression_buffer_ce0;
wire   [31:0] grp_guitar_effects_Pipeline_LPF_Loop_fu_667_p_out;
wire    grp_guitar_effects_Pipeline_LPF_Loop_fu_667_p_out_ap_vld;
wire   [31:0] grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_2247_p_din0;
wire   [31:0] grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_2247_p_din1;
wire   [1:0] grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_2247_p_opcode;
wire    grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_2247_p_ce;
wire   [31:0] grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_701_p_din0;
wire   [31:0] grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_701_p_din1;
wire    grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_701_p_ce;
wire   [31:0] grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_709_p_din0;
wire    grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_709_p_ce;
wire    grp_wah_fu_676_ap_start;
wire    grp_wah_fu_676_ap_done;
wire    grp_wah_fu_676_ap_idle;
wire    grp_wah_fu_676_ap_ready;
wire   [6:0] grp_wah_fu_676_wah_values_buffer_address0;
wire    grp_wah_fu_676_wah_values_buffer_ce0;
wire    grp_wah_fu_676_wah_values_buffer_we0;
wire   [31:0] grp_wah_fu_676_wah_values_buffer_d0;
wire    grp_wah_fu_676_m_axi_gmem_AWVALID;
wire   [63:0] grp_wah_fu_676_m_axi_gmem_AWADDR;
wire   [0:0] grp_wah_fu_676_m_axi_gmem_AWID;
wire   [31:0] grp_wah_fu_676_m_axi_gmem_AWLEN;
wire   [2:0] grp_wah_fu_676_m_axi_gmem_AWSIZE;
wire   [1:0] grp_wah_fu_676_m_axi_gmem_AWBURST;
wire   [1:0] grp_wah_fu_676_m_axi_gmem_AWLOCK;
wire   [3:0] grp_wah_fu_676_m_axi_gmem_AWCACHE;
wire   [2:0] grp_wah_fu_676_m_axi_gmem_AWPROT;
wire   [3:0] grp_wah_fu_676_m_axi_gmem_AWQOS;
wire   [3:0] grp_wah_fu_676_m_axi_gmem_AWREGION;
wire   [0:0] grp_wah_fu_676_m_axi_gmem_AWUSER;
wire    grp_wah_fu_676_m_axi_gmem_WVALID;
wire   [31:0] grp_wah_fu_676_m_axi_gmem_WDATA;
wire   [3:0] grp_wah_fu_676_m_axi_gmem_WSTRB;
wire    grp_wah_fu_676_m_axi_gmem_WLAST;
wire   [0:0] grp_wah_fu_676_m_axi_gmem_WID;
wire   [0:0] grp_wah_fu_676_m_axi_gmem_WUSER;
wire    grp_wah_fu_676_m_axi_gmem_ARVALID;
wire   [63:0] grp_wah_fu_676_m_axi_gmem_ARADDR;
wire   [0:0] grp_wah_fu_676_m_axi_gmem_ARID;
wire   [31:0] grp_wah_fu_676_m_axi_gmem_ARLEN;
wire   [2:0] grp_wah_fu_676_m_axi_gmem_ARSIZE;
wire   [1:0] grp_wah_fu_676_m_axi_gmem_ARBURST;
wire   [1:0] grp_wah_fu_676_m_axi_gmem_ARLOCK;
wire   [3:0] grp_wah_fu_676_m_axi_gmem_ARCACHE;
wire   [2:0] grp_wah_fu_676_m_axi_gmem_ARPROT;
wire   [3:0] grp_wah_fu_676_m_axi_gmem_ARQOS;
wire   [3:0] grp_wah_fu_676_m_axi_gmem_ARREGION;
wire   [0:0] grp_wah_fu_676_m_axi_gmem_ARUSER;
wire    grp_wah_fu_676_m_axi_gmem_RREADY;
wire    grp_wah_fu_676_m_axi_gmem_BREADY;
wire   [31:0] grp_wah_fu_676_ap_return_0;
wire   [31:0] grp_wah_fu_676_ap_return_1;
wire   [31:0] grp_wah_fu_676_ap_return_2;
wire   [31:0] grp_wah_fu_676_grp_fu_2247_p_din0;
wire   [31:0] grp_wah_fu_676_grp_fu_2247_p_din1;
wire   [1:0] grp_wah_fu_676_grp_fu_2247_p_opcode;
wire    grp_wah_fu_676_grp_fu_2247_p_ce;
wire   [31:0] grp_wah_fu_676_grp_fu_701_p_din0;
wire   [31:0] grp_wah_fu_676_grp_fu_701_p_din1;
wire    grp_wah_fu_676_grp_fu_701_p_ce;
wire   [31:0] grp_wah_fu_676_grp_fu_709_p_din0;
wire    grp_wah_fu_676_grp_fu_709_p_ce;
wire    gmem_AWREADY;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [63:0] gmem_ARADDR;
reg   [31:0] gmem_ARLEN;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire   [8:0] gmem_RFIFONUM;
wire    gmem_BVALID;
reg   [31:0] axilite_out_local_1_reg_505;
reg   [31:0] empty_82_reg_519;
wire   [31:0] ap_phi_mux_tmp_int_6_phi_fu_536_p8;
reg   [31:0] tmp_int_6_reg_533;
reg   [31:0] ap_phi_mux_axilite_out_local_2_phi_fu_550_p10;
reg   [31:0] axilite_out_local_2_reg_547;
reg   [31:0] ap_phi_mux_empty_83_phi_fu_567_p10;
reg   [31:0] empty_83_reg_564;
wire   [31:0] result_V_21_fu_1344_p3;
reg   [31:0] ap_phi_mux_tmp_int_phi_fu_584_p10;
reg   [31:0] tmp_int_reg_581;
wire   [31:0] result_V_22_fu_1332_p3;
reg   [31:0] axilite_out_local_3_reg_600;
reg   [31:0] empty_84_reg_611;
reg   [31:0] tmp_int_1_reg_622;
wire   [31:0] or_ln117_fu_1685_p2;
reg   [31:0] ap_phi_mux_axilite_out_local_4_phi_fu_636_p4;
reg   [31:0] axilite_out_local_4_reg_633;
reg    ap_block_state167;
reg    ap_block_state167_io;
reg   [31:0] ap_phi_mux_empty_85_phi_fu_647_p4;
reg   [31:0] empty_85_reg_644;
reg   [31:0] ap_phi_mux_tmp_int_7_phi_fu_658_p4;
reg   [31:0] tmp_int_7_reg_654;
reg    grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_start_reg;
wire    ap_CS_fsm_state57;
reg    grp_wah_fu_676_ap_start_reg;
wire   [63:0] p_cast_fu_746_p1;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond3136_fu_751_p2;
wire   [63:0] p_cast5_fu_776_p1;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond3083_fu_781_p2;
wire   [63:0] zext_ln82_fu_806_p1;
wire   [63:0] zext_ln169_fu_1112_p1;
wire   [63:0] zext_ln216_fu_1508_p1;
wire   [63:0] zext_ln219_fu_1660_p1;
wire  signed [63:0] sext_ln91_fu_887_p1;
reg   [8:0] empty_fu_252;
wire   [8:0] empty_75_fu_757_p2;
reg   [16:0] empty_76_fu_272;
wire   [16:0] empty_78_fu_787_p2;
reg   [6:0] i_fu_276;
wire   [6:0] add_ln82_fu_817_p2;
reg   [31:0] current_sample_1_fu_280;
wire   [31:0] current_sample_fu_1701_p2;
reg   [31:0] empty_80_fu_284;
reg   [31:0] delay_buffer_index_fu_288;
wire   [31:0] grp_fu_1371_p2;
reg   [31:0] compression_buffer_index_fu_292;
reg   [31:0] wah_buffer_index_1_fu_296;
reg   [31:0] debug_output_local_0_fu_300;
reg   [31:0] ap_sig_allocacmp_debug_output_local_0_load;
reg   [31:0] axilite_out_local_0_fu_304;
wire   [31:0] abs_in_1_fu_1103_p3;
reg   [31:0] grp_fu_701_p0;
reg   [31:0] grp_fu_701_p1;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state158;
reg   [31:0] grp_fu_705_p0;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state93;
reg   [31:0] grp_fu_709_p0;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state152;
wire   [61:0] trunc_ln_fu_878_p4;
wire  signed [7:0] grp_fu_973_p1;
wire   [0:0] icmp_ln1049_1_fu_999_p2;
wire   [31:0] ret_V_10_fu_1004_p2;
wire   [0:0] p_Result_39_fu_992_p3;
wire   [31:0] select_ln1048_1_fu_1009_p3;
wire   [31:0] ret_V_11_fu_1016_p3;
wire  signed [7:0] grp_fu_1031_p1;
wire   [0:0] icmp_ln1049_fu_1057_p2;
wire   [31:0] ret_V_fu_1062_p2;
wire   [0:0] p_Result_s_fu_1050_p3;
wire   [31:0] select_ln1048_fu_1067_p3;
wire   [31:0] ret_V_9_fu_1074_p3;
wire   [0:0] tmp_27_fu_1089_p3;
wire   [31:0] sub_ln165_fu_1097_p2;
wire   [31:0] grp_fu_1123_p0;
wire   [9:0] grp_fu_1123_p1;
wire   [0:0] icmp_ln197_1_fu_1171_p2;
wire   [0:0] and_ln197_fu_1176_p2;
wire   [0:0] icmp_ln197_fu_1166_p2;
wire   [31:0] data_V_2_fu_1204_p1;
wire   [7:0] xs_exp_V_2_fu_1216_p4;
wire   [8:0] zext_ln346_1_fu_1230_p1;
wire   [8:0] add_ln346_1_fu_1234_p2;
wire   [7:0] sub_ln1512_4_fu_1248_p2;
wire  signed [8:0] sext_ln1512_2_fu_1254_p1;
wire   [24:0] mantissa_2_fu_1266_p4;
wire  signed [31:0] sext_ln1488_2_fu_1279_p1;
wire   [78:0] zext_ln15_2_fu_1275_p1;
wire   [78:0] zext_ln1488_3_fu_1282_p1;
wire   [78:0] r_V_30_fu_1286_p2;
wire   [0:0] tmp_35_fu_1298_p3;
wire   [78:0] r_V_31_fu_1292_p2;
wire   [31:0] zext_ln818_2_fu_1306_p1;
wire   [31:0] tmp_2_fu_1310_p4;
wire   [31:0] result_V_17_fu_1327_p2;
wire   [31:0] result_V_13_fu_1339_p2;
wire   [31:0] grp_fu_1359_p0;
wire   [17:0] grp_fu_1359_p1;
wire   [31:0] grp_fu_1371_p0;
wire   [17:0] grp_fu_1371_p1;
wire   [31:0] data_V_fu_1377_p1;
wire   [7:0] xs_exp_V_fu_1389_p4;
wire   [8:0] zext_ln346_fu_1403_p1;
wire   [8:0] add_ln346_fu_1407_p2;
wire   [7:0] sub_ln1512_3_fu_1421_p2;
wire  signed [8:0] sext_ln1512_fu_1427_p1;
wire   [24:0] mantissa_fu_1439_p4;
wire  signed [31:0] sext_ln1488_fu_1452_p1;
wire   [78:0] zext_ln15_fu_1448_p1;
wire   [78:0] zext_ln1488_fu_1455_p1;
wire   [78:0] r_V_28_fu_1459_p2;
wire   [0:0] tmp_31_fu_1471_p3;
wire   [78:0] r_V_29_fu_1465_p2;
wire   [31:0] zext_ln818_fu_1479_p1;
wire   [31:0] tmp_s_fu_1483_p4;
wire   [16:0] trunc_ln216_fu_1505_p1;
wire   [7:0] xs_exp_V_4_fu_1517_p4;
wire   [8:0] zext_ln346_2_fu_1531_p1;
wire   [8:0] add_ln346_2_fu_1535_p2;
wire   [7:0] sub_ln1512_fu_1549_p2;
wire  signed [8:0] sext_ln1512_3_fu_1555_p1;
wire   [24:0] mantissa_3_fu_1567_p4;
wire  signed [31:0] sext_ln1488_3_fu_1580_p1;
wire   [78:0] zext_ln15_3_fu_1576_p1;
wire   [78:0] zext_ln1488_4_fu_1583_p1;
wire   [78:0] r_V_32_fu_1587_p2;
wire   [0:0] tmp_39_fu_1599_p3;
wire   [78:0] r_V_33_fu_1593_p2;
wire   [31:0] zext_ln818_3_fu_1607_p1;
wire   [31:0] tmp_3_fu_1611_p4;
wire   [0:0] p_Result_53_fu_1640_p3;
wire   [31:0] result_V_fu_1647_p3;
reg    grp_fu_701_ce;
reg    grp_fu_709_ce;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state106;
wire    ap_CS_fsm_state107;
wire    ap_CS_fsm_state153;
wire    ap_CS_fsm_state154;
wire    ap_CS_fsm_state155;
wire    ap_CS_fsm_state156;
reg    grp_fu_712_ce;
reg    grp_fu_1123_ap_start;
wire    grp_fu_1123_ap_done;
reg    grp_fu_1359_ap_start;
wire    grp_fu_1359_ap_done;
reg    grp_fu_1371_ap_start;
wire    grp_fu_1371_ap_done;
wire   [31:0] grp_fu_2247_p2;
reg   [31:0] grp_fu_2247_p0;
reg   [31:0] grp_fu_2247_p1;
reg    grp_fu_2247_ce;
reg   [168:0] ap_NS_fsm;
wire    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
reg    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
wire    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
wire    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
wire    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
wire    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
wire    ap_ST_fsm_state109_blk;
wire    ap_ST_fsm_state110_blk;
wire    ap_ST_fsm_state111_blk;
wire    ap_ST_fsm_state112_blk;
wire    ap_ST_fsm_state113_blk;
wire    ap_ST_fsm_state114_blk;
wire    ap_ST_fsm_state115_blk;
wire    ap_ST_fsm_state116_blk;
wire    ap_ST_fsm_state117_blk;
wire    ap_ST_fsm_state118_blk;
wire    ap_ST_fsm_state119_blk;
wire    ap_ST_fsm_state120_blk;
wire    ap_ST_fsm_state121_blk;
wire    ap_ST_fsm_state122_blk;
wire    ap_ST_fsm_state123_blk;
wire    ap_ST_fsm_state124_blk;
wire    ap_ST_fsm_state125_blk;
wire    ap_ST_fsm_state126_blk;
wire    ap_ST_fsm_state127_blk;
wire    ap_ST_fsm_state128_blk;
wire    ap_ST_fsm_state129_blk;
wire    ap_ST_fsm_state130_blk;
wire    ap_ST_fsm_state131_blk;
wire    ap_ST_fsm_state132_blk;
wire    ap_ST_fsm_state133_blk;
wire    ap_ST_fsm_state134_blk;
wire    ap_ST_fsm_state135_blk;
wire    ap_ST_fsm_state136_blk;
wire    ap_ST_fsm_state137_blk;
wire    ap_ST_fsm_state138_blk;
wire    ap_ST_fsm_state139_blk;
wire    ap_ST_fsm_state140_blk;
wire    ap_ST_fsm_state141_blk;
wire    ap_ST_fsm_state142_blk;
wire    ap_ST_fsm_state143_blk;
wire    ap_ST_fsm_state144_blk;
wire    ap_ST_fsm_state145_blk;
wire    ap_ST_fsm_state146_blk;
wire    ap_ST_fsm_state147_blk;
wire    ap_ST_fsm_state148_blk;
wire    ap_ST_fsm_state149_blk;
wire    ap_ST_fsm_state150_blk;
wire    ap_ST_fsm_state151_blk;
wire    ap_ST_fsm_state152_blk;
wire    ap_ST_fsm_state153_blk;
wire    ap_ST_fsm_state154_blk;
wire    ap_ST_fsm_state155_blk;
wire    ap_ST_fsm_state156_blk;
wire    ap_ST_fsm_state157_blk;
wire    ap_ST_fsm_state158_blk;
wire    ap_ST_fsm_state159_blk;
wire    ap_ST_fsm_state160_blk;
wire    ap_ST_fsm_state161_blk;
wire    ap_ST_fsm_state162_blk;
wire    ap_ST_fsm_state163_blk;
wire    ap_ST_fsm_state164_blk;
wire    ap_ST_fsm_state165_blk;
reg    ap_ST_fsm_state166_blk;
reg    ap_ST_fsm_state167_blk;
reg    ap_ST_fsm_state168_blk;
reg    ap_ST_fsm_state169_blk;
wire    regslice_both_OUTPUT_r_V_data_V_U_apdone_blk;
reg    ap_block_state169;
wire    regslice_both_INPUT_r_V_data_V_U_apdone_blk;
wire   [31:0] INPUT_r_TDATA_int_regslice;
wire    INPUT_r_TVALID_int_regslice;
reg    INPUT_r_TREADY_int_regslice;
wire    regslice_both_INPUT_r_V_data_V_U_ack_in;
wire    regslice_both_INPUT_r_V_keep_V_U_apdone_blk;
wire   [3:0] INPUT_r_TKEEP_int_regslice;
wire    regslice_both_INPUT_r_V_keep_V_U_vld_out;
wire    regslice_both_INPUT_r_V_keep_V_U_ack_in;
wire    regslice_both_INPUT_r_V_strb_V_U_apdone_blk;
wire   [3:0] INPUT_r_TSTRB_int_regslice;
wire    regslice_both_INPUT_r_V_strb_V_U_vld_out;
wire    regslice_both_INPUT_r_V_strb_V_U_ack_in;
wire    regslice_both_INPUT_r_V_user_V_U_apdone_blk;
wire   [1:0] INPUT_r_TUSER_int_regslice;
wire    regslice_both_INPUT_r_V_user_V_U_vld_out;
wire    regslice_both_INPUT_r_V_user_V_U_ack_in;
wire    regslice_both_INPUT_r_V_last_V_U_apdone_blk;
wire   [0:0] INPUT_r_TLAST_int_regslice;
wire    regslice_both_INPUT_r_V_last_V_U_vld_out;
wire    regslice_both_INPUT_r_V_last_V_U_ack_in;
wire    regslice_both_INPUT_r_V_id_V_U_apdone_blk;
wire   [4:0] INPUT_r_TID_int_regslice;
wire    regslice_both_INPUT_r_V_id_V_U_vld_out;
wire    regslice_both_INPUT_r_V_id_V_U_ack_in;
wire    regslice_both_INPUT_r_V_dest_V_U_apdone_blk;
wire   [5:0] INPUT_r_TDEST_int_regslice;
wire    regslice_both_INPUT_r_V_dest_V_U_vld_out;
wire    regslice_both_INPUT_r_V_dest_V_U_ack_in;
reg    OUTPUT_r_TVALID_int_regslice;
wire    OUTPUT_r_TREADY_int_regslice;
wire    regslice_both_OUTPUT_r_V_data_V_U_vld_out;
wire    regslice_both_OUTPUT_r_V_keep_V_U_apdone_blk;
wire    regslice_both_OUTPUT_r_V_keep_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_r_V_keep_V_U_vld_out;
wire    regslice_both_OUTPUT_r_V_strb_V_U_apdone_blk;
wire    regslice_both_OUTPUT_r_V_strb_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_r_V_strb_V_U_vld_out;
wire    regslice_both_OUTPUT_r_V_user_V_U_apdone_blk;
wire    regslice_both_OUTPUT_r_V_user_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_r_V_user_V_U_vld_out;
wire    regslice_both_OUTPUT_r_V_last_V_U_apdone_blk;
reg   [0:0] OUTPUT_r_TLAST_int_regslice;
wire    regslice_both_OUTPUT_r_V_last_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_r_V_last_V_U_vld_out;
wire    regslice_both_OUTPUT_r_V_id_V_U_apdone_blk;
wire    regslice_both_OUTPUT_r_V_id_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_r_V_id_V_U_vld_out;
wire    regslice_both_OUTPUT_r_V_dest_V_U_apdone_blk;
wire    regslice_both_OUTPUT_r_V_dest_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_r_V_dest_V_U_vld_out;
reg    ap_condition_2952;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 169'd1;
#0 grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_start_reg = 1'b0;
#0 grp_wah_fu_676_ap_start_reg = 1'b0;
end

guitar_effects_compression_buffer_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 441 ),
    .AddressWidth( 9 ))
compression_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(compression_buffer_address0),
    .ce0(compression_buffer_ce0),
    .we0(compression_buffer_we0),
    .d0(compression_buffer_d0),
    .q0(compression_buffer_q0)
);

guitar_effects_delay_buffer_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 88200 ),
    .AddressWidth( 17 ))
delay_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(delay_buffer_address0),
    .ce0(delay_buffer_ce0),
    .we0(delay_buffer_we0),
    .d0(delay_buffer_d0),
    .q0(delay_buffer_q0)
);

guitar_effects_wah_values_buffer_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
wah_values_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(wah_values_buffer_address0),
    .ce0(wah_values_buffer_ce0),
    .we0(wah_values_buffer_we0),
    .d0(wah_values_buffer_d0),
    .q0(wah_values_buffer_q0)
);

guitar_effects_guitar_effects_Pipeline_LPF_Loop grp_guitar_effects_Pipeline_LPF_Loop_fu_667(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_start),
    .ap_done(grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_done),
    .ap_idle(grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_idle),
    .ap_ready(grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_ready),
    .sext_ln67(trunc_ln67_reg_2062),
    .compression_buffer_address0(grp_guitar_effects_Pipeline_LPF_Loop_fu_667_compression_buffer_address0),
    .compression_buffer_ce0(grp_guitar_effects_Pipeline_LPF_Loop_fu_667_compression_buffer_ce0),
    .compression_buffer_q0(compression_buffer_q0),
    .p_out(grp_guitar_effects_Pipeline_LPF_Loop_fu_667_p_out),
    .p_out_ap_vld(grp_guitar_effects_Pipeline_LPF_Loop_fu_667_p_out_ap_vld),
    .grp_fu_2247_p_din0(grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_2247_p_din0),
    .grp_fu_2247_p_din1(grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_2247_p_din1),
    .grp_fu_2247_p_opcode(grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_2247_p_opcode),
    .grp_fu_2247_p_dout0(grp_fu_2247_p2),
    .grp_fu_2247_p_ce(grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_2247_p_ce),
    .grp_fu_701_p_din0(grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_701_p_din0),
    .grp_fu_701_p_din1(grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_701_p_din1),
    .grp_fu_701_p_dout0(grp_fu_701_p2),
    .grp_fu_701_p_ce(grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_701_p_ce),
    .grp_fu_709_p_din0(grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_709_p_din0),
    .grp_fu_709_p_dout0(grp_fu_709_p1),
    .grp_fu_709_p_ce(grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_709_p_ce)
);

guitar_effects_wah grp_wah_fu_676(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_wah_fu_676_ap_start),
    .ap_done(grp_wah_fu_676_ap_done),
    .ap_idle(grp_wah_fu_676_ap_idle),
    .ap_ready(grp_wah_fu_676_ap_ready),
    .input_r(tmp_int_1_reg_622),
    .tempo(tempo_read_reg_1744),
    .current_sample(trunc_ln76_reg_2227),
    .wah_buffer_index_read(wah_buffer_index_1_fu_296),
    .wah_values_buffer_address0(grp_wah_fu_676_wah_values_buffer_address0),
    .wah_values_buffer_ce0(grp_wah_fu_676_wah_values_buffer_ce0),
    .wah_values_buffer_we0(grp_wah_fu_676_wah_values_buffer_we0),
    .wah_values_buffer_d0(grp_wah_fu_676_wah_values_buffer_d0),
    .wah_values_buffer_q0(wah_values_buffer_q0),
    .m_axi_gmem_AWVALID(grp_wah_fu_676_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(grp_wah_fu_676_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_wah_fu_676_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_wah_fu_676_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_wah_fu_676_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_wah_fu_676_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_wah_fu_676_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_wah_fu_676_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_wah_fu_676_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_wah_fu_676_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_wah_fu_676_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_wah_fu_676_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_wah_fu_676_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(grp_wah_fu_676_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_wah_fu_676_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_wah_fu_676_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_wah_fu_676_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_wah_fu_676_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_wah_fu_676_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_wah_fu_676_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_wah_fu_676_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_wah_fu_676_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_wah_fu_676_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_wah_fu_676_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_wah_fu_676_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_wah_fu_676_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_wah_fu_676_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_wah_fu_676_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_wah_fu_676_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_wah_fu_676_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_wah_fu_676_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(gmem_RFIFONUM),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(grp_wah_fu_676_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .bandpass_coeffs(wah_coeffs_read_reg_1738),
    .ap_return_0(grp_wah_fu_676_ap_return_0),
    .ap_return_1(grp_wah_fu_676_ap_return_1),
    .ap_return_2(grp_wah_fu_676_ap_return_2),
    .grp_fu_2247_p_din0(grp_wah_fu_676_grp_fu_2247_p_din0),
    .grp_fu_2247_p_din1(grp_wah_fu_676_grp_fu_2247_p_din1),
    .grp_fu_2247_p_opcode(grp_wah_fu_676_grp_fu_2247_p_opcode),
    .grp_fu_2247_p_dout0(grp_fu_2247_p2),
    .grp_fu_2247_p_ce(grp_wah_fu_676_grp_fu_2247_p_ce),
    .grp_fu_701_p_din0(grp_wah_fu_676_grp_fu_701_p_din0),
    .grp_fu_701_p_din1(grp_wah_fu_676_grp_fu_701_p_din1),
    .grp_fu_701_p_dout0(grp_fu_701_p2),
    .grp_fu_701_p_ce(grp_wah_fu_676_grp_fu_701_p_ce),
    .grp_fu_709_p_din0(grp_wah_fu_676_grp_fu_709_p_din0),
    .grp_fu_709_p_dout0(grp_fu_709_p1),
    .grp_fu_709_p_ce(grp_wah_fu_676_grp_fu_709_p_ce)
);

guitar_effects_control_r_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_R_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_R_DATA_WIDTH ))
control_r_s_axi_U(
    .AWVALID(s_axi_control_r_AWVALID),
    .AWREADY(s_axi_control_r_AWREADY),
    .AWADDR(s_axi_control_r_AWADDR),
    .WVALID(s_axi_control_r_WVALID),
    .WREADY(s_axi_control_r_WREADY),
    .WDATA(s_axi_control_r_WDATA),
    .WSTRB(s_axi_control_r_WSTRB),
    .ARVALID(s_axi_control_r_ARVALID),
    .ARREADY(s_axi_control_r_ARREADY),
    .ARADDR(s_axi_control_r_ARADDR),
    .RVALID(s_axi_control_r_RVALID),
    .RREADY(s_axi_control_r_RREADY),
    .RDATA(s_axi_control_r_RDATA),
    .RRESP(s_axi_control_r_RRESP),
    .BVALID(s_axi_control_r_BVALID),
    .BREADY(s_axi_control_r_BREADY),
    .BRESP(s_axi_control_r_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .axilite_out(ap_phi_mux_axilite_out_local_4_phi_fu_636_p4),
    .axilite_out_ap_vld(axilite_out_ap_vld),
    .control(control),
    .distortion_threshold(distortion_threshold),
    .distortion_clip_factor(distortion_clip_factor),
    .compression_min_threshold(compression_min_threshold),
    .compression_max_threshold(compression_max_threshold),
    .compression_zero_threshold(compression_zero_threshold),
    .delay_mult(delay_mult),
    .delay_samples(delay_samples),
    .tempo(tempo),
    .wah_coeffs(wah_coeffs),
    .debug_output(ap_sig_allocacmp_debug_output_local_0_load),
    .debug_output_ap_vld(debug_output_ap_vld),
    .starting_sample(starting_sample)
);

guitar_effects_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ),
    .USER_DW( 32 ),
    .USER_AW( 64 ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARLEN(gmem_ARLEN),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RFIFONUM(gmem_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(32'd0),
    .I_WSTRB(4'd0),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(1'b0)
);

guitar_effects_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U66(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_701_p0),
    .din1(grp_fu_701_p1),
    .ce(grp_fu_701_ce),
    .dout(grp_fu_701_p2)
);

guitar_effects_fdiv_32ns_32ns_32_16_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_16_no_dsp_1_U67(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_705_p0),
    .din1(reg_719),
    .ce(1'b1),
    .dout(grp_fu_705_p2)
);

guitar_effects_sitofp_32ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_6_no_dsp_1_U68(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_709_p0),
    .ce(grp_fu_709_ce),
    .dout(grp_fu_709_p1)
);

guitar_effects_sitofp_32ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_6_no_dsp_1_U69(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(compression_min_threshold_read_reg_1770),
    .ce(grp_fu_712_ce),
    .dout(grp_fu_712_p1)
);

guitar_effects_mul_32s_8s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 40 ))
mul_32s_8s_40_2_1_U70(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(r_V_reg_1985),
    .din1(grp_fu_973_p1),
    .ce(1'b1),
    .dout(grp_fu_973_p2)
);

guitar_effects_mul_32s_8s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 40 ))
mul_32s_8s_40_2_1_U71(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(r_V_25_reg_1990),
    .din1(grp_fu_1031_p1),
    .ce(1'b1),
    .dout(grp_fu_1031_p2)
);

guitar_effects_srem_32ns_10ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 32 ))
srem_32ns_10ns_32_36_seq_1_U72(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_1123_ap_start),
    .done(grp_fu_1123_ap_done),
    .din0(grp_fu_1123_p0),
    .din1(grp_fu_1123_p1),
    .ce(1'b1),
    .dout(grp_fu_1123_p2)
);

guitar_effects_srem_32ns_18ns_17_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 17 ))
srem_32ns_18ns_17_36_seq_1_U73(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_1359_ap_start),
    .done(grp_fu_1359_ap_done),
    .din0(grp_fu_1359_p0),
    .din1(grp_fu_1359_p1),
    .ce(1'b1),
    .dout(grp_fu_1359_p2)
);

guitar_effects_srem_32ns_18ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
srem_32ns_18ns_32_36_seq_1_U74(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_1371_ap_start),
    .done(grp_fu_1371_ap_done),
    .din0(grp_fu_1371_p0),
    .din1(grp_fu_1371_p1),
    .ce(1'b1),
    .dout(grp_fu_1371_p2)
);

guitar_effects_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U75(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2247_p0),
    .din1(grp_fu_2247_p1),
    .ce(grp_fu_2247_ce),
    .dout(grp_fu_2247_p2)
);

guitar_effects_regslice_both #(
    .DataWidth( 32 ))
regslice_both_INPUT_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_r_TDATA),
    .vld_in(INPUT_r_TVALID),
    .ack_in(regslice_both_INPUT_r_V_data_V_U_ack_in),
    .data_out(INPUT_r_TDATA_int_regslice),
    .vld_out(INPUT_r_TVALID_int_regslice),
    .ack_out(INPUT_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_r_V_data_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 4 ))
regslice_both_INPUT_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_r_TKEEP),
    .vld_in(INPUT_r_TVALID),
    .ack_in(regslice_both_INPUT_r_V_keep_V_U_ack_in),
    .data_out(INPUT_r_TKEEP_int_regslice),
    .vld_out(regslice_both_INPUT_r_V_keep_V_U_vld_out),
    .ack_out(INPUT_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_r_V_keep_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 4 ))
regslice_both_INPUT_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_r_TSTRB),
    .vld_in(INPUT_r_TVALID),
    .ack_in(regslice_both_INPUT_r_V_strb_V_U_ack_in),
    .data_out(INPUT_r_TSTRB_int_regslice),
    .vld_out(regslice_both_INPUT_r_V_strb_V_U_vld_out),
    .ack_out(INPUT_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_r_V_strb_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 2 ))
regslice_both_INPUT_r_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_r_TUSER),
    .vld_in(INPUT_r_TVALID),
    .ack_in(regslice_both_INPUT_r_V_user_V_U_ack_in),
    .data_out(INPUT_r_TUSER_int_regslice),
    .vld_out(regslice_both_INPUT_r_V_user_V_U_vld_out),
    .ack_out(INPUT_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_r_V_user_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 1 ))
regslice_both_INPUT_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_r_TLAST),
    .vld_in(INPUT_r_TVALID),
    .ack_in(regslice_both_INPUT_r_V_last_V_U_ack_in),
    .data_out(INPUT_r_TLAST_int_regslice),
    .vld_out(regslice_both_INPUT_r_V_last_V_U_vld_out),
    .ack_out(INPUT_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_r_V_last_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 5 ))
regslice_both_INPUT_r_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_r_TID),
    .vld_in(INPUT_r_TVALID),
    .ack_in(regslice_both_INPUT_r_V_id_V_U_ack_in),
    .data_out(INPUT_r_TID_int_regslice),
    .vld_out(regslice_both_INPUT_r_V_id_V_U_vld_out),
    .ack_out(INPUT_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_r_V_id_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 6 ))
regslice_both_INPUT_r_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_r_TDEST),
    .vld_in(INPUT_r_TVALID),
    .ack_in(regslice_both_INPUT_r_V_dest_V_U_ack_in),
    .data_out(INPUT_r_TDEST_int_regslice),
    .vld_out(regslice_both_INPUT_r_V_dest_V_U_vld_out),
    .ack_out(INPUT_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_r_V_dest_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 32 ))
regslice_both_OUTPUT_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ap_phi_mux_tmp_int_7_phi_fu_658_p4),
    .vld_in(OUTPUT_r_TVALID_int_regslice),
    .ack_in(OUTPUT_r_TREADY_int_regslice),
    .data_out(OUTPUT_r_TDATA),
    .vld_out(regslice_both_OUTPUT_r_V_data_V_U_vld_out),
    .ack_out(OUTPUT_r_TREADY),
    .apdone_blk(regslice_both_OUTPUT_r_V_data_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 4 ))
regslice_both_OUTPUT_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_keep_V_reg_1940),
    .vld_in(OUTPUT_r_TVALID_int_regslice),
    .ack_in(regslice_both_OUTPUT_r_V_keep_V_U_ack_in_dummy),
    .data_out(OUTPUT_r_TKEEP),
    .vld_out(regslice_both_OUTPUT_r_V_keep_V_U_vld_out),
    .ack_out(OUTPUT_r_TREADY),
    .apdone_blk(regslice_both_OUTPUT_r_V_keep_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 4 ))
regslice_both_OUTPUT_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_strb_V_reg_1945),
    .vld_in(OUTPUT_r_TVALID_int_regslice),
    .ack_in(regslice_both_OUTPUT_r_V_strb_V_U_ack_in_dummy),
    .data_out(OUTPUT_r_TSTRB),
    .vld_out(regslice_both_OUTPUT_r_V_strb_V_U_vld_out),
    .ack_out(OUTPUT_r_TREADY),
    .apdone_blk(regslice_both_OUTPUT_r_V_strb_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 2 ))
regslice_both_OUTPUT_r_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_user_V_reg_1950),
    .vld_in(OUTPUT_r_TVALID_int_regslice),
    .ack_in(regslice_both_OUTPUT_r_V_user_V_U_ack_in_dummy),
    .data_out(OUTPUT_r_TUSER),
    .vld_out(regslice_both_OUTPUT_r_V_user_V_U_vld_out),
    .ack_out(OUTPUT_r_TREADY),
    .apdone_blk(regslice_both_OUTPUT_r_V_user_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 1 ))
regslice_both_OUTPUT_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(OUTPUT_r_TLAST_int_regslice),
    .vld_in(OUTPUT_r_TVALID_int_regslice),
    .ack_in(regslice_both_OUTPUT_r_V_last_V_U_ack_in_dummy),
    .data_out(OUTPUT_r_TLAST),
    .vld_out(regslice_both_OUTPUT_r_V_last_V_U_vld_out),
    .ack_out(OUTPUT_r_TREADY),
    .apdone_blk(regslice_both_OUTPUT_r_V_last_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 5 ))
regslice_both_OUTPUT_r_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_id_V_reg_1959),
    .vld_in(OUTPUT_r_TVALID_int_regslice),
    .ack_in(regslice_both_OUTPUT_r_V_id_V_U_ack_in_dummy),
    .data_out(OUTPUT_r_TID),
    .vld_out(regslice_both_OUTPUT_r_V_id_V_U_vld_out),
    .ack_out(OUTPUT_r_TREADY),
    .apdone_blk(regslice_both_OUTPUT_r_V_id_V_U_apdone_blk)
);

guitar_effects_regslice_both #(
    .DataWidth( 6 ))
regslice_both_OUTPUT_r_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_dest_V_reg_1964),
    .vld_in(OUTPUT_r_TVALID_int_regslice),
    .ack_in(regslice_both_OUTPUT_r_V_dest_V_U_ack_in_dummy),
    .data_out(OUTPUT_r_TDEST),
    .vld_out(regslice_both_OUTPUT_r_V_dest_V_U_vld_out),
    .ack_out(OUTPUT_r_TREADY),
    .apdone_blk(regslice_both_OUTPUT_r_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_start_reg <= 1'b1;
        end else if ((grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_ready == 1'b1)) begin
            grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_wah_fu_676_ap_start_reg <= 1'b0;
    end else begin
        if (((trunc_ln23_reg_1805 == 1'd1) & (1'b1 == ap_CS_fsm_state165))) begin
            grp_wah_fu_676_ap_start_reg <= 1'b1;
        end else if ((grp_wah_fu_676_ap_ready == 1'b1)) begin
            grp_wah_fu_676_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln82_fu_811_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        axilite_out_local_0_fu_304 <= 32'd0;
    end else if ((~((1'b1 == ap_block_state167_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0))) & (tmp_last_V_reg_1955 == 1'd0) & (1'b1 == ap_CS_fsm_state167))) begin
        axilite_out_local_0_fu_304 <= ap_phi_mux_axilite_out_local_4_phi_fu_636_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln149_fu_955_p2 == 1'd0) & (icmp_ln147_fu_950_p2 == 1'd0) & (tmp_reg_1884 == 1'd1) & (1'b1 == INPUT_r_TVALID_int_regslice) & (1'b1 == ap_CS_fsm_state14))) begin
        axilite_out_local_1_reg_505 <= or_ln102_fu_944_p2;
    end else if (((tmp_reg_1884 == 1'd0) & (1'b1 == INPUT_r_TVALID_int_regslice) & (1'b1 == ap_CS_fsm_state14))) begin
        axilite_out_local_1_reg_505 <= axilite_out_local_0_fu_304;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state17))) begin
        axilite_out_local_1_reg_505 <= or_ln102_reg_1969;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln198_fu_1160_p2 == 1'd0) & (icmp_ln188_fu_1155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state59)) | ((icmp_ln188_fu_1155_p2 == 1'd0) & (1'd0 == and_ln197_1_fu_1182_p2) & (1'b1 == ap_CS_fsm_state59)))) begin
        axilite_out_local_2_reg_547 <= or_ln107_fu_1139_p2;
    end else if (((tmp_23_reg_1888 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        axilite_out_local_2_reg_547 <= axilite_out_local_1_reg_505;
    end else if ((((icmp_ln188_reg_2089 == 1'd0) & (tmp_23_reg_1888 == 1'd1) & (1'd1 == and_ln197_1_reg_2097) & (1'b1 == ap_CS_fsm_state87)) | ((icmp_ln198_reg_2093 == 1'd1) & (icmp_ln188_reg_2089 == 1'd1) & (tmp_23_reg_1888 == 1'd1) & (1'b1 == ap_CS_fsm_state87)))) begin
        axilite_out_local_2_reg_547 <= or_ln107_reg_2072;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_24_reg_1892 == 1'd0) & (1'b1 == ap_CS_fsm_state87))) begin
        axilite_out_local_3_reg_600 <= ap_phi_mux_axilite_out_local_2_phi_fu_550_p10;
    end else if ((1'b1 == ap_CS_fsm_state164)) begin
        axilite_out_local_3_reg_600 <= or_ln112_fu_1634_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln23_reg_1805 == 1'd0) & (1'b1 == ap_CS_fsm_state165))) begin
        axilite_out_local_4_reg_633 <= axilite_out_local_3_reg_600;
    end else if ((~((1'b1 == ap_block_state167_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0))) & (trunc_ln23_reg_1805 == 1'd1) & (1'b1 == ap_CS_fsm_state167))) begin
        axilite_out_local_4_reg_633 <= or_ln117_fu_1685_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln82_fu_811_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        compression_buffer_index_fu_292 <= 32'd0;
    end else if ((((icmp_ln198_fu_1160_p2 == 1'd0) & (icmp_ln188_fu_1155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state59)) | ((icmp_ln188_fu_1155_p2 == 1'd0) & (1'd0 == and_ln197_1_fu_1182_p2) & (1'b1 == ap_CS_fsm_state59)) | ((icmp_ln188_fu_1155_p2 == 1'd0) & (1'd1 == and_ln197_1_fu_1182_p2) & (1'b1 == ap_CS_fsm_state59)) | ((icmp_ln198_fu_1160_p2 == 1'd1) & (icmp_ln188_fu_1155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state59)))) begin
        compression_buffer_index_fu_292 <= compression_buffer_index_1_reg_2054;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln82_fu_811_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        current_sample_1_fu_280 <= starting_sample_read_reg_1733;
    end else if ((~((1'b1 == ap_block_state167_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0))) & (tmp_last_V_reg_1955 == 1'd0) & (1'b1 == ap_CS_fsm_state167))) begin
        current_sample_1_fu_280 <= current_sample_fu_1701_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        debug_output_local_0_fu_300 <= gmem_addr_read_reg_1902;
    end else if ((~((1'b1 == ap_block_state167_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0))) & (trunc_ln23_reg_1805 == 1'd1) & (1'b1 == ap_CS_fsm_state167))) begin
        debug_output_local_0_fu_300 <= debug_output_ret_reg_2242;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln82_fu_811_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        delay_buffer_index_fu_288 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state149)) begin
        delay_buffer_index_fu_288 <= grp_fu_1371_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3136_fu_751_p2 == 1'd1))) begin
        empty_76_fu_272 <= 17'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (exitcond3083_fu_781_p2 == 1'd0))) begin
        empty_76_fu_272 <= empty_78_fu_787_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln82_fu_811_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        empty_80_fu_284 <= 32'd0;
    end else if ((~((1'b1 == ap_block_state167_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0))) & (tmp_last_V_reg_1955 == 1'd0) & (1'b1 == ap_CS_fsm_state167))) begin
        empty_80_fu_284 <= ap_phi_mux_empty_85_phi_fu_647_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln149_fu_955_p2 == 1'd0) & (icmp_ln147_fu_950_p2 == 1'd0) & (tmp_reg_1884 == 1'd1) & (1'b1 == INPUT_r_TVALID_int_regslice) & (1'b1 == ap_CS_fsm_state14))) begin
        empty_82_reg_519 <= or_ln102_fu_944_p2;
    end else if (((tmp_reg_1884 == 1'd0) & (1'b1 == INPUT_r_TVALID_int_regslice) & (1'b1 == ap_CS_fsm_state14))) begin
        empty_82_reg_519 <= empty_80_fu_284;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state17))) begin
        empty_82_reg_519 <= or_ln102_reg_1969;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln198_fu_1160_p2 == 1'd0) & (icmp_ln188_fu_1155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state59)) | ((icmp_ln188_fu_1155_p2 == 1'd0) & (1'd0 == and_ln197_1_fu_1182_p2) & (1'b1 == ap_CS_fsm_state59)))) begin
        empty_83_reg_564 <= or_ln107_fu_1139_p2;
    end else if (((tmp_23_reg_1888 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        empty_83_reg_564 <= empty_82_reg_519;
    end else if ((((icmp_ln188_reg_2089 == 1'd0) & (tmp_23_reg_1888 == 1'd1) & (1'd1 == and_ln197_1_reg_2097) & (1'b1 == ap_CS_fsm_state87)) | ((icmp_ln198_reg_2093 == 1'd1) & (icmp_ln188_reg_2089 == 1'd1) & (tmp_23_reg_1888 == 1'd1) & (1'b1 == ap_CS_fsm_state87)))) begin
        empty_83_reg_564 <= or_ln107_reg_2072;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_24_reg_1892 == 1'd0) & (1'b1 == ap_CS_fsm_state87))) begin
        empty_84_reg_611 <= ap_phi_mux_empty_83_phi_fu_567_p10;
    end else if ((1'b1 == ap_CS_fsm_state164)) begin
        empty_84_reg_611 <= or_ln112_fu_1634_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln23_reg_1805 == 1'd0) & (1'b1 == ap_CS_fsm_state165))) begin
        empty_85_reg_644 <= empty_84_reg_611;
    end else if ((~((1'b1 == ap_block_state167_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0))) & (trunc_ln23_reg_1805 == 1'd1) & (1'b1 == ap_CS_fsm_state167))) begin
        empty_85_reg_644 <= or_ln117_fu_1685_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_fu_252 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond3136_fu_751_p2 == 1'd0))) begin
        empty_fu_252 <= empty_75_fu_757_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond3083_fu_781_p2 == 1'd1))) begin
        i_fu_276 <= 7'd0;
    end else if (((icmp_ln82_fu_811_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        i_fu_276 <= add_ln82_fu_817_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_24_reg_1892 == 1'd0) & (1'b1 == ap_CS_fsm_state87))) begin
        tmp_int_1_reg_622 <= ap_phi_mux_tmp_int_phi_fu_584_p10;
    end else if ((1'b1 == ap_CS_fsm_state164)) begin
        tmp_int_1_reg_622 <= output_fu_1653_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln149_fu_955_p2 == 1'd0) & (icmp_ln147_fu_950_p2 == 1'd0) & (tmp_reg_1884 == 1'd1) & (1'b1 == INPUT_r_TVALID_int_regslice) & (1'b1 == ap_CS_fsm_state14)) | ((tmp_reg_1884 == 1'd0) & (1'b1 == INPUT_r_TVALID_int_regslice) & (1'b1 == ap_CS_fsm_state14)))) begin
        tmp_int_6_reg_533 <= INPUT_r_TDATA_int_regslice;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_int_6_reg_533 <= result_1_fu_1023_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_int_6_reg_533 <= result_fu_1081_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln23_reg_1805 == 1'd0) & (1'b1 == ap_CS_fsm_state165))) begin
        tmp_int_7_reg_654 <= tmp_int_1_reg_622;
    end else if ((~((1'b1 == ap_block_state167_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0))) & (trunc_ln23_reg_1805 == 1'd1) & (1'b1 == ap_CS_fsm_state167))) begin
        tmp_int_7_reg_654 <= tmp_int_3_reg_2232;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln198_fu_1160_p2 == 1'd0) & (icmp_ln188_fu_1155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state59)) | ((icmp_ln188_fu_1155_p2 == 1'd0) & (1'd0 == and_ln197_1_fu_1182_p2) & (1'b1 == ap_CS_fsm_state59)))) begin
        tmp_int_reg_581 <= tmp_int_6_reg_533;
    end else if (((tmp_23_reg_1888 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        tmp_int_reg_581 <= ap_phi_mux_tmp_int_6_phi_fu_536_p8;
    end else if (((icmp_ln188_reg_2089 == 1'd0) & (tmp_23_reg_1888 == 1'd1) & (1'd1 == and_ln197_1_reg_2097) & (1'b1 == ap_CS_fsm_state87))) begin
        tmp_int_reg_581 <= result_V_22_fu_1332_p3;
    end else if (((icmp_ln198_reg_2093 == 1'd1) & (icmp_ln188_reg_2089 == 1'd1) & (tmp_23_reg_1888 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
        tmp_int_reg_581 <= result_V_21_fu_1344_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln82_fu_811_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        wah_buffer_index_1_fu_296 <= 32'd0;
    end else if ((~((1'b1 == ap_block_state167_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0))) & (trunc_ln23_reg_1805 == 1'd1) & (1'b1 == ap_CS_fsm_state167))) begin
        wah_buffer_index_1_fu_296 <= wah_buffer_index_reg_2237;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_fu_1155_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state59))) begin
        and_ln197_1_reg_2097 <= and_ln197_1_fu_1182_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        compression_buffer_index_1_reg_2054 <= grp_fu_1123_p2;
        trunc_ln67_reg_2062 <= trunc_ln67_fu_1129_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        compression_max_threshold_read_reg_1764 <= compression_max_threshold;
        compression_min_threshold_read_reg_1770 <= compression_min_threshold;
        compression_zero_threshold_read_reg_1759 <= compression_zero_threshold;
        control_read_reg_1792 <= control;
        delay_mult_read_reg_1754 <= delay_mult;
        delay_samples_read_reg_1749 <= delay_samples;
        distortion_clip_factor_read_reg_1777 <= distortion_clip_factor;
        distortion_threshold_read_reg_1782 <= distortion_threshold;
        starting_sample_read_reg_1733 <= starting_sample;
        tempo_read_reg_1744 <= tempo;
        trunc_ln23_reg_1805 <= trunc_ln23_fu_734_p1;
        wah_coeffs_read_reg_1738 <= wah_coeffs;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv18_i_reg_1918 <= grp_fu_709_p1;
        conv30_i_reg_1923 <= grp_fu_712_p1;
        conv7_i_i_i_reg_1912 <= conv7_i_i_i_fu_903_p1;
        negative_threshold_reg_1907 <= negative_threshold_fu_898_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state162)) begin
        data_V_3_reg_2183 <= data_V_3_fu_1513_p1;
        isNeg_4_reg_2193 <= add_ln346_2_fu_1535_p2[32'd8];
        p_Result_54_reg_2188 <= p_Result_54_fu_1527_p1;
        ush_4_reg_2198 <= ush_4_fu_1559_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state166)) begin
        debug_output_ret_reg_2242 <= grp_wah_fu_676_ap_return_2;
        tmp_int_3_reg_2232 <= grp_wah_fu_676_ap_return_0;
        wah_buffer_index_reg_2237 <= grp_wah_fu_676_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_24_reg_1892 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
        delay_buffer_index_load_reg_2127 <= delay_buffer_index_fu_288;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state151)) begin
        delay_buffer_load_reg_2178 <= delay_buffer_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        gmem_addr_read_reg_1902 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        icmp_ln180_reg_2067 <= icmp_ln180_fu_1133_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        icmp_ln188_reg_2089 <= icmp_ln188_fu_1155_p2;
        icmp_ln198_reg_2093 <= icmp_ln198_fu_1160_p2;
        or_ln107_reg_2072[1 : 0] <= or_ln107_fu_1139_p2[1 : 0];
or_ln107_reg_2072[31 : 3] <= or_ln107_fu_1139_p2[31 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        isNeg_3_reg_2111 <= add_ln346_1_fu_1234_p2[32'd8];
        p_Result_51_reg_2101 <= data_V_2_fu_1204_p1[32'd31];
        p_Result_52_reg_2106 <= p_Result_52_fu_1226_p1;
        ush_3_reg_2116 <= ush_3_fu_1258_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        isNeg_reg_2152 <= add_ln346_fu_1407_p2[32'd8];
        p_Result_49_reg_2142 <= data_V_fu_1377_p1[32'd31];
        p_Result_50_reg_2147 <= p_Result_50_fu_1399_p1;
        ush_reg_2157 <= ush_fu_1431_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1884 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        or_ln102_reg_1969[2 : 0] <= or_ln102_fu_944_p2[2 : 0];
or_ln102_reg_1969[31 : 4] <= or_ln102_fu_944_p2[31 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln147_fu_950_p2 == 1'd1) & (tmp_reg_1884 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        r_V_25_reg_1990 <= r_V_25_fu_965_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        r_V_34_reg_2027 <= grp_fu_1031_p2;
        ret_V_cast_reg_2032 <= {{grp_fu_1031_p2[38:7]}};
        trunc_ln1049_reg_2039 <= trunc_ln1049_fu_1046_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        r_V_35_reg_2000 <= grp_fu_973_p2;
        ret_V_9_cast_reg_2005 <= {{grp_fu_973_p2[38:7]}};
        trunc_ln1049_1_reg_2012 <= trunc_ln1049_1_fu_988_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln149_fu_955_p2 == 1'd1) & (icmp_ln147_fu_950_p2 == 1'd0) & (tmp_reg_1884 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        r_V_reg_1985 <= r_V_fu_960_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state64))) begin
        reg_719 <= grp_fu_709_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state80))) begin
        reg_725 <= grp_fu_705_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state161) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state84))) begin
        reg_730 <= grp_fu_701_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state163)) begin
        result_V_19_reg_2208 <= result_V_19_fu_1628_p2;
        val_3_reg_2203 <= val_3_fu_1621_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        srem_ln216_reg_2168 <= grp_fu_1359_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln82_fu_811_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_23_reg_1888 <= control_read_reg_1792[32'd2];
        tmp_24_reg_1892 <= control_read_reg_1792[32'd1];
        tmp_reg_1884 <= control_read_reg_1792[32'd3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_dest_V_reg_1964 <= INPUT_r_TDEST_int_regslice;
        tmp_id_V_reg_1959 <= INPUT_r_TID_int_regslice;
        tmp_keep_V_reg_1940 <= INPUT_r_TKEEP_int_regslice;
        tmp_last_V_reg_1955 <= INPUT_r_TLAST_int_regslice;
        tmp_strb_V_reg_1945 <= INPUT_r_TSTRB_int_regslice;
        tmp_user_V_reg_1950 <= INPUT_r_TUSER_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln23_reg_1805 == 1'd1) & (1'b1 == ap_CS_fsm_state165))) begin
        trunc_ln76_reg_2227 <= trunc_ln76_fu_1668_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        val_2_reg_2121 <= val_2_fu_1320_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        val_reg_2162 <= val_fu_1493_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        INPUT_r_TDATA_blk_n = INPUT_r_TVALID_int_regslice;
    end else begin
        INPUT_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == INPUT_r_TVALID_int_regslice) & (1'b1 == ap_CS_fsm_state14))) begin
        INPUT_r_TREADY_int_regslice = 1'b1;
    end else begin
        INPUT_r_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state168) | ((tmp_last_V_reg_1955 == 1'd1) & (1'b1 == ap_CS_fsm_state167)) | ((tmp_last_V_reg_1955 == 1'd0) & (1'b1 == ap_CS_fsm_state167)))) begin
        OUTPUT_r_TDATA_blk_n = OUTPUT_r_TREADY_int_regslice;
    end else begin
        OUTPUT_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2952)) begin
        if ((tmp_last_V_reg_1955 == 1'd1)) begin
            OUTPUT_r_TLAST_int_regslice = 1'd1;
        end else if ((tmp_last_V_reg_1955 == 1'd0)) begin
            OUTPUT_r_TLAST_int_regslice = 1'd0;
        end else begin
            OUTPUT_r_TLAST_int_regslice = 'bx;
        end
    end else begin
        OUTPUT_r_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state167_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0))) & (tmp_last_V_reg_1955 == 1'd1) & (1'b1 == ap_CS_fsm_state167)) | (~((1'b1 == ap_block_state167_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0))) & (tmp_last_V_reg_1955 == 1'd0) & (1'b1 == ap_CS_fsm_state167)))) begin
        OUTPUT_r_TVALID_int_regslice = 1'b1;
    end else begin
        OUTPUT_r_TVALID_int_regslice = 1'b0;
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

assign ap_ST_fsm_state101_blk = 1'b0;

assign ap_ST_fsm_state102_blk = 1'b0;

assign ap_ST_fsm_state103_blk = 1'b0;

assign ap_ST_fsm_state104_blk = 1'b0;

assign ap_ST_fsm_state105_blk = 1'b0;

assign ap_ST_fsm_state106_blk = 1'b0;

assign ap_ST_fsm_state107_blk = 1'b0;

assign ap_ST_fsm_state108_blk = 1'b0;

assign ap_ST_fsm_state109_blk = 1'b0;

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state110_blk = 1'b0;

assign ap_ST_fsm_state111_blk = 1'b0;

assign ap_ST_fsm_state112_blk = 1'b0;

assign ap_ST_fsm_state113_blk = 1'b0;

assign ap_ST_fsm_state114_blk = 1'b0;

assign ap_ST_fsm_state115_blk = 1'b0;

assign ap_ST_fsm_state116_blk = 1'b0;

assign ap_ST_fsm_state117_blk = 1'b0;

assign ap_ST_fsm_state118_blk = 1'b0;

assign ap_ST_fsm_state119_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state120_blk = 1'b0;

assign ap_ST_fsm_state121_blk = 1'b0;

assign ap_ST_fsm_state122_blk = 1'b0;

assign ap_ST_fsm_state123_blk = 1'b0;

assign ap_ST_fsm_state124_blk = 1'b0;

assign ap_ST_fsm_state125_blk = 1'b0;

assign ap_ST_fsm_state126_blk = 1'b0;

assign ap_ST_fsm_state127_blk = 1'b0;

assign ap_ST_fsm_state128_blk = 1'b0;

assign ap_ST_fsm_state129_blk = 1'b0;

always @ (*) begin
    if ((gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state130_blk = 1'b0;

assign ap_ST_fsm_state131_blk = 1'b0;

assign ap_ST_fsm_state132_blk = 1'b0;

assign ap_ST_fsm_state133_blk = 1'b0;

assign ap_ST_fsm_state134_blk = 1'b0;

assign ap_ST_fsm_state135_blk = 1'b0;

assign ap_ST_fsm_state136_blk = 1'b0;

assign ap_ST_fsm_state137_blk = 1'b0;

assign ap_ST_fsm_state138_blk = 1'b0;

assign ap_ST_fsm_state139_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state140_blk = 1'b0;

assign ap_ST_fsm_state141_blk = 1'b0;

assign ap_ST_fsm_state142_blk = 1'b0;

assign ap_ST_fsm_state143_blk = 1'b0;

assign ap_ST_fsm_state144_blk = 1'b0;

assign ap_ST_fsm_state145_blk = 1'b0;

assign ap_ST_fsm_state146_blk = 1'b0;

assign ap_ST_fsm_state147_blk = 1'b0;

assign ap_ST_fsm_state148_blk = 1'b0;

assign ap_ST_fsm_state149_blk = 1'b0;

always @ (*) begin
    if ((1'b0 == INPUT_r_TVALID_int_regslice)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

assign ap_ST_fsm_state150_blk = 1'b0;

assign ap_ST_fsm_state151_blk = 1'b0;

assign ap_ST_fsm_state152_blk = 1'b0;

assign ap_ST_fsm_state153_blk = 1'b0;

assign ap_ST_fsm_state154_blk = 1'b0;

assign ap_ST_fsm_state155_blk = 1'b0;

assign ap_ST_fsm_state156_blk = 1'b0;

assign ap_ST_fsm_state157_blk = 1'b0;

assign ap_ST_fsm_state158_blk = 1'b0;

assign ap_ST_fsm_state159_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state160_blk = 1'b0;

assign ap_ST_fsm_state161_blk = 1'b0;

assign ap_ST_fsm_state162_blk = 1'b0;

assign ap_ST_fsm_state163_blk = 1'b0;

assign ap_ST_fsm_state164_blk = 1'b0;

assign ap_ST_fsm_state165_blk = 1'b0;

always @ (*) begin
    if ((grp_wah_fu_676_ap_done == 1'b0)) begin
        ap_ST_fsm_state166_blk = 1'b1;
    end else begin
        ap_ST_fsm_state166_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_block_state167_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0)))) begin
        ap_ST_fsm_state167_blk = 1'b1;
    end else begin
        ap_ST_fsm_state167_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == OUTPUT_r_TREADY_int_regslice)) begin
        ap_ST_fsm_state168_blk = 1'b1;
    end else begin
        ap_ST_fsm_state168_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == OUTPUT_r_TREADY_int_regslice) | (regslice_both_OUTPUT_r_V_data_V_U_apdone_blk == 1'b1))) begin
        ap_ST_fsm_state169_blk = 1'b1;
    end else begin
        ap_ST_fsm_state169_blk = 1'b0;
    end
end

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

assign ap_ST_fsm_state1_blk = 1'b0;

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

always @ (*) begin
    if ((grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_done == 1'b0)) begin
        ap_ST_fsm_state58_blk = 1'b1;
    end else begin
        ap_ST_fsm_state58_blk = 1'b0;
    end
end

assign ap_ST_fsm_state59_blk = 1'b0;

always @ (*) begin
    if ((gmem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((icmp_ln188_reg_2089 == 1'd0) & (tmp_23_reg_1888 == 1'd1) & (1'd1 == and_ln197_1_reg_2097) & (1'b1 == ap_CS_fsm_state87)) | ((icmp_ln198_reg_2093 == 1'd1) & (icmp_ln188_reg_2089 == 1'd1) & (tmp_23_reg_1888 == 1'd1) & (1'b1 == ap_CS_fsm_state87)))) begin
        ap_phi_mux_axilite_out_local_2_phi_fu_550_p10 = or_ln107_reg_2072;
    end else begin
        ap_phi_mux_axilite_out_local_2_phi_fu_550_p10 = axilite_out_local_2_reg_547;
    end
end

always @ (*) begin
    if (((trunc_ln23_reg_1805 == 1'd1) & (1'b1 == ap_CS_fsm_state167))) begin
        ap_phi_mux_axilite_out_local_4_phi_fu_636_p4 = or_ln117_fu_1685_p2;
    end else begin
        ap_phi_mux_axilite_out_local_4_phi_fu_636_p4 = axilite_out_local_4_reg_633;
    end
end

always @ (*) begin
    if ((((icmp_ln188_reg_2089 == 1'd0) & (tmp_23_reg_1888 == 1'd1) & (1'd1 == and_ln197_1_reg_2097) & (1'b1 == ap_CS_fsm_state87)) | ((icmp_ln198_reg_2093 == 1'd1) & (icmp_ln188_reg_2089 == 1'd1) & (tmp_23_reg_1888 == 1'd1) & (1'b1 == ap_CS_fsm_state87)))) begin
        ap_phi_mux_empty_83_phi_fu_567_p10 = or_ln107_reg_2072;
    end else begin
        ap_phi_mux_empty_83_phi_fu_567_p10 = empty_83_reg_564;
    end
end

always @ (*) begin
    if (((trunc_ln23_reg_1805 == 1'd1) & (1'b1 == ap_CS_fsm_state167))) begin
        ap_phi_mux_empty_85_phi_fu_647_p4 = or_ln117_fu_1685_p2;
    end else begin
        ap_phi_mux_empty_85_phi_fu_647_p4 = empty_85_reg_644;
    end
end

always @ (*) begin
    if (((trunc_ln23_reg_1805 == 1'd1) & (1'b1 == ap_CS_fsm_state167))) begin
        ap_phi_mux_tmp_int_7_phi_fu_658_p4 = tmp_int_3_reg_2232;
    end else begin
        ap_phi_mux_tmp_int_7_phi_fu_658_p4 = tmp_int_7_reg_654;
    end
end

always @ (*) begin
    if (((tmp_23_reg_1888 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
        if (((icmp_ln188_reg_2089 == 1'd0) & (1'd1 == and_ln197_1_reg_2097))) begin
            ap_phi_mux_tmp_int_phi_fu_584_p10 = result_V_22_fu_1332_p3;
        end else if (((icmp_ln198_reg_2093 == 1'd1) & (icmp_ln188_reg_2089 == 1'd1))) begin
            ap_phi_mux_tmp_int_phi_fu_584_p10 = result_V_21_fu_1344_p3;
        end else begin
            ap_phi_mux_tmp_int_phi_fu_584_p10 = tmp_int_reg_581;
        end
    end else begin
        ap_phi_mux_tmp_int_phi_fu_584_p10 = tmp_int_reg_581;
    end
end

always @ (*) begin
    if (((trunc_ln23_reg_1805 == 1'd1) & (1'b1 == ap_CS_fsm_state167))) begin
        ap_sig_allocacmp_debug_output_local_0_load = debug_output_ret_reg_2242;
    end else begin
        ap_sig_allocacmp_debug_output_local_0_load = debug_output_local_0_fu_300;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state167_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0))) & (tmp_last_V_reg_1955 == 1'd1) & (1'b1 == ap_CS_fsm_state167))) begin
        axilite_out_ap_vld = 1'b1;
    end else begin
        axilite_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        compression_buffer_address0 = zext_ln169_fu_1112_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        compression_buffer_address0 = p_cast_fu_746_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        compression_buffer_address0 = grp_guitar_effects_Pipeline_LPF_Loop_fu_667_compression_buffer_address0;
    end else begin
        compression_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state2))) begin
        compression_buffer_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        compression_buffer_ce0 = grp_guitar_effects_Pipeline_LPF_Loop_fu_667_compression_buffer_ce0;
    end else begin
        compression_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        compression_buffer_d0 = abs_in_1_fu_1103_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        compression_buffer_d0 = 32'd0;
    end else begin
        compression_buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_23_reg_1888 == 1'd1) & (1'b1 == ap_CS_fsm_state21)) | ((1'b1 == ap_CS_fsm_state2) & (exitcond3136_fu_751_p2 == 1'd0)))) begin
        compression_buffer_we0 = 1'b1;
    end else begin
        compression_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state167_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0))) & (tmp_last_V_reg_1955 == 1'd1) & (1'b1 == ap_CS_fsm_state167))) begin
        debug_output_ap_vld = 1'b1;
    end else begin
        debug_output_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state164)) begin
        delay_buffer_address0 = zext_ln219_fu_1660_p1;
    end else if ((1'b1 == ap_CS_fsm_state150)) begin
        delay_buffer_address0 = zext_ln216_fu_1508_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        delay_buffer_address0 = p_cast5_fu_776_p1;
    end else begin
        delay_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state164) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state3))) begin
        delay_buffer_ce0 = 1'b1;
    end else begin
        delay_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state164)) begin
        delay_buffer_d0 = output_fu_1653_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        delay_buffer_d0 = 32'd0;
    end else begin
        delay_buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state164) | ((1'b1 == ap_CS_fsm_state3) & (exitcond3083_fu_781_p2 == 1'd0)))) begin
        delay_buffer_we0 = 1'b1;
    end else begin
        delay_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        gmem_ARADDR = sext_ln91_fu_887_p1;
    end else if (((1'b1 == ap_CS_fsm_state166) | ((trunc_ln23_reg_1805 == 1'd1) & (1'b1 == ap_CS_fsm_state165)))) begin
        gmem_ARADDR = grp_wah_fu_676_m_axi_gmem_ARADDR;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        gmem_ARLEN = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state166) | ((trunc_ln23_reg_1805 == 1'd1) & (1'b1 == ap_CS_fsm_state165)))) begin
        gmem_ARLEN = grp_wah_fu_676_m_axi_gmem_ARLEN;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        gmem_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state166) | ((trunc_ln23_reg_1805 == 1'd1) & (1'b1 == ap_CS_fsm_state165)))) begin
        gmem_ARVALID = grp_wah_fu_676_m_axi_gmem_ARVALID;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        gmem_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state166) | ((trunc_ln23_reg_1805 == 1'd1) & (1'b1 == ap_CS_fsm_state165)))) begin
        gmem_RREADY = grp_wah_fu_676_m_axi_gmem_RREADY;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_23_reg_1888 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_1123_ap_start = 1'b1;
    end else begin
        grp_fu_1123_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_24_reg_1892 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
        grp_fu_1359_ap_start = 1'b1;
    end else begin
        grp_fu_1359_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_24_reg_1892 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
        grp_fu_1371_ap_start = 1'b1;
    end else begin
        grp_fu_1371_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state166)) begin
        grp_fu_2247_ce = grp_wah_fu_676_grp_fu_2247_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_2247_ce = grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_2247_p_ce;
    end else begin
        grp_fu_2247_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state166)) begin
        grp_fu_2247_p0 = grp_wah_fu_676_grp_fu_2247_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_2247_p0 = grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_2247_p_din0;
    end else begin
        grp_fu_2247_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state166)) begin
        grp_fu_2247_p1 = grp_wah_fu_676_grp_fu_2247_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_2247_p1 = grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_2247_p_din1;
    end else begin
        grp_fu_2247_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state166)) begin
        grp_fu_701_ce = grp_wah_fu_676_grp_fu_701_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_701_ce = grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_701_p_ce;
    end else begin
        grp_fu_701_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state166)) begin
        grp_fu_701_p0 = grp_wah_fu_676_grp_fu_701_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_701_p0 = grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_701_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state158) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state81))) begin
        grp_fu_701_p0 = reg_719;
    end else begin
        grp_fu_701_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state166)) begin
        grp_fu_701_p1 = grp_wah_fu_676_grp_fu_701_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_701_p1 = grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_701_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state158)) begin
        grp_fu_701_p1 = delay_mult_read_reg_1754;
    end else if (((1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state81))) begin
        grp_fu_701_p1 = reg_725;
    end else begin
        grp_fu_701_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_705_p0 = conv18_i_reg_1918;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_705_p0 = conv30_i_reg_1923;
    end else begin
        grp_fu_705_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state166)) begin
        grp_fu_709_ce = grp_wah_fu_676_grp_fu_709_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_709_ce = grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_709_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state8) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state12)))) begin
        grp_fu_709_ce = 1'b1;
    end else begin
        grp_fu_709_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state166)) begin
        grp_fu_709_p0 = grp_wah_fu_676_grp_fu_709_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_709_p0 = grp_guitar_effects_Pipeline_LPF_Loop_fu_667_grp_fu_709_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        grp_fu_709_p0 = delay_buffer_load_reg_2178;
    end else if (((1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state75))) begin
        grp_fu_709_p0 = tmp_int_6_reg_533;
    end else if ((((icmp_ln188_fu_1155_p2 == 1'd0) & (1'd1 == and_ln197_1_fu_1182_p2) & (1'b1 == ap_CS_fsm_state59)) | ((icmp_ln198_fu_1160_p2 == 1'd1) & (icmp_ln188_fu_1155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state59)))) begin
        grp_fu_709_p0 = current_level_fu_1148_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_709_p0 = compression_max_threshold_read_reg_1764;
    end else begin
        grp_fu_709_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state12)))) begin
        grp_fu_712_ce = 1'b1;
    end else begin
        grp_fu_712_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        wah_values_buffer_address0 = zext_ln82_fu_806_p1;
    end else if ((1'b1 == ap_CS_fsm_state166)) begin
        wah_values_buffer_address0 = grp_wah_fu_676_wah_values_buffer_address0;
    end else begin
        wah_values_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        wah_values_buffer_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state166)) begin
        wah_values_buffer_ce0 = grp_wah_fu_676_wah_values_buffer_ce0;
    end else begin
        wah_values_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        wah_values_buffer_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state166)) begin
        wah_values_buffer_d0 = grp_wah_fu_676_wah_values_buffer_d0;
    end else begin
        wah_values_buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln82_fu_811_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        wah_values_buffer_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state166)) begin
        wah_values_buffer_we0 = grp_wah_fu_676_wah_values_buffer_we0;
    end else begin
        wah_values_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond3136_fu_751_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond3083_fu_781_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln82_fu_811_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln149_fu_955_p2 == 1'd1) & (icmp_ln147_fu_950_p2 == 1'd0) & (tmp_reg_1884 == 1'd1) & (1'b1 == INPUT_r_TVALID_int_regslice) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((icmp_ln147_fu_950_p2 == 1'd1) & (tmp_reg_1884 == 1'd1) & (1'b1 == INPUT_r_TVALID_int_regslice) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else if (((1'b1 == INPUT_r_TVALID_int_regslice) & (1'b1 == ap_CS_fsm_state14) & ((tmp_reg_1884 == 1'd0) | ((icmp_ln149_fu_955_p2 == 1'd0) & (icmp_ln147_fu_950_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((tmp_23_reg_1888 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if (((grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            if (((icmp_ln198_fu_1160_p2 == 1'd1) & (icmp_ln188_fu_1155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else if (((1'b1 == ap_CS_fsm_state59) & (((icmp_ln198_fu_1160_p2 == 1'd0) & (icmp_ln188_fu_1155_p2 == 1'd1)) | ((icmp_ln188_fu_1155_p2 == 1'd0) & (1'd0 == and_ln197_1_fu_1182_p2))))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            if (((tmp_24_reg_1892 == 1'd0) & (1'b1 == ap_CS_fsm_state87))) begin
                ap_NS_fsm = ap_ST_fsm_state165;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            if (((trunc_ln23_reg_1805 == 1'd0) & (1'b1 == ap_CS_fsm_state165))) begin
                ap_NS_fsm = ap_ST_fsm_state167;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state166;
            end
        end
        ap_ST_fsm_state166 : begin
            if (((grp_wah_fu_676_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state166))) begin
                ap_NS_fsm = ap_ST_fsm_state167;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state166;
            end
        end
        ap_ST_fsm_state167 : begin
            if ((~((1'b1 == ap_block_state167_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0))) & (tmp_last_V_reg_1955 == 1'd1) & (1'b1 == ap_CS_fsm_state167))) begin
                ap_NS_fsm = ap_ST_fsm_state169;
            end else if ((~((1'b1 == ap_block_state167_io) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0))) & (tmp_last_V_reg_1955 == 1'd0) & (1'b1 == ap_CS_fsm_state167))) begin
                ap_NS_fsm = ap_ST_fsm_state168;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state167;
            end
        end
        ap_ST_fsm_state168 : begin
            if (((1'b1 == ap_CS_fsm_state168) & (1'b1 == OUTPUT_r_TREADY_int_regslice))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state168;
            end
        end
        ap_ST_fsm_state169 : begin
            if ((~((1'b0 == OUTPUT_r_TREADY_int_regslice) | (regslice_both_OUTPUT_r_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state169))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state169;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign INPUT_r_TREADY = regslice_both_INPUT_r_V_data_V_U_ack_in;

assign OUTPUT_r_TVALID = regslice_both_OUTPUT_r_V_data_V_U_vld_out;

assign abs_in_1_fu_1103_p3 = ((tmp_27_fu_1089_p3[0:0] == 1'b1) ? sub_ln165_fu_1097_p2 : tmp_int_6_reg_533);

assign add_ln346_1_fu_1234_p2 = ($signed(zext_ln346_1_fu_1230_p1) + $signed(9'd385));

assign add_ln346_2_fu_1535_p2 = ($signed(zext_ln346_2_fu_1531_p1) + $signed(9'd385));

assign add_ln346_fu_1407_p2 = ($signed(zext_ln346_fu_1403_p1) + $signed(9'd385));

assign add_ln82_fu_817_p2 = (i_fu_276 + 7'd1);

assign and_ln197_1_fu_1182_p2 = (icmp_ln197_fu_1166_p2 & and_ln197_fu_1176_p2);

assign and_ln197_fu_1176_p2 = (icmp_ln198_fu_1160_p2 & icmp_ln197_1_fu_1171_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd148];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd150];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd152];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd155];

assign ap_CS_fsm_state157 = ap_CS_fsm[32'd156];

assign ap_CS_fsm_state158 = ap_CS_fsm[32'd157];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state161 = ap_CS_fsm[32'd160];

assign ap_CS_fsm_state162 = ap_CS_fsm[32'd161];

assign ap_CS_fsm_state163 = ap_CS_fsm[32'd162];

assign ap_CS_fsm_state164 = ap_CS_fsm[32'd163];

assign ap_CS_fsm_state165 = ap_CS_fsm[32'd164];

assign ap_CS_fsm_state166 = ap_CS_fsm[32'd165];

assign ap_CS_fsm_state167 = ap_CS_fsm[32'd166];

assign ap_CS_fsm_state168 = ap_CS_fsm[32'd167];

assign ap_CS_fsm_state169 = ap_CS_fsm[32'd168];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

always @ (*) begin
    ap_block_state167 = (((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0)));
end

always @ (*) begin
    ap_block_state167_io = (((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0)));
end

always @ (*) begin
    ap_block_state169 = ((1'b0 == OUTPUT_r_TREADY_int_regslice) | (regslice_both_OUTPUT_r_V_data_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_condition_2952 = (~(((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd1)) | ((1'b0 == OUTPUT_r_TREADY_int_regslice) & (tmp_last_V_reg_1955 == 1'd0))) & (1'b1 == ap_CS_fsm_state167));
end

assign ap_phi_mux_tmp_int_6_phi_fu_536_p8 = tmp_int_6_reg_533;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign conv7_i_i_i_fu_903_p1 = $signed(distortion_clip_factor_read_reg_1777);

assign current_level_fu_1148_p3 = ((icmp_ln180_reg_2067[0:0] == 1'b1) ? compression_min_threshold_read_reg_1770 : grp_guitar_effects_Pipeline_LPF_Loop_fu_667_p_out);

assign current_sample_fu_1701_p2 = (current_sample_1_fu_280 + 32'd1);

assign data_V_2_fu_1204_p1 = reg_730;

assign data_V_3_fu_1513_p1 = reg_730;

assign data_V_fu_1377_p1 = reg_730;

assign empty_75_fu_757_p2 = (empty_fu_252 + 9'd1);

assign empty_78_fu_787_p2 = (empty_76_fu_272 + 17'd1);

assign exitcond3083_fu_781_p2 = ((empty_76_fu_272 == 17'd88200) ? 1'b1 : 1'b0);

assign exitcond3136_fu_751_p2 = ((empty_fu_252 == 9'd441) ? 1'b1 : 1'b0);

assign grp_fu_1031_p1 = conv7_i_i_i_reg_1912;

assign grp_fu_1123_p0 = (compression_buffer_index_fu_292 + 32'd1);

assign grp_fu_1123_p1 = 32'd441;

assign grp_fu_1359_p0 = (delay_buffer_index_fu_288 - delay_samples_read_reg_1749);

assign grp_fu_1359_p1 = 32'd88200;

assign grp_fu_1371_p0 = (delay_buffer_index_fu_288 + 32'd1);

assign grp_fu_1371_p1 = 32'd88200;

assign grp_fu_973_p1 = conv7_i_i_i_reg_1912;

assign grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_start = grp_guitar_effects_Pipeline_LPF_Loop_fu_667_ap_start_reg;

assign grp_wah_fu_676_ap_start = grp_wah_fu_676_ap_start_reg;

assign icmp_ln1049_1_fu_999_p2 = ((trunc_ln1049_1_reg_2012 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln1049_fu_1057_p2 = ((trunc_ln1049_reg_2039 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln147_fu_950_p2 = (($signed(INPUT_r_TDATA_int_regslice) > $signed(distortion_threshold_read_reg_1782)) ? 1'b1 : 1'b0);

assign icmp_ln149_fu_955_p2 = (($signed(INPUT_r_TDATA_int_regslice) < $signed(negative_threshold_reg_1907)) ? 1'b1 : 1'b0);

assign icmp_ln180_fu_1133_p2 = (($signed(current_sample_1_fu_280) < $signed(32'd441)) ? 1'b1 : 1'b0);

assign icmp_ln188_fu_1155_p2 = (($signed(current_level_fu_1148_p3) > $signed(compression_max_threshold_read_reg_1764)) ? 1'b1 : 1'b0);

assign icmp_ln197_1_fu_1171_p2 = (($signed(current_level_fu_1148_p3) > $signed(compression_zero_threshold_read_reg_1759)) ? 1'b1 : 1'b0);

assign icmp_ln197_fu_1166_p2 = (($signed(current_level_fu_1148_p3) < $signed(compression_min_threshold_read_reg_1770)) ? 1'b1 : 1'b0);

assign icmp_ln198_fu_1160_p2 = (($signed(current_level_fu_1148_p3) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_811_p2 = ((i_fu_276 == 7'd100) ? 1'b1 : 1'b0);

assign isNeg_3_fu_1240_p3 = add_ln346_1_fu_1234_p2[32'd8];

assign isNeg_4_fu_1541_p3 = add_ln346_2_fu_1535_p2[32'd8];

assign isNeg_fu_1413_p3 = add_ln346_fu_1407_p2[32'd8];

assign mantissa_2_fu_1266_p4 = {{{{1'd1}, {p_Result_52_reg_2106}}}, {1'd0}};

assign mantissa_3_fu_1567_p4 = {{{{1'd1}, {p_Result_54_reg_2188}}}, {1'd0}};

assign mantissa_fu_1439_p4 = {{{{1'd1}, {p_Result_50_reg_2147}}}, {1'd0}};

assign negative_threshold_fu_898_p2 = (32'd0 - distortion_threshold_read_reg_1782);

assign or_ln102_fu_944_p2 = (empty_80_fu_284 | 32'd8);

assign or_ln107_fu_1139_p2 = (empty_82_reg_519 | 32'd4);

assign or_ln112_fu_1634_p2 = (empty_83_reg_564 | 32'd2);

assign or_ln117_fu_1685_p2 = (empty_84_reg_611 | 32'd1);

assign output_fu_1653_p2 = (result_V_fu_1647_p3 + tmp_int_reg_581);

assign p_Result_39_fu_992_p3 = r_V_35_reg_2000[32'd39];

assign p_Result_50_fu_1399_p1 = data_V_fu_1377_p1[22:0];

assign p_Result_52_fu_1226_p1 = data_V_2_fu_1204_p1[22:0];

assign p_Result_53_fu_1640_p3 = data_V_3_reg_2183[32'd31];

assign p_Result_54_fu_1527_p1 = data_V_3_fu_1513_p1[22:0];

assign p_Result_s_fu_1050_p3 = r_V_34_reg_2027[32'd39];

assign p_cast5_fu_776_p1 = empty_76_fu_272;

assign p_cast_fu_746_p1 = empty_fu_252;

assign r_V_25_fu_965_p2 = (INPUT_r_TDATA_int_regslice - distortion_threshold_read_reg_1782);

assign r_V_28_fu_1459_p2 = zext_ln15_fu_1448_p1 >> zext_ln1488_fu_1455_p1;

assign r_V_29_fu_1465_p2 = zext_ln15_fu_1448_p1 << zext_ln1488_fu_1455_p1;

assign r_V_30_fu_1286_p2 = zext_ln15_2_fu_1275_p1 >> zext_ln1488_3_fu_1282_p1;

assign r_V_31_fu_1292_p2 = zext_ln15_2_fu_1275_p1 << zext_ln1488_3_fu_1282_p1;

assign r_V_32_fu_1587_p2 = zext_ln15_3_fu_1576_p1 >> zext_ln1488_4_fu_1583_p1;

assign r_V_33_fu_1593_p2 = zext_ln15_3_fu_1576_p1 << zext_ln1488_4_fu_1583_p1;

assign r_V_fu_960_p2 = (INPUT_r_TDATA_int_regslice + distortion_threshold_read_reg_1782);

assign result_1_fu_1023_p2 = (ret_V_11_fu_1016_p3 - distortion_threshold_read_reg_1782);

assign result_V_13_fu_1339_p2 = (32'd0 - val_reg_2162);

assign result_V_17_fu_1327_p2 = (32'd0 - val_2_reg_2121);

assign result_V_19_fu_1628_p2 = (32'd0 - val_3_fu_1621_p3);

assign result_V_21_fu_1344_p3 = ((p_Result_49_reg_2142[0:0] == 1'b1) ? result_V_13_fu_1339_p2 : val_reg_2162);

assign result_V_22_fu_1332_p3 = ((p_Result_51_reg_2101[0:0] == 1'b1) ? result_V_17_fu_1327_p2 : val_2_reg_2121);

assign result_V_fu_1647_p3 = ((p_Result_53_fu_1640_p3[0:0] == 1'b1) ? result_V_19_reg_2208 : val_3_reg_2203);

assign result_fu_1081_p2 = (ret_V_9_fu_1074_p3 + distortion_threshold_read_reg_1782);

assign ret_V_10_fu_1004_p2 = (ret_V_9_cast_reg_2005 + 32'd1);

assign ret_V_11_fu_1016_p3 = ((p_Result_39_fu_992_p3[0:0] == 1'b1) ? select_ln1048_1_fu_1009_p3 : ret_V_9_cast_reg_2005);

assign ret_V_9_fu_1074_p3 = ((p_Result_s_fu_1050_p3[0:0] == 1'b1) ? select_ln1048_fu_1067_p3 : ret_V_cast_reg_2032);

assign ret_V_fu_1062_p2 = (ret_V_cast_reg_2032 + 32'd1);

assign select_ln1048_1_fu_1009_p3 = ((icmp_ln1049_1_fu_999_p2[0:0] == 1'b1) ? ret_V_9_cast_reg_2005 : ret_V_10_fu_1004_p2);

assign select_ln1048_fu_1067_p3 = ((icmp_ln1049_fu_1057_p2[0:0] == 1'b1) ? ret_V_cast_reg_2032 : ret_V_fu_1062_p2);

assign sext_ln1488_2_fu_1279_p1 = $signed(ush_3_reg_2116);

assign sext_ln1488_3_fu_1580_p1 = $signed(ush_4_reg_2198);

assign sext_ln1488_fu_1452_p1 = $signed(ush_reg_2157);

assign sext_ln1512_2_fu_1254_p1 = $signed(sub_ln1512_4_fu_1248_p2);

assign sext_ln1512_3_fu_1555_p1 = $signed(sub_ln1512_fu_1549_p2);

assign sext_ln1512_fu_1427_p1 = $signed(sub_ln1512_3_fu_1421_p2);

assign sext_ln91_fu_887_p1 = $signed(trunc_ln_fu_878_p4);

assign sub_ln1512_3_fu_1421_p2 = (8'd127 - xs_exp_V_fu_1389_p4);

assign sub_ln1512_4_fu_1248_p2 = (8'd127 - xs_exp_V_2_fu_1216_p4);

assign sub_ln1512_fu_1549_p2 = (8'd127 - xs_exp_V_4_fu_1517_p4);

assign sub_ln165_fu_1097_p2 = (32'd0 - tmp_int_6_reg_533);

assign tmp_27_fu_1089_p3 = tmp_int_6_reg_533[32'd31];

assign tmp_2_fu_1310_p4 = {{r_V_31_fu_1292_p2[55:24]}};

assign tmp_31_fu_1471_p3 = r_V_28_fu_1459_p2[32'd24];

assign tmp_35_fu_1298_p3 = r_V_30_fu_1286_p2[32'd24];

assign tmp_39_fu_1599_p3 = r_V_32_fu_1587_p2[32'd24];

assign tmp_3_fu_1611_p4 = {{r_V_33_fu_1593_p2[55:24]}};

assign tmp_s_fu_1483_p4 = {{r_V_29_fu_1465_p2[55:24]}};

assign trunc_ln1049_1_fu_988_p1 = grp_fu_973_p2[6:0];

assign trunc_ln1049_fu_1046_p1 = grp_fu_1031_p2[6:0];

assign trunc_ln216_fu_1505_p1 = srem_ln216_reg_2168[16:0];

assign trunc_ln23_fu_734_p1 = control[0:0];

assign trunc_ln67_fu_1129_p1 = grp_fu_1123_p2[9:0];

assign trunc_ln76_fu_1668_p1 = current_sample_1_fu_280[30:0];

assign trunc_ln_fu_878_p4 = {{wah_coeffs_read_reg_1738[63:2]}};

assign ush_3_fu_1258_p3 = ((isNeg_3_fu_1240_p3[0:0] == 1'b1) ? sext_ln1512_2_fu_1254_p1 : add_ln346_1_fu_1234_p2);

assign ush_4_fu_1559_p3 = ((isNeg_4_fu_1541_p3[0:0] == 1'b1) ? sext_ln1512_3_fu_1555_p1 : add_ln346_2_fu_1535_p2);

assign ush_fu_1431_p3 = ((isNeg_fu_1413_p3[0:0] == 1'b1) ? sext_ln1512_fu_1427_p1 : add_ln346_fu_1407_p2);

assign val_2_fu_1320_p3 = ((isNeg_3_reg_2111[0:0] == 1'b1) ? zext_ln818_2_fu_1306_p1 : tmp_2_fu_1310_p4);

assign val_3_fu_1621_p3 = ((isNeg_4_reg_2193[0:0] == 1'b1) ? zext_ln818_3_fu_1607_p1 : tmp_3_fu_1611_p4);

assign val_fu_1493_p3 = ((isNeg_reg_2152[0:0] == 1'b1) ? zext_ln818_fu_1479_p1 : tmp_s_fu_1483_p4);

assign xs_exp_V_2_fu_1216_p4 = {{data_V_2_fu_1204_p1[30:23]}};

assign xs_exp_V_4_fu_1517_p4 = {{data_V_3_fu_1513_p1[30:23]}};

assign xs_exp_V_fu_1389_p4 = {{data_V_fu_1377_p1[30:23]}};

assign zext_ln1488_3_fu_1282_p1 = $unsigned(sext_ln1488_2_fu_1279_p1);

assign zext_ln1488_4_fu_1583_p1 = $unsigned(sext_ln1488_3_fu_1580_p1);

assign zext_ln1488_fu_1455_p1 = $unsigned(sext_ln1488_fu_1452_p1);

assign zext_ln15_2_fu_1275_p1 = mantissa_2_fu_1266_p4;

assign zext_ln15_3_fu_1576_p1 = mantissa_3_fu_1567_p4;

assign zext_ln15_fu_1448_p1 = mantissa_fu_1439_p4;

assign zext_ln169_fu_1112_p1 = compression_buffer_index_fu_292;

assign zext_ln216_fu_1508_p1 = trunc_ln216_fu_1505_p1;

assign zext_ln219_fu_1660_p1 = delay_buffer_index_load_reg_2127;

assign zext_ln346_1_fu_1230_p1 = xs_exp_V_2_fu_1216_p4;

assign zext_ln346_2_fu_1531_p1 = xs_exp_V_4_fu_1517_p4;

assign zext_ln346_fu_1403_p1 = xs_exp_V_fu_1389_p4;

assign zext_ln818_2_fu_1306_p1 = tmp_35_fu_1298_p3;

assign zext_ln818_3_fu_1607_p1 = tmp_39_fu_1599_p3;

assign zext_ln818_fu_1479_p1 = tmp_31_fu_1471_p3;

assign zext_ln82_fu_806_p1 = i_fu_276;

always @ (posedge ap_clk) begin
    or_ln102_reg_1969[3] <= 1'b1;
    or_ln107_reg_2072[2] <= 1'b1;
end


reg find_kernel_block = 0;
// synthesis translate_off
`include "guitar_effects_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //guitar_effects

