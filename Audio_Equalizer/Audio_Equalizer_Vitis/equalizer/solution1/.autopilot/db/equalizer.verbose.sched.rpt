

================================================================
== Vitis HLS Report for 'equalizer'
================================================================
* Date:           Mon Apr 22 15:28:23 2024

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:48:16 MDT 2022)
* Project:        equalizer
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  |  20.00 ns|  14.600 ns|     5.40 ns|
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_34_1  |        ?|        ?|         ?|          -|          -|     ?|        no|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 4 6 
3 --> 6 
4 --> 5 
5 --> 6 
6 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.70>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 7 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%state = alloca i32 1"   --->   Operation 8 'alloca' 'state' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 9 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.00ns)   --->   "%coefs_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %coefs"   --->   Operation 10 'read' 'coefs_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%tmp_last_V_1_loc = alloca i64 1"   --->   Operation 11 'alloca' 'tmp_last_V_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_4" [equalizer.cpp:3]   --->   Operation 12 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln3 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_5, i32 0, i32 0, void @empty_10, i32 0, i32 0, void @empty_10, void @empty_10, void @empty_10, i32 0, i32 0, i32 0, i32 0, void @empty_10, void @empty_10, i32 4294967295, i32 0" [equalizer.cpp:3]   --->   Operation 13 'specinterface' 'specinterface_ln3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty_7, i32 0, i32 0, void @empty_10, i32 0, i32 99, void @empty_11, void @empty_12, void @empty_10, i32 16, i32 16, i32 16, i32 16, void @empty_10, void @empty_10, i32 4294967295, i32 0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 15 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %output_r_V_data_V, i4 %output_r_V_keep_V, i4 %output_r_V_strb_V, i1 %output_r_V_user_V, i1 %output_r_V_last_V, i1 %output_r_V_id_V, i1 %output_r_V_dest_V, void @empty_13, i32 1, i32 1, void @empty, i32 0, i32 0, void @empty_10, void @empty_10, void @empty_10, i32 0, i32 0, i32 0, i32 0, void @empty_10, void @empty_10, i32 4294967295, i32 0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %output_r_V_data_V"   --->   Operation 17 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %output_r_V_keep_V"   --->   Operation 18 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %output_r_V_strb_V"   --->   Operation 19 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %output_r_V_user_V"   --->   Operation 20 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %output_r_V_last_V"   --->   Operation 21 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %output_r_V_id_V"   --->   Operation 22 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %output_r_V_dest_V"   --->   Operation 23 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %coefs, void @empty_0, i32 0, i32 0, void @empty_10, i32 0, i32 0, void @empty_1, void @empty_2, void @empty_10, i32 0, i32 0, i32 0, i32 0, void @empty_10, void @empty_3, i32 4294967295, i32 0"   --->   Operation 24 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %coefs, void @empty_9, i32 0, i32 0, void @empty_10, i32 0, i32 0, void @empty_10, void @empty_10, void @empty_10, i32 0, i32 0, i32 0, i32 0, void @empty_10, void @empty_3, i32 4294967295, i32 0"   --->   Operation 25 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V, void @empty_13, i32 1, i32 1, void @empty, i32 0, i32 0, void @empty_10, void @empty_10, void @empty_10, i32 0, i32 0, i32 0, i32 0, void @empty_10, void @empty_10, i32 4294967295, i32 0"   --->   Operation 26 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %input_r_V_data_V"   --->   Operation 27 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %input_r_V_keep_V"   --->   Operation 28 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %input_r_V_strb_V"   --->   Operation 29 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %input_r_V_user_V"   --->   Operation 30 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %input_r_V_last_V"   --->   Operation 31 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %input_r_V_id_V"   --->   Operation 32 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %input_r_V_dest_V"   --->   Operation 33 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (1.70ns)   --->   "%store_ln34 = store i32 0, i32 %i" [equalizer.cpp:34]   --->   Operation 34 'store' 'store_ln34' <Predicate = true> <Delay = 1.70>
ST_1 : Operation 35 [1/1] (1.70ns)   --->   "%store_ln34 = store i32 0, i32 %state" [equalizer.cpp:34]   --->   Operation 35 'store' 'store_ln34' <Predicate = true> <Delay = 1.70>
ST_1 : Operation 36 [1/1] (1.70ns)   --->   "%store_ln34 = store i32 0, i32 %empty" [equalizer.cpp:34]   --->   Operation 36 'store' 'store_ln34' <Predicate = true> <Delay = 1.70>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%br_ln0 = br void %while.body"   --->   Operation 37 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.36>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%state_load = load i32 %state" [equalizer.cpp:37]   --->   Operation 38 'load' 'state_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8"   --->   Operation 39 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%empty_19 = read i44 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V"   --->   Operation 40 'read' 'empty_19' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%tmp_data_V = extractvalue i44 %empty_19"   --->   Operation 41 'extractvalue' 'tmp_data_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_keep_V = extractvalue i44 %empty_19"   --->   Operation 42 'extractvalue' 'tmp_keep_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_strb_V = extractvalue i44 %empty_19"   --->   Operation 43 'extractvalue' 'tmp_strb_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_user_V = extractvalue i44 %empty_19"   --->   Operation 44 'extractvalue' 'tmp_user_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_last_V = extractvalue i44 %empty_19"   --->   Operation 45 'extractvalue' 'tmp_last_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_id_V = extractvalue i44 %empty_19"   --->   Operation 46 'extractvalue' 'tmp_id_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_dest_V = extractvalue i44 %empty_19"   --->   Operation 47 'extractvalue' 'tmp_dest_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (1.58ns)   --->   "%switch_ln37 = switch i32 %state_load, void %sw.epilog, i32 0, void %sw.bb, i32 17, void %VITIS_LOOP_48_2, i32 4096, void %for.inc" [equalizer.cpp:37]   --->   Operation 48 'switch' 'switch_ln37' <Predicate = true> <Delay = 1.58>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%signal_shift_reg_23_load = load i32 %signal_shift_reg_23" [equalizer.cpp:70]   --->   Operation 49 'load' 'signal_shift_reg_23_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_23_load, i32 %signal_shift_reg_24" [equalizer.cpp:70]   --->   Operation 50 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%signal_shift_reg_22_load = load i32 %signal_shift_reg_22" [equalizer.cpp:70]   --->   Operation 51 'load' 'signal_shift_reg_22_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_22_load, i32 %signal_shift_reg_23" [equalizer.cpp:70]   --->   Operation 52 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%signal_shift_reg_21_load = load i32 %signal_shift_reg_21" [equalizer.cpp:70]   --->   Operation 53 'load' 'signal_shift_reg_21_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_21_load, i32 %signal_shift_reg_22" [equalizer.cpp:70]   --->   Operation 54 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%signal_shift_reg_20_load = load i32 %signal_shift_reg_20" [equalizer.cpp:70]   --->   Operation 55 'load' 'signal_shift_reg_20_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_20_load, i32 %signal_shift_reg_21" [equalizer.cpp:70]   --->   Operation 56 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%signal_shift_reg_19_load = load i32 %signal_shift_reg_19" [equalizer.cpp:70]   --->   Operation 57 'load' 'signal_shift_reg_19_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_19_load, i32 %signal_shift_reg_20" [equalizer.cpp:70]   --->   Operation 58 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%signal_shift_reg_18_load = load i32 %signal_shift_reg_18" [equalizer.cpp:70]   --->   Operation 59 'load' 'signal_shift_reg_18_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_18_load, i32 %signal_shift_reg_19" [equalizer.cpp:70]   --->   Operation 60 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%signal_shift_reg_17_load = load i32 %signal_shift_reg_17" [equalizer.cpp:70]   --->   Operation 61 'load' 'signal_shift_reg_17_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_17_load, i32 %signal_shift_reg_18" [equalizer.cpp:70]   --->   Operation 62 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%signal_shift_reg_16_load = load i32 %signal_shift_reg_16" [equalizer.cpp:70]   --->   Operation 63 'load' 'signal_shift_reg_16_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_16_load, i32 %signal_shift_reg_17" [equalizer.cpp:70]   --->   Operation 64 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%signal_shift_reg_15_load = load i32 %signal_shift_reg_15" [equalizer.cpp:70]   --->   Operation 65 'load' 'signal_shift_reg_15_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_15_load, i32 %signal_shift_reg_16" [equalizer.cpp:70]   --->   Operation 66 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%signal_shift_reg_14_load = load i32 %signal_shift_reg_14" [equalizer.cpp:70]   --->   Operation 67 'load' 'signal_shift_reg_14_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_14_load, i32 %signal_shift_reg_15" [equalizer.cpp:70]   --->   Operation 68 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%signal_shift_reg_13_load = load i32 %signal_shift_reg_13" [equalizer.cpp:70]   --->   Operation 69 'load' 'signal_shift_reg_13_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_13_load, i32 %signal_shift_reg_14" [equalizer.cpp:70]   --->   Operation 70 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%signal_shift_reg_12_load = load i32 %signal_shift_reg_12" [equalizer.cpp:70]   --->   Operation 71 'load' 'signal_shift_reg_12_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_12_load, i32 %signal_shift_reg_13" [equalizer.cpp:70]   --->   Operation 72 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%signal_shift_reg_11_load = load i32 %signal_shift_reg_11" [equalizer.cpp:70]   --->   Operation 73 'load' 'signal_shift_reg_11_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_11_load, i32 %signal_shift_reg_12" [equalizer.cpp:70]   --->   Operation 74 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%signal_shift_reg_10_load = load i32 %signal_shift_reg_10" [equalizer.cpp:70]   --->   Operation 75 'load' 'signal_shift_reg_10_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_10_load, i32 %signal_shift_reg_11" [equalizer.cpp:70]   --->   Operation 76 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%signal_shift_reg_9_load = load i32 %signal_shift_reg_9" [equalizer.cpp:70]   --->   Operation 77 'load' 'signal_shift_reg_9_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_9_load, i32 %signal_shift_reg_10" [equalizer.cpp:70]   --->   Operation 78 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%signal_shift_reg_8_load = load i32 %signal_shift_reg_8" [equalizer.cpp:70]   --->   Operation 79 'load' 'signal_shift_reg_8_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_8_load, i32 %signal_shift_reg_9" [equalizer.cpp:70]   --->   Operation 80 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%signal_shift_reg_7_load = load i32 %signal_shift_reg_7" [equalizer.cpp:70]   --->   Operation 81 'load' 'signal_shift_reg_7_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_7_load, i32 %signal_shift_reg_8" [equalizer.cpp:70]   --->   Operation 82 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%signal_shift_reg_6_load = load i32 %signal_shift_reg_6" [equalizer.cpp:70]   --->   Operation 83 'load' 'signal_shift_reg_6_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_6_load, i32 %signal_shift_reg_7" [equalizer.cpp:70]   --->   Operation 84 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (0.00ns)   --->   "%signal_shift_reg_5_load = load i32 %signal_shift_reg_5" [equalizer.cpp:70]   --->   Operation 85 'load' 'signal_shift_reg_5_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_5_load, i32 %signal_shift_reg_6" [equalizer.cpp:70]   --->   Operation 86 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%signal_shift_reg_4_load = load i32 %signal_shift_reg_4" [equalizer.cpp:70]   --->   Operation 87 'load' 'signal_shift_reg_4_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_4_load, i32 %signal_shift_reg_5" [equalizer.cpp:70]   --->   Operation 88 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (0.00ns)   --->   "%signal_shift_reg_3_load = load i32 %signal_shift_reg_3" [equalizer.cpp:70]   --->   Operation 89 'load' 'signal_shift_reg_3_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_3_load, i32 %signal_shift_reg_4" [equalizer.cpp:70]   --->   Operation 90 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (0.00ns)   --->   "%signal_shift_reg_2_load = load i32 %signal_shift_reg_2" [equalizer.cpp:70]   --->   Operation 91 'load' 'signal_shift_reg_2_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 92 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_2_load, i32 %signal_shift_reg_3" [equalizer.cpp:70]   --->   Operation 92 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 93 [1/1] (0.00ns)   --->   "%signal_shift_reg_1_load = load i32 %signal_shift_reg_1" [equalizer.cpp:70]   --->   Operation 93 'load' 'signal_shift_reg_1_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 94 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_1_load, i32 %signal_shift_reg_2" [equalizer.cpp:70]   --->   Operation 94 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 95 [1/1] (0.00ns)   --->   "%signal_shift_reg_0_load = load i32 %signal_shift_reg_0" [equalizer.cpp:70]   --->   Operation 95 'load' 'signal_shift_reg_0_load' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 96 [1/1] (0.00ns)   --->   "%store_ln70 = store i32 %signal_shift_reg_0_load, i32 %signal_shift_reg_1" [equalizer.cpp:70]   --->   Operation 96 'store' 'store_ln70' <Predicate = (state_load == 4096)> <Delay = 0.00>
ST_2 : Operation 97 [2/2] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %output_r_V_data_V, i4 %output_r_V_keep_V, i4 %output_r_V_strb_V, i1 %output_r_V_user_V, i1 %output_r_V_last_V, i1 %output_r_V_id_V, i1 %output_r_V_dest_V, i32 0, i4 %tmp_keep_V, i4 %tmp_strb_V, i1 %tmp_user_V, i1 %tmp_last_V, i1 %tmp_id_V, i1 %tmp_dest_V"   --->   Operation 97 'write' 'write_ln304' <Predicate = (state_load == 4096)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 98 [1/1] (1.70ns)   --->   "%store_ln89 = store i32 0, i32 %i" [equalizer.cpp:89]   --->   Operation 98 'store' 'store_ln89' <Predicate = (state_load == 4096)> <Delay = 1.70>
ST_2 : Operation 99 [1/1] (0.00ns)   --->   "%empty_20 = wait i32 @_ssdm_op_Wait"   --->   Operation 99 'wait' 'empty_20' <Predicate = (state_load == 17)> <Delay = 0.00>
ST_2 : Operation 100 [1/1] (0.00ns)   --->   "%i_load = load i32 %i" [equalizer.cpp:43]   --->   Operation 100 'load' 'i_load' <Predicate = (state_load == 0)> <Delay = 0.00>
ST_2 : Operation 101 [1/1] (2.47ns)   --->   "%icmp_ln41 = icmp_eq  i32 %tmp_data_V, i32 48879" [equalizer.cpp:41]   --->   Operation 101 'icmp' 'icmp_ln41' <Predicate = (state_load == 0)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 102 [1/1] (2.55ns)   --->   "%add_ln43 = add i32 %i_load, i32 4294967295" [equalizer.cpp:43]   --->   Operation 102 'add' 'add_ln43' <Predicate = (state_load == 0)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 103 [1/1] (0.69ns)   --->   "%i_1 = select i1 %icmp_ln41, i32 %add_ln43, i32 %i_load" [equalizer.cpp:41]   --->   Operation 103 'select' 'i_1' <Predicate = (state_load == 0)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 104 [1/1] (1.18ns)   --->   "%select_ln9 = select i1 %icmp_ln41, i32 17, i32 0" [equalizer.cpp:9]   --->   Operation 104 'select' 'select_ln9' <Predicate = (state_load == 0)> <Delay = 1.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 105 [1/1] (0.00ns)   --->   "%bitcast_ln45 = bitcast i32 %tmp_data_V" [equalizer.cpp:45]   --->   Operation 105 'bitcast' 'bitcast_ln45' <Predicate = (state_load == 0)> <Delay = 0.00>
ST_2 : Operation 106 [1/1] (1.70ns)   --->   "%store_ln45 = store i32 %i_1, i32 %i" [equalizer.cpp:45]   --->   Operation 106 'store' 'store_ln45' <Predicate = (state_load == 0)> <Delay = 1.70>
ST_2 : Operation 107 [1/1] (1.70ns)   --->   "%store_ln45 = store i32 %select_ln9, i32 %state" [equalizer.cpp:45]   --->   Operation 107 'store' 'store_ln45' <Predicate = (state_load == 0)> <Delay = 1.70>
ST_2 : Operation 108 [1/1] (1.70ns)   --->   "%store_ln45 = store i32 %bitcast_ln45, i32 %empty" [equalizer.cpp:45]   --->   Operation 108 'store' 'store_ln45' <Predicate = (state_load == 0)> <Delay = 1.70>
ST_2 : Operation 109 [1/1] (1.58ns)   --->   "%br_ln45 = br void %sw.epilog" [equalizer.cpp:45]   --->   Operation 109 'br' 'br_ln45' <Predicate = (state_load == 0)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 1.70>
ST_3 : Operation 110 [1/1] (0.00ns)   --->   "%p_load = load i32 %empty" [equalizer.cpp:77]   --->   Operation 110 'load' 'p_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 111 [1/1] (0.00ns)   --->   "%store_ln77 = store i32 %p_load, i32 %signal_shift_reg_0" [equalizer.cpp:77]   --->   Operation 111 'store' 'store_ln77' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 112 [1/2] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A.i1P0A.i1P0A.i1P0A, i32 %output_r_V_data_V, i4 %output_r_V_keep_V, i4 %output_r_V_strb_V, i1 %output_r_V_user_V, i1 %output_r_V_last_V, i1 %output_r_V_id_V, i1 %output_r_V_dest_V, i32 0, i4 %tmp_keep_V, i4 %tmp_strb_V, i1 %tmp_user_V, i1 %tmp_last_V, i1 %tmp_id_V, i1 %tmp_dest_V"   --->   Operation 112 'write' 'write_ln304' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 113 [1/1] (1.70ns)   --->   "%store_ln89 = store i32 4096, i32 %state" [equalizer.cpp:89]   --->   Operation 113 'store' 'store_ln89' <Predicate = true> <Delay = 1.70>
ST_3 : Operation 114 [1/1] (1.58ns)   --->   "%br_ln89 = br void %sw.epilog" [equalizer.cpp:89]   --->   Operation 114 'br' 'br_ln89' <Predicate = true> <Delay = 1.58>

State 4 <SV = 2> <Delay = 1.70>
ST_4 : Operation 115 [1/1] (0.00ns)   --->   "%i_load_1 = load i32 %i"   --->   Operation 115 'load' 'i_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 116 [2/2] (1.58ns)   --->   "%call_ln283 = call void @equalizer_Pipeline_VITIS_LOOP_48_2, i32 %i_load_1, i1 %tmp_last_V, i32 %tmp_data_V, i32 %gmem, i64 %coefs_read, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V, i1 %tmp_last_V_1_loc"   --->   Operation 116 'call' 'call_ln283' <Predicate = true> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 117 [1/1] (1.70ns)   --->   "%store_ln0 = store i32 0, i32 %i"   --->   Operation 117 'store' 'store_ln0' <Predicate = true> <Delay = 1.70>

State 5 <SV = 3> <Delay = 0.00>
ST_5 : Operation 118 [1/2] (0.00ns)   --->   "%call_ln283 = call void @equalizer_Pipeline_VITIS_LOOP_48_2, i32 %i_load_1, i1 %tmp_last_V, i32 %tmp_data_V, i32 %gmem, i64 %coefs_read, i32 %input_r_V_data_V, i4 %input_r_V_keep_V, i4 %input_r_V_strb_V, i1 %input_r_V_user_V, i1 %input_r_V_last_V, i1 %input_r_V_id_V, i1 %input_r_V_dest_V, i1 %tmp_last_V_1_loc"   --->   Operation 118 'call' 'call_ln283' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 4> <Delay = 4.25>
ST_6 : Operation 119 [1/1] (0.00ns)   --->   "%tmp_last_V_1_loc_load = load i1 %tmp_last_V_1_loc"   --->   Operation 119 'load' 'tmp_last_V_1_loc_load' <Predicate = (state_load == 17)> <Delay = 0.00>
ST_6 : Operation 120 [1/1] (1.70ns)   --->   "%store_ln0 = store i32 4096, i32 %state"   --->   Operation 120 'store' 'store_ln0' <Predicate = (state_load == 17)> <Delay = 1.70>
ST_6 : Operation 121 [1/1] (1.70ns)   --->   "%store_ln0 = store i32 6.16039e-41, i32 %empty"   --->   Operation 121 'store' 'store_ln0' <Predicate = (state_load == 17)> <Delay = 1.70>
ST_6 : Operation 122 [1/1] (1.58ns)   --->   "%br_ln0 = br void %sw.epilog"   --->   Operation 122 'br' 'br_ln0' <Predicate = (state_load == 17)> <Delay = 1.58>
ST_6 : Operation 123 [1/1] (0.00ns)   --->   "%tmp_last_V_3 = phi i1 %tmp_last_V, void %for.inc, i1 %tmp_last_V, void %sw.bb, i1 %tmp_last_V_1_loc_load, void %VITIS_LOOP_48_2, i1 %tmp_last_V, void %while.body"   --->   Operation 123 'phi' 'tmp_last_V_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 124 [1/1] (0.00ns)   --->   "%i_2 = load i32 %i" [equalizer.cpp:92]   --->   Operation 124 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 125 [1/1] (2.55ns)   --->   "%i_3 = add i32 %i_2, i32 1" [equalizer.cpp:92]   --->   Operation 125 'add' 'i_3' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 126 [1/1] (1.70ns)   --->   "%store_ln34 = store i32 %i_3, i32 %i" [equalizer.cpp:34]   --->   Operation 126 'store' 'store_ln34' <Predicate = true> <Delay = 1.70>
ST_6 : Operation 127 [1/1] (0.00ns)   --->   "%br_ln34 = br i1 %tmp_last_V_3, void %while.body, void %while.end52" [equalizer.cpp:34]   --->   Operation 127 'br' 'br_ln34' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 128 [1/1] (0.00ns)   --->   "%ret_ln101 = ret" [equalizer.cpp:101]   --->   Operation 128 'ret' 'ret_ln101' <Predicate = (tmp_last_V_3)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 20ns, clock uncertainty: 5.4ns.

 <State 1>: 1.71ns
The critical path consists of the following:
	'alloca' operation ('i') [44]  (0 ns)
	'store' operation ('store_ln34', equalizer.cpp:34) of constant 0 on local variable 'i' [69]  (1.71 ns)

 <State 2>: 5.37ns
The critical path consists of the following:
	axis read operation ('empty_19') on port 'input_r_V_data_V' [76]  (0 ns)
	'icmp' operation ('icmp_ln41', equalizer.cpp:41) [151]  (2.47 ns)
	'select' operation ('select_ln9', equalizer.cpp:9) [154]  (1.19 ns)
	'store' operation ('store_ln45', equalizer.cpp:45) of variable 'select_ln9', equalizer.cpp:9 on local variable 'state' [157]  (1.71 ns)

 <State 3>: 1.71ns
The critical path consists of the following:
	'store' operation ('store_ln89', equalizer.cpp:89) of constant 4096 on local variable 'state' [138]  (1.71 ns)

 <State 4>: 1.71ns
The critical path consists of the following:
	'store' operation ('store_ln0') of constant 0 on local variable 'i' [145]  (1.71 ns)

 <State 5>: 0ns
The critical path consists of the following:

 <State 6>: 4.26ns
The critical path consists of the following:
	'load' operation ('i', equalizer.cpp:92) on local variable 'i' [162]  (0 ns)
	'add' operation ('i', equalizer.cpp:92) [163]  (2.55 ns)
	'store' operation ('store_ln34', equalizer.cpp:34) of variable 'i', equalizer.cpp:92 on local variable 'i' [164]  (1.71 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
